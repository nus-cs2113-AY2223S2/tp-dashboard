[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"   \u003e Task :classes","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"   ","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"   ","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"   What is your name?","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"## Build automation using Gradle","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"## Testing","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"### I/O redirection tests","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jeraldgau"},"content":"### JUnit tests","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"jeraldgau"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"jeraldgau"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"jeraldgau"},"content":"## Checkstyle","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"jeraldgau"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"jeraldgau"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"jeraldgau"},"content":"## CI using GitHub Actions","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"jeraldgau"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"jeraldgau"},"content":"## Documentation","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"jeraldgau"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"jeraldgau"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"jeraldgau"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"jeraldgau"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"jeraldgau"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"jeraldgau"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"jeraldgau"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"jeraldgau"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeraldgau":50,"-":14}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClass \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2022-06-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"thant"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thant":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Thant Aung Htet Nyan | [Github](https://github.com/) | [Portfolio](team/johndoe.md)","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jeremiah Ong | [Github](https://github.com/) | [Portfolio](team/johndoe.md)","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yan Zaiya | [Github](https://github.com/) | [Portfolio](team/johndoe.md)","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Gau Kiat Lok Jerald | [Github](https://github.com/jeraldgau) | [Portfolio](team/jeraldgau.md)","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Liang Ting-Yu | [Github](https://github.com/) | [Portfolio](team/johndoe.md)","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"jeraldgau":5,"-":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"thant"},"content":"## Architecture","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"thant"},"content":"![](https://lh3.googleusercontent.com/FwYOJJpyhNrHNAUjWo1grnsWCDHdKMosDWaJaI_3kqtVbfD8108yk0MeJaybK3ac0MOAL3EVKYYCUjSiAbBrwAT8wRBkPTj2UDfw3AdhPT0fB8twOxfRDfh3BGAawOUOUlt-rxSACvVOhvqRnFamqWM)","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"thant"},"content":"The **Architecture Diagram** given above explains the high-level design of Duck.","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"thant"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"thant"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"thant"},"content":"**Main components of the architecture**","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"thant"},"content":"```Duck``` is responsible for:","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"thant"},"content":"**At app launch:** ","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"thant"},"content":"-   Executes the ```Ui#greetingMessage()``` operation.","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"thant"},"content":"-   Initializes a new ArrayList tasks ","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"thant"},"content":"-   Populates the ArrayList by executing the ```Storage#tryLoad()``` operation.","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"thant"},"content":"-   Begins scanning for user inputs, and passing these inputs to ```Parser``` class.","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"thant"},"content":"-   At shut down: Shuts down the components and invokes the ```Ui#exitMessage()``` operation.","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"thant"},"content":"```Commons``` represents a collection of classes used by multiple other components, such as ```java.time.LocalDateTime```","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"thant"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"thant"},"content":"-   ```UI```: The UI of the App.","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"thant"},"content":"-   ```Parser```: The command executor.","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"thant"},"content":"-   ```Storage```: Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"thant"},"content":"-   ```TaskList```: Holds the data of Duck in memory.","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"thant"},"content":"```TaskList``` stores items that belong to 4 subclasses that draw upon a shared superclass.","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"thant"},"content":"```Task```: The skeleton superclass of all Tasks. ","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"thant"},"content":"-   ```ToDo```: Basic form of ```Task```","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"thant"},"content":"-   ```Deadline```: Expands upon ```Task``` by storing a ```by``` variable","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"thant"},"content":"-   ```Event```: Expands upon ```Task``` by storing ```start``` and ```end``` variable","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"thant"},"content":"-   ```SchoolClass```: Expands upon ```Task``` by storing ```start``` and ```end``` variable, along with a ```className``` variable","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"jeraldgau"},"content":"This section describes how Duck is implemented and how its commands are executed.","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"thant"},"content":"### Purge feature","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"thant"},"content":"**Sequence Diagram**","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"thant"},"content":"![image](https://user-images.githubusercontent.com/1620654/227128864-cfc9cac7-bc68-4962-ac45-77e1ae067db0.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"thant"},"content":"The ```TaskList#purge()``` command will be implemented following the sequence diagram as shown above.","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"thant"},"content":"**Implementation**","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"thant"},"content":"The ```TaskList#purge()``` command will be implemented to facilitate the removal of expired ```Task``` items from the ```TaskList```. This will be executed once upon Duck\u0027s startup, and can be further executed by inputting the term ```purge``` into the CLI when Duck is running. The following is the new operation to be implemented.","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"thant"},"content":"-   ```TaskList#purge()``` - Navigates through the ```TaskList``` array, and checks the date/time of each Task item within. If the date/time of a given ```Task``` has passed, it will be removed from the ```TaskList``` array. The user will be then able to view a total of how many ```Tasks``` were purged, along with what ```Task``` they were.","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"thant"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"thant"},"content":"**Given below is an example usage scenario for ```purge()```**","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"thant"},"content":"**Step 1.** The user launches the application for the first time. The ```TaskList``` will be initialized with the data from a given pre-existing datafile if it exists, and the ```Task``` items will be inserted into the ```TaskList```.![](https://lh5.googleusercontent.com/XcnArNZc5ZqHhxXZ1iRuq0aRxNKkcD_snVgDv-dlpMVYFQFQjyGXdtHWvFGzG-k2UW5SXkjQbthIRtkrol_SYsNgmsmKw1kKEkME0vSQ0tfRfUIWj3jZTTVrerHbESuA-AlTpPEkj8JrKl-mMlu-3yM)","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"thant"},"content":"**Step 2.** The ```TaskList#purge()``` command will be executed. The process is illustrated through two steps:","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"thant"},"content":"**Identifying all expired ```Task``` items in ```TaskList```.**","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"thant"},"content":"![](https://lh3.googleusercontent.com/Kbz7j3EmMGJGrIX1aQ8DCkHG8Y3gaIx3Ohf-zmYvr-S-LrxRqt8P1wlTMWUnlnna2tnR0i72yUJWB72Z2mWwGuwXiD_RnlIpYEk-MY6k9zMaLqTk_VkyHaRwIuzxi1trXHX1ySdZWBqZFDaCZ6K-QrY)","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"thant"},"content":"**Removing all expired ```Task``` items in ```TaskList```.**","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"thant"},"content":"![](https://lh4.googleusercontent.com/kVOcvIKAF1nlLSHXQsRPDuG6RwiyaqRXf9CYTLrv2WUezegCNx05GIC1KPYME6Eojid1hRbqUIzHUjKWRpYjUG7zCYE8586kLzbIrVdjZVnC5j_1ke1WBdFZSHoar_MuXKBA9eMARxCOgcja5qjP2_A)","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"thant"},"content":"The user will see this on his terminal after the ```purge``` command has executed.","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"thant"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"thant"},"content":"Quack! \u003cexpiredCount\u003e Tasks have expired! Purge proceeding...","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"thant"},"content":"2. [X if \u003cisDone\u003e, \" \" if !\u003cisDone\u003e] \u003cDeadline_1\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"thant"},"content":"4. [X if \u003cisDone\u003e, \" \" if !\u003cisDone\u003e] \u003cEvent_1\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"thant"},"content":"Purge Completed! Now we are one quack closer to finishing all tasks!","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"thant"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"thant"},"content":"**Step 3.** The ```Duck``` will continue to run as per usual. The user can choose to manually input the keyword purge into the CLI to repeat Step 2 above at any given time.","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"thant"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"thant"},"content":"### Clear feature","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"thant"},"content":"**Implementation**","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"thant"},"content":"The ```Storage#clear()``` command was implemented to facilitate the removal of all ```Task``` items from the ```TaskList```. Upon the entry of the keyword ```clear```, the new operation ```Ui#doubleCheck``` will prompt the user for an input of ```Y/N```.","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"thant"},"content":"-   If a ```Y``` is inputted, the operation ```Storage#clear()``` executes and removes all ```Task``` items from the ```TaskList```. Additionally, the ```savedata``` file located in ```\\data\\savedata.txt``` will also be deleted and recreated as a blank slate.","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"thant"},"content":"-   If a ```N``` is inputted, the operation ```Storage#clear()``` executes and removes all ```Task``` items from the ```TaskList```. Additionally, the ```savedata``` file located in ```\\data\\savedata.txt``` will also be deleted and recreated as a blank slate.","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"thant"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"thant"},"content":" The following are the new operations implemented.","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"thant"},"content":"-   ```Storage#clear()``` - Removes all ```Task``` items from the ```TaskList```. Additionally, the ```savedata``` file located in ```\\data\\savedata.txt``` will also be deleted and recreated as a blank slate.","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"thant"},"content":"-   ```Ui#doubleCheck``` - Prompts the user for further input. If a ```Y``` is inputted, the ```Storage#clear()``` operation is executed. Else if a ```N``` is inputted, the operation is cancelled.","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"thant"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"thant"},"content":"Given below is an example usage scenario for ```Storage#clear()```","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"thant"},"content":"**Step 1.** The user launches the application for the first time. The ```TaskList``` will be initialised with the data from a given pre-existing datafile if it exists, and the ```Task``` items will be inserted into the ```TaskList```.![](https://lh5.googleusercontent.com/XcnArNZc5ZqHhxXZ1iRuq0aRxNKkcD_snVgDv-dlpMVYFQFQjyGXdtHWvFGzG-k2UW5SXkjQbthIRtkrol_SYsNgmsmKw1kKEkME0vSQ0tfRfUIWj3jZTTVrerHbESuA-AlTpPEkj8JrKl-mMlu-3yM)","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"thant"},"content":"**Step 2.** The user wants to start afresh. The ```Storage#clear()```  command is then executed. The user will see an output in the following format:","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":134,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"thant"},"content":"THIS IS AN IRREVERSIBLE PROCESS. ARE YOU SURE? Y/N","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"thant"},"content":"**Step 3.1.** The user decides against clearing the ```TaskList```, and inputs a ```N```. The ```TaskList``` has no changes. ```Duck``` resumes after the output in the following format has been displayed:","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"thant"},"content":"Process cancelled.","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"thant"},"content":"**Step 3.2.** The user decides upon clearing the ```TaskList```, and inputs a ```Y```. The ```TaskList``` has been cleared.","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"thant"},"content":"![](https://lh4.googleusercontent.com/G4PalSoaVQxExSGKCDefJuO4TlyCJwrCfZDT4BsTrrSHMJ8aQSPsaxGoFJYb9YIO1yo3_3nV0Jar3Haqfac90v7G_yfZdx8-OwxSKEART5zLqMZ73k3YW0ssPbIE3kOhkbeusR3jVMdD6kTSkG7rK4s)","lastModifiedDate":"2023-03-22"},{"lineNumber":149,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"thant"},"content":"```Duck``` resumes after the output in the following format has been displayed:","lastModifiedDate":"2023-03-22"},{"lineNumber":151,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":154,"author":{"gitId":"thant"},"content":"Got it, all tasks have been cleared.","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"thant"},"content":" ```","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"jeraldgau"},"content":"### SchoolClass `list_classes` feature","lastModifiedDate":"2023-04-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":160,"author":{"gitId":"jeraldgau"},"content":"**Implementation**","lastModifiedDate":"2023-03-22"},{"lineNumber":161,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":162,"author":{"gitId":"jeraldgau"},"content":"The ```SchoolClass``` Class is implemented to facilitate the adding of students\u0027 classes to a separate schedule, which is a priority queue. It extends the ```Task``` Class with additional String attributes to store the class name, day of week, start time, and end time. It also overrides the ```toString()``` method to have its own specialised output when being printed, as well as overriding the ```toSaveString()``` method to correctly save its details to the save file. The ```SchoolClass``` Class will also facilitate the implementation of automatic time tracking of whether the class is over for the week, as well as sorting the SchoolClasses based on their day of week and start/end time. These two features are part of the ```list_classes``` feature, which lists out all the SchoolClasses stored in Duck.","lastModifiedDate":"2023-04-05"},{"lineNumber":163,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":164,"author":{"gitId":"jeraldgau"},"content":"The following are the new operations implemented.","lastModifiedDate":"2023-03-22"},{"lineNumber":165,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"jeraldgau"},"content":"-   ```TaskList#addSchoolClass()``` - Adds a SchoolClass to the schedule.","lastModifiedDate":"2023-04-05"},{"lineNumber":167,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"jeraldgau"},"content":"-   ```TaskList#deleteClass()``` - Removes a SchoolClass from the schedule.","lastModifiedDate":"2023-04-05"},{"lineNumber":169,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":170,"author":{"gitId":"jeraldgau"},"content":"-   ```Ui#listClasses()``` - Lists out all currently stored SchoolClasses according to day of week, start and end time in ascending order.","lastModifiedDate":"2023-04-05"},{"lineNumber":171,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":172,"author":{"gitId":"jeraldgau"},"content":"-   ```Storage#loadSchoolClass()``` - Adds a SchoolClass to the task list without generating a successfully added message, to be used when loading from the save data.","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"jeraldgau"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":176,"author":{"gitId":"jeraldgau"},"content":"**Given below is an example usage scenario for  TaskList#addSchoolClass().**","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":178,"author":{"gitId":"jeraldgau"},"content":"The user inputs a command following the proper formatting for adding a ```SchoolClass```. The sequence diagram for adding a SchoolClass is shown below","lastModifiedDate":"2023-04-05"},{"lineNumber":179,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":180,"author":{"gitId":"jeraldgau"},"content":"![image](https://user-images.githubusercontent.com/88079008/230120692-d4771d07-b228-400e-9968-aed978a323e6.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":181,"author":{"gitId":"jeraldgau"},"content":"  ","lastModifiedDate":"2023-03-22"},{"lineNumber":182,"author":{"gitId":"jeraldgau"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":183,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":184,"author":{"gitId":"jeraldgau"},"content":"**Given below is an example usage scenario for Ui#listClasses.**","lastModifiedDate":"2023-04-05"},{"lineNumber":185,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":186,"author":{"gitId":"jeraldgau"},"content":"The user inputs the command for ```list_classes```. The program then lists out all the SchoolClasses stored in Duck according to chronological order. The sequence diagram for Ui#listClasses is shown below.","lastModifiedDate":"2023-04-05"},{"lineNumber":187,"author":{"gitId":"jeraldgau"},"content":" ","lastModifiedDate":"2023-03-22"},{"lineNumber":188,"author":{"gitId":"jeraldgau"},"content":"![image](https://user-images.githubusercontent.com/88079008/230112915-fd04ca83-4d30-47c0-a3a4-c7a3c82e0b17.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":189,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":190,"author":{"gitId":"jeraldgau"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":192,"author":{"gitId":"skyanzy"},"content":"### Recurring deadlines and events feature","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"skyanzy"},"content":"**Implementation**","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"skyanzy"},"content":"The `RecurringDeadline` and `RecurringEvent` classes are implemented to facilitate the adding of deadlines and events that happen every week to the `TaskList`. They extend `Deadline` and `Event` respectively with an additional `DayOfWeek` attribute `day` to indicate which day of the week the task recurs on. They both override the `toString()` and `toSaveString()` methods to return the correct `String` representation for output to the user and storage. `RecurringDeadline` and `RecurringEvent` also have a public method `getDay()` to return the private attribute `day`.","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"skyanzy"},"content":"**The following new operations are implemented. **","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"skyanzy"},"content":"-   `TaskList#addRecurrDeadline()` -- adds a `RecurringDeadline` object to the task list","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"skyanzy"},"content":"-   `Storage#loadRecurrDeadline()` -- loads a `RecurringDeadline` from the saved data file to the task list","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"skyanzy"},"content":"-   `TaskList#addRecurrEvent()` -- adds a `RecurringEvent` object to the task list","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"skyanzy"},"content":"-   `Storage#loadRecurrEvent()` -- loads a `RecurringEvent` from the saved data file to the task list","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"skyanzy"},"content":"Below is a class diagram for the implementation","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"skyanzy"},"content":" ","lastModifiedDate":"2023-03-30"},{"lineNumber":210,"author":{"gitId":"skyanzy"},"content":" \u003cimg width\u003d\"859\" alt\u003d\"image\" src\u003d\"https://user-images.githubusercontent.com/88618401/228712251-dc8a6eb0-7483-4d01-b2f0-99f9c105aa9a.png\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"skyanzy"},"content":" ","lastModifiedDate":"2023-03-24"},{"lineNumber":213,"author":{"gitId":"skyanzy"},"content":" \u003cbr /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"skyanzy"},"content":" ","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"thant":147,"jeraldgau":34,"skyanzy":23,"-":37}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thant"},"content":"# Duck User Guide(v 2.0)","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"Duck is a **desktop app for managing tasks and deadlines, as well as a school class scheduler. It is optimised for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). Duck will have a number of quality-of-life features for busy students seeking a simple solution to task management. These include automated task removal upon expiration, or limiting the number of tasks displayed to within a date range. Duck also has recurring task functionality to automate routine tasks so users do not have to manually re-add expired tasks.","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"thant"},"content":"* [**Features**](#features)","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"thant"},"content":"    * [Viewing help :](#viewing-help--help) `help`","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"thant"},"content":"    * [Listing all tasks :](#listing-all-tasks--list) `list`","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"MichelleLiang0116"},"content":"    * [Listing all tasks and classes happening today :](#listing-all-tasks--list) `list_today`","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"thant"},"content":"    * [Listing all tasks up to X days into the future :](#listing-all-tasks-up-to-x-days-in-the-future--list-x) `list X`","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"MichelleLiang0116"},"content":"    * [Displaying upcoming deadline](#displaying-upcoming-deadline)","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"MichelleLiang0116"},"content":"    * [Displaying class schedule :](#displaying-class-schedule--list-classes) `list_classes`","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"MichelleLiang0116"},"content":"    * [Displaying upcoming class :](#displaying-upcoming-class--upcomingclass) `upcoming_class`","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"MichelleLiang0116"},"content":"    * [Displaying upcoming deadline :](#displaying-upcoming-class--upcomingdeadline) `upcoming_deadline`","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"MichelleLiang0116"},"content":"    * [Displaying_upcoming_event :](#displaying-upcoming-event--upcomingevent) `upcoming_event`","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"thant"},"content":"    * [Mark a specified task as done :](#marking-a-task--mark-task_number) `mark \u003ctask number\u003e `","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"thant"},"content":"    * [Unmark a specified task as  not done :](#unmarking-a-task--unmark-task_number) `unmark \u003ctask number\u003e`","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"skyanzy"},"content":"    * [Edit a specific piece information of a task :](#editing-a-task--edit-task_number) `edit \u003ctask number\u003e`","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"thant"},"content":"    * [Deleting a task :](#deleting-a-task--delete) `delete \u003ctask number\u003e `","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"    * [Deleting a school class :](#deleting-a-school-class--remove-class) `remove /class \u003cclass_name\u003e /description \u003cdescription\u003e /day \u003cDAY_OF_WEEK\u003e /from \u003cHHmm\u003e /to \u003cHHmm\u003e `","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"skyanzy"},"content":"    * [Designate a priority to a given task :](#designate-a-task-priority--priority-task_number-priority) `priority \u003ctask number\u003e \u003cpriority\u003e` ","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"skyanzy"},"content":"    * [Adding notes for a specific task :](#adding-notes-for-a-specific-task--add_note) `add_note \u003ctask number\u003e`","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"skyanzy"},"content":"    * [Deleting notes for a specific task :](#deleting-notes-for-a-specific-task--delete_note) `delete_note \u003ctask number\u003e`","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"skyanzy"},"content":"    * [Editing notes for a specific task :](#editing-notes-for-a-specific-task--edit_note) `edit_note \u003ctask number\u003e \u003cnote number\u003e`","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"skyanzy"},"content":"    * [Viewing notes for a specific task :](#printing-notes-for-a-specific-task--view_notes) `view_notes \u003ctask number\u003e`","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"thant"},"content":"    * [List tasks of low/medium/high priority :](#listing-all-low-priority-tasks--low_priority) `low_priority`/`medium_priority`/`high_priority`","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"thant"},"content":"    * [List tasks in priority order:](#listing-all-tasks-arranged-by-priority--priority_list) `priority_list`","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"thant"},"content":"    * [Purge expired tasks :](#purge-expired-tasks--purge) `purge`","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"thant"},"content":"    * [Clearing all tasks (including datafile) :](#clearing-tasks-from-storage-clear) `clear `","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"thant"},"content":"    * [Find tasks matching a given keyword :](#finding-tasks-from-storage-that-match-a-keyword-find-keyword) `find \u003ckeyword\u003e`","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"skyanzy"},"content":"    * [Add tasks that can be broken down into the following 6 types:](#adding-a-todo-task--todo-description)","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"skyanzy"},"content":"            * Add ToDo: /todo \u003cdescription\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"thant"},"content":"            * Add Deadline: \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"skyanzy"},"content":"            * Add RecurringDeadline: /re \u003cdescription\u003e /by \u003cHHmm\u003e /day \u003cDAY_OF_WEEK\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"thant"},"content":"            * Add Event: \u003cdescription\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"skyanzy"},"content":"            * Add RecurringEvent: /re \u003cdescription\u003e /from \u003cHHmm\u003e /to \u003cHHmm\u003e /day \u003cDAY_OF_WEEK\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"            * Add Class: \u003cdescription\u003e /class \u003cclass_name\u003e /day \u003cDAY_OF_WEEK\u003e /from \u003cHHmm\u003e /to \u003cHHmm\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"thant"},"content":"    * [Terminate the program :](#exiting-the-program--bye) `bye`","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"thant"},"content":"# Features","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"thant"},"content":"## **Viewing help : `help`**","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"thant"},"content":"Displays all available commands and their input format on the terminal.","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"thant"},"content":"**Input:** `help`","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"thant"},"content":"**Output:**","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"thant"},"content":"（`･v･´ ）: Here are the commands you can give me: ","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"thant"},"content":"COMMAND_FORMAT : COMMAND_FUNCTIONALITY EXPLANATION","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"thant"},"content":".","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"thant"},"content":".","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"thant"},"content":".","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"thant"},"content":"（`･v･´ ）: How else may I assist you today, human?","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"thant"},"content":"## **Listing all tasks : `list`**","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"thant"},"content":"Displays all tasks currently stored in the application.","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"thant"},"content":"**Input:** `list`","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"jeraldgau"},"content":"**Output: Demonstrated with 1 of each type currently in the stored list of tasks**","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"thant"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"thant"},"content":"\t 1.\t [T][ ] todo (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"thant"},"content":"\t 2.\t [D][ ] deadline (by: 2023-03-25 2359) (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"thant"},"content":"\t 3.\t [E][ ] event (from: 2023-03-25 1200 to: 2023-03-26 2359) (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"MichelleLiang0116"},"content":"## **Listing all tasks and classes happening today : `list_today`**","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"skyanzy"},"content":"Displays all deadlines, events and classes happening today.","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"MichelleLiang0116"},"content":"**Input:** `list_today`","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"skyanzy"},"content":"**Output: Demonstrated with 1 of each type currently in the stored data array**","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"skyanzy"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"skyanzy"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"skyanzy"},"content":"\t Here is your class schedule for today","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"skyanzy"},"content":"\t [WEDNESDAY][X] cs2113 (from: 1200 to: 1300)","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"skyanzy"},"content":"\t Here are your tasks today","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"thant"},"content":"\t [D][ ] sleep (by: 2023-03-29 2000) (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"thant"},"content":"\t [D][ ] shower (by: 2000) (every WEDNESDAY) (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"thant"},"content":"\t [E][ ] study (from: 2023-03-29 2100 to: 2023-04-23 2300) (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"thant"},"content":"\t [E][ ] study (from: 0800 to: 2300) (every WEDNESDAY) (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"skyanzy"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"skyanzy"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"MichelleLiang0116"},"content":"## **Displaying upcoming deadline**","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"MichelleLiang0116"},"content":"Displays upcoming deadline stored in the application when starting the application. ","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"MichelleLiang0116"},"content":"**Output: The upcoming deadline with remaining time before the deadline**","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"MichelleLiang0116"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"MichelleLiang0116"},"content":"Here are the upcoming deadline:  ","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"MichelleLiang0116"},"content":"1.Eat bread (1 day 26 hours 50 minutes before the deadline)","lastModifiedDate":"2023-03-31"},{"lineNumber":112,"author":{"gitId":"MichelleLiang0116"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"MichelleLiang0116"},"content":"## **Displaying class schedule : `list_classes`**","lastModifiedDate":"2023-03-31"},{"lineNumber":115,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"jeraldgau"},"content":"Displays all School Classes currently stored in the application. Classes will be automatically sorted according to chronological order. Classes will also automatically be marked as done (represented by a cross) if the current time is past the ending time of the class, and their \u0027done\u0027 status will be reset at the start of each week.","lastModifiedDate":"2023-03-31"},{"lineNumber":117,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"MichelleLiang0116"},"content":"**Input:** `list_classes`","lastModifiedDate":"2023-03-31"},{"lineNumber":119,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"jeraldgau"},"content":"**Output: Demonstrated with classes with different names and start/end times, with some already past their end time**","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"jeraldgau"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"jeraldgau"},"content":"Here is your class schedule:","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"jeraldgau"},"content":"    [MONDAY][X] eg2501 (from: 1600 to: 1800)","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"jeraldgau"},"content":"    [TUESDAY][X] ee2026 (from: 0900 to: 1200)","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"jeraldgau"},"content":"    [TUESDAY][ ] cs2113 (from: 1600 to: 1700)","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"jeraldgau"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"MichelleLiang0116"},"content":"## **Displaying upcoming class : `upcoming_class`**","lastModifiedDate":"2023-03-31"},{"lineNumber":132,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":133,"author":{"gitId":"MichelleLiang0116"},"content":"Displays the next upcoming class stored in the application. Classes will be automatically sorted according to chronological order. Classes will also automatically be marked as done (represented by a cross) if the current time is past the ending time of the class, and their \u0027done\u0027 status will be reset at the start of each week.","lastModifiedDate":"2023-03-31"},{"lineNumber":134,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":135,"author":{"gitId":"MichelleLiang0116"},"content":"**Input:** `upcoming_class`","lastModifiedDate":"2023-03-31"},{"lineNumber":136,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"MichelleLiang0116"},"content":"**Output: The next upcoming class with names and start/end times**","lastModifiedDate":"2023-03-31"},{"lineNumber":138,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":139,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":140,"author":{"gitId":"MichelleLiang0116"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":141,"author":{"gitId":"MichelleLiang0116"},"content":"Here is your next upcoming class:","lastModifiedDate":"2023-03-31"},{"lineNumber":142,"author":{"gitId":"MichelleLiang0116"},"content":"    [TUESDAY][ ] cs2113 (from: 1600 to: 1700)","lastModifiedDate":"2023-03-31"},{"lineNumber":143,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":144,"author":{"gitId":"MichelleLiang0116"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"MichelleLiang0116"},"content":"## **Displaying upcoming class : `upcoming_deadline`**","lastModifiedDate":"2023-04-05"},{"lineNumber":146,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"MichelleLiang0116"},"content":"Displays the next upcoming deadline stored in the application.","lastModifiedDate":"2023-04-05"},{"lineNumber":148,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":149,"author":{"gitId":"MichelleLiang0116"},"content":"**Input:** `upcoming_deadline`","lastModifiedDate":"2023-04-05"},{"lineNumber":150,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":151,"author":{"gitId":"MichelleLiang0116"},"content":"**Output: The next upcoming deadline with names and due time**","lastModifiedDate":"2023-04-05"},{"lineNumber":152,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":153,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":154,"author":{"gitId":"MichelleLiang0116"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":155,"author":{"gitId":"MichelleLiang0116"},"content":"Here are your next upcoming event: ","lastModifiedDate":"2023-04-05"},{"lineNumber":156,"author":{"gitId":"MichelleLiang0116"},"content":"    [D][ ] Deadlines Eat bread (by: 2023-04-05 2015) (Medium priority.)","lastModifiedDate":"2023-04-05"},{"lineNumber":157,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":158,"author":{"gitId":"MichelleLiang0116"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":159,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":160,"author":{"gitId":"MichelleLiang0116"},"content":"## **Displaying upcoming event : `upcoming_event`**","lastModifiedDate":"2023-04-05"},{"lineNumber":161,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":162,"author":{"gitId":"MichelleLiang0116"},"content":"Displays the next upcoming event stored in the application.","lastModifiedDate":"2023-04-05"},{"lineNumber":163,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":164,"author":{"gitId":"MichelleLiang0116"},"content":"**Input:** `upcoming_event`","lastModifiedDate":"2023-04-05"},{"lineNumber":165,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":166,"author":{"gitId":"MichelleLiang0116"},"content":"**Output: The next upcoming event with names and start/end time**","lastModifiedDate":"2023-04-05"},{"lineNumber":167,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":168,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":169,"author":{"gitId":"MichelleLiang0116"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":170,"author":{"gitId":"MichelleLiang0116"},"content":"Here are your next upcoming event: ","lastModifiedDate":"2023-04-05"},{"lineNumber":171,"author":{"gitId":"MichelleLiang0116"},"content":"    [E][ ] Meeting (from: 2023-04-15 2015 to: 2023-04-15 2215) (Low priority.)","lastModifiedDate":"2023-04-05"},{"lineNumber":172,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":173,"author":{"gitId":"MichelleLiang0116"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":174,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"miahjerry"},"content":"## **Listing all low priority tasks : `low_priority`**","lastModifiedDate":"2023-03-26"},{"lineNumber":176,"author":{"gitId":"miahjerry"},"content":"Displays all tasks that have been assigned low priority  ","lastModifiedDate":"2023-03-26"},{"lineNumber":177,"author":{"gitId":"miahjerry"},"content":"If there are no tasks in the low priority list, another message will be shown","lastModifiedDate":"2023-03-26"},{"lineNumber":178,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":179,"author":{"gitId":"miahjerry"},"content":"**Input:** `low_priority`  ","lastModifiedDate":"2023-03-26"},{"lineNumber":180,"author":{"gitId":"miahjerry"},"content":"**Output: Demonstrated with 1 of each data type currently in the stored data array**","lastModifiedDate":"2023-03-26"},{"lineNumber":181,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":182,"author":{"gitId":"miahjerry"},"content":"Quack!","lastModifiedDate":"2023-03-26"},{"lineNumber":183,"author":{"gitId":"miahjerry"},"content":"\t You have 3 tasks that are low in priority!","lastModifiedDate":"2023-03-26"},{"lineNumber":184,"author":{"gitId":"miahjerry"},"content":"\t1.\t [T][ ] Water plants (Low priority.)","lastModifiedDate":"2023-03-26"},{"lineNumber":185,"author":{"gitId":"miahjerry"},"content":"\t2.\t [D][ ] Submit CS2113 quiz (by: 2023-03-31 2359) (Low priority.)","lastModifiedDate":"2023-03-26"},{"lineNumber":186,"author":{"gitId":"miahjerry"},"content":"\t3.\t [E][ ] CS2113 lecture (from: 2023-03-30 1100 to: 2023-03-30 1200) (Low priority.)","lastModifiedDate":"2023-03-26"},{"lineNumber":187,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":188,"author":{"gitId":"miahjerry"},"content":"**If no tasks in low priority list:**","lastModifiedDate":"2023-03-26"},{"lineNumber":189,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":190,"author":{"gitId":"miahjerry"},"content":"There are no tasks that are low in priority!","lastModifiedDate":"2023-03-26"},{"lineNumber":191,"author":{"gitId":"miahjerry"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-26"},{"lineNumber":192,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":193,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":194,"author":{"gitId":"miahjerry"},"content":"## **Listing all medium priority tasks : `medium_priority`**","lastModifiedDate":"2023-03-26"},{"lineNumber":195,"author":{"gitId":"miahjerry"},"content":"Displays all tasks that have been assigned medium priority  ","lastModifiedDate":"2023-03-26"},{"lineNumber":196,"author":{"gitId":"miahjerry"},"content":"If there are no tasks in the medium priority list, another message will be shown","lastModifiedDate":"2023-03-26"},{"lineNumber":197,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":198,"author":{"gitId":"miahjerry"},"content":"**Input:** `medium_priority`  ","lastModifiedDate":"2023-03-26"},{"lineNumber":199,"author":{"gitId":"miahjerry"},"content":"**Output: Demonstrated with 1 of each data type currently in the stored data array**","lastModifiedDate":"2023-03-26"},{"lineNumber":200,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":201,"author":{"gitId":"miahjerry"},"content":"QUACK QUACK!!","lastModifiedDate":"2023-03-26"},{"lineNumber":202,"author":{"gitId":"miahjerry"},"content":"\t You have 3 tasks that are medium in priority!","lastModifiedDate":"2023-03-26"},{"lineNumber":203,"author":{"gitId":"miahjerry"},"content":"\t1.\t [T][ ] Water plants (Medium priority.)","lastModifiedDate":"2023-03-26"},{"lineNumber":204,"author":{"gitId":"miahjerry"},"content":"\t2.\t [D][ ] Submit CS2113 quiz (by: 2023-03-31 2359) (Medium priority.)","lastModifiedDate":"2023-03-26"},{"lineNumber":205,"author":{"gitId":"miahjerry"},"content":"\t3.\t [E][ ] CS2113 lecture (from: 2023-03-30 1100 to: 2023-03-30 1200) (Medium priority.)","lastModifiedDate":"2023-03-26"},{"lineNumber":206,"author":{"gitId":"miahjerry"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-26"},{"lineNumber":207,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":208,"author":{"gitId":"miahjerry"},"content":"**If no tasks in medium priority list:**","lastModifiedDate":"2023-03-26"},{"lineNumber":209,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":210,"author":{"gitId":"miahjerry"},"content":"There are no tasks that are medium in priority!","lastModifiedDate":"2023-03-26"},{"lineNumber":211,"author":{"gitId":"miahjerry"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-26"},{"lineNumber":212,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":213,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":214,"author":{"gitId":"miahjerry"},"content":"## **Listing all high priority tasks : `high_priority`**","lastModifiedDate":"2023-03-26"},{"lineNumber":215,"author":{"gitId":"miahjerry"},"content":"Displays all tasks that have been assigned high priority  ","lastModifiedDate":"2023-03-26"},{"lineNumber":216,"author":{"gitId":"miahjerry"},"content":"If there are no tasks in the high priority list, another message will be shown","lastModifiedDate":"2023-03-26"},{"lineNumber":217,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":218,"author":{"gitId":"miahjerry"},"content":"**Input:** `high_priority`  ","lastModifiedDate":"2023-03-26"},{"lineNumber":219,"author":{"gitId":"miahjerry"},"content":"**Output: Demonstrated with 1 of each data type currently in the stored data array**","lastModifiedDate":"2023-03-26"},{"lineNumber":220,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":221,"author":{"gitId":"miahjerry"},"content":"QUACK QUACK QUACK!!!","lastModifiedDate":"2023-03-26"},{"lineNumber":222,"author":{"gitId":"miahjerry"},"content":"\t You have 3 tasks that are high in priority!","lastModifiedDate":"2023-03-26"},{"lineNumber":223,"author":{"gitId":"miahjerry"},"content":"\t1.\t [T][ ] Water plants (High priority.)","lastModifiedDate":"2023-03-26"},{"lineNumber":224,"author":{"gitId":"miahjerry"},"content":"\t2.\t [D][ ] Submit CS2113 quiz (by: 2023-03-31 2359) (High priority.)","lastModifiedDate":"2023-03-26"},{"lineNumber":225,"author":{"gitId":"miahjerry"},"content":"\t3.\t [E][ ] CS2113 lecture (from: 2023-03-30 1100 to: 2023-03-30 1200) (High priority.)","lastModifiedDate":"2023-03-26"},{"lineNumber":226,"author":{"gitId":"miahjerry"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-26"},{"lineNumber":227,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":228,"author":{"gitId":"miahjerry"},"content":"**If no tasks in high priority list:**","lastModifiedDate":"2023-03-26"},{"lineNumber":229,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":230,"author":{"gitId":"miahjerry"},"content":"There are no tasks that are high in priority!","lastModifiedDate":"2023-03-26"},{"lineNumber":231,"author":{"gitId":"miahjerry"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-26"},{"lineNumber":232,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":233,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":234,"author":{"gitId":"miahjerry"},"content":"## **Listing all tasks arranged by priority : `priority_list`**","lastModifiedDate":"2023-03-26"},{"lineNumber":235,"author":{"gitId":"miahjerry"},"content":"Displays all tasks arranged by priority","lastModifiedDate":"2023-03-26"},{"lineNumber":236,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":237,"author":{"gitId":"miahjerry"},"content":"**Input:** `priority_list`  ","lastModifiedDate":"2023-03-26"},{"lineNumber":238,"author":{"gitId":"miahjerry"},"content":"**Output: Demonstrated with 1 task in each priority list**","lastModifiedDate":"2023-03-26"},{"lineNumber":239,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":240,"author":{"gitId":"miahjerry"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-26"},{"lineNumber":241,"author":{"gitId":"miahjerry"},"content":"\t Here are the tasks in your list arranged by priority:","lastModifiedDate":"2023-03-26"},{"lineNumber":242,"author":{"gitId":"miahjerry"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-26"},{"lineNumber":243,"author":{"gitId":"miahjerry"},"content":"\t QUACK QUACK QUACK!!!","lastModifiedDate":"2023-03-26"},{"lineNumber":244,"author":{"gitId":"miahjerry"},"content":"\t You have 1 tasks that are high in priority!","lastModifiedDate":"2023-03-26"},{"lineNumber":245,"author":{"gitId":"miahjerry"},"content":"\t1.\t [E][ ] CS2113 lecture (from: 2023-03-30 1100 to: 2023-03-30 1200) (High priority.)","lastModifiedDate":"2023-03-26"},{"lineNumber":246,"author":{"gitId":"miahjerry"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-26"},{"lineNumber":247,"author":{"gitId":"miahjerry"},"content":"\t QUACK QUACK!!","lastModifiedDate":"2023-03-26"},{"lineNumber":248,"author":{"gitId":"miahjerry"},"content":"\t You have 1 tasks that are medium in priority!","lastModifiedDate":"2023-03-26"},{"lineNumber":249,"author":{"gitId":"miahjerry"},"content":"\t1.\t [T][ ] Water plants (Medium priority.)","lastModifiedDate":"2023-03-26"},{"lineNumber":250,"author":{"gitId":"miahjerry"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-26"},{"lineNumber":251,"author":{"gitId":"miahjerry"},"content":"\t Quack!","lastModifiedDate":"2023-03-26"},{"lineNumber":252,"author":{"gitId":"miahjerry"},"content":"\t You have 1 tasks that are low in priority!","lastModifiedDate":"2023-03-26"},{"lineNumber":253,"author":{"gitId":"miahjerry"},"content":"\t1.\t [D][ ] Submit CS2113 quiz (by: 2023-03-31 2359) (Low priority.)","lastModifiedDate":"2023-03-26"},{"lineNumber":254,"author":{"gitId":"miahjerry"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-26"},{"lineNumber":255,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":256,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":257,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":258,"author":{"gitId":"thant"},"content":"## **Listing all tasks up to X days in the future : `list X`**","lastModifiedDate":"2023-03-24"},{"lineNumber":259,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":260,"author":{"gitId":"thant"},"content":"Displays all tasks currently stored in the application, up to X days into the future.","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"thant"},"content":"For instance \u003ccode\u003elist 0\u003cstrong\u003e\u003c/strong\u003e\u003c/code\u003ereturns all tasks that are starting within 24 hours.","lastModifiedDate":"2023-03-24"},{"lineNumber":263,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":264,"author":{"gitId":"thant"},"content":"**Input:** `list X `","lastModifiedDate":"2023-03-24"},{"lineNumber":265,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":266,"author":{"gitId":"thant"},"content":"**Output:  Demonstrated by inputting \u003ccode\u003elist 0\u003c/code\u003e on 24/3/2023 12:40, using the same array as above\u003c/strong\u003e**","lastModifiedDate":"2023-03-24"},{"lineNumber":267,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":268,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":269,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":270,"author":{"gitId":"thant"},"content":" Here are your tasks in 0 days:","lastModifiedDate":"2023-03-24"},{"lineNumber":271,"author":{"gitId":"thant"},"content":"\t 1.\t [E][ ] event (from: 2023-03-25 1200 to: 2023-03-26 2359) (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":272,"author":{"gitId":"jeraldgau"},"content":"\t 2.\t [D][ ] Submit CS2113 quiz (by: 2023-03-31 2359) (Low priority.)","lastModifiedDate":"2023-03-31"},{"lineNumber":273,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":274,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":275,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":276,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":277,"author":{"gitId":"thant"},"content":"## **Marking a task : `mark \u003cTask_Number\u003e`**","lastModifiedDate":"2023-03-24"},{"lineNumber":278,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":279,"author":{"gitId":"thant"},"content":"Marks a task from the tasklist as complete.","lastModifiedDate":"2023-03-24"},{"lineNumber":280,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":281,"author":{"gitId":"thant"},"content":"**Input: `mark \u003cTask_Number\u003e`**","lastModifiedDate":"2023-03-24"},{"lineNumber":282,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":283,"author":{"gitId":"thant"},"content":"**Output:  Demonstrated with input `mark 1`**","lastModifiedDate":"2023-03-24"},{"lineNumber":284,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":285,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":286,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":287,"author":{"gitId":"thant"},"content":"Understood. I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-24"},{"lineNumber":288,"author":{"gitId":"thant"},"content":"\t \t [T][X] todo (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":289,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":290,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":291,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":292,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":293,"author":{"gitId":"thant"},"content":"## **Unmarking a task : `unmark \u003cTask_Number\u003e`**","lastModifiedDate":"2023-03-24"},{"lineNumber":294,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":295,"author":{"gitId":"thant"},"content":"Unmarks a task from the tasklist as not complete.","lastModifiedDate":"2023-03-24"},{"lineNumber":296,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":297,"author":{"gitId":"thant"},"content":"**Input:** `unmark \u003cTask_Number\u003e`","lastModifiedDate":"2023-03-24"},{"lineNumber":298,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":299,"author":{"gitId":"thant"},"content":"**Output:  Demonstrated with input `unmark 1`**","lastModifiedDate":"2023-03-24"},{"lineNumber":300,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":301,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":302,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":303,"author":{"gitId":"thant"},"content":" Understood. I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-03-24"},{"lineNumber":304,"author":{"gitId":"thant"},"content":"\t \t [T][ ] todo (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":305,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":306,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":307,"author":{"gitId":"skyanzy"},"content":"## **Editing a task : `edit \u003cTask_Number\u003e`**","lastModifiedDate":"2023-03-31"},{"lineNumber":308,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":309,"author":{"gitId":"skyanzy"},"content":"Edits a specific piece of information of a task.","lastModifiedDate":"2023-03-31"},{"lineNumber":310,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":311,"author":{"gitId":"skyanzy"},"content":"**Input:** `edit \u003cTask_Number\u003e`","lastModifiedDate":"2023-03-31"},{"lineNumber":312,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":313,"author":{"gitId":"skyanzy"},"content":"**Output: Demonstrated with input `edit 2`**","lastModifiedDate":"2023-03-31"},{"lineNumber":314,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":315,"author":{"gitId":"skyanzy"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":316,"author":{"gitId":"skyanzy"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":317,"author":{"gitId":"skyanzy"},"content":"\t Please edit one of the following:","lastModifiedDate":"2023-03-31"},{"lineNumber":318,"author":{"gitId":"skyanzy"},"content":"\t For non-recurring deadlines: /description or /deadline","lastModifiedDate":"2023-03-31"},{"lineNumber":319,"author":{"gitId":"skyanzy"},"content":"\t For recurring deadlines: /description or /deadline or /day","lastModifiedDate":"2023-03-31"},{"lineNumber":320,"author":{"gitId":"skyanzy"},"content":"\t Please follow the format: ","lastModifiedDate":"2023-03-31"},{"lineNumber":321,"author":{"gitId":"skyanzy"},"content":"\t /description \u003cnew_description\u003e or /deadline \u003cnew_deadline\u003e or /day \u003cNEW_DAY_OF_WEEK\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":322,"author":{"gitId":"skyanzy"},"content":"\t e.g. /deadline 2023-06-30 1200 or /deadline 1200 (for recurring deadlines)","lastModifiedDate":"2023-03-31"},{"lineNumber":323,"author":{"gitId":"skyanzy"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":324,"author":{"gitId":"skyanzy"},"content":"**Following output: Demonstrated with input `/deadline 2023-04-01 2000`**","lastModifiedDate":"2023-03-31"},{"lineNumber":325,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":326,"author":{"gitId":"skyanzy"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":327,"author":{"gitId":"skyanzy"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":328,"author":{"gitId":"skyanzy"},"content":"\t Quack!","lastModifiedDate":"2023-03-31"},{"lineNumber":329,"author":{"gitId":"skyanzy"},"content":"\t I have changed your task to:","lastModifiedDate":"2023-03-31"},{"lineNumber":330,"author":{"gitId":"skyanzy"},"content":"\t \t [D][ ] deadline (by: 2023-04-01 2000) (Low priority.)","lastModifiedDate":"2023-03-31"},{"lineNumber":331,"author":{"gitId":"skyanzy"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":332,"author":{"gitId":"skyanzy"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":333,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":334,"author":{"gitId":"thant"},"content":"## **Deleting a task : `delete`**","lastModifiedDate":"2023-03-24"},{"lineNumber":335,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":336,"author":{"gitId":"thant"},"content":"Removes a task from the tasklist.","lastModifiedDate":"2023-03-24"},{"lineNumber":337,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":338,"author":{"gitId":"thant"},"content":"**Input:** `delete \u003cTask_Number\u003e`","lastModifiedDate":"2023-03-24"},{"lineNumber":339,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":340,"author":{"gitId":"thant"},"content":"**Output:  Demonstrated with removing the following task**","lastModifiedDate":"2023-03-24"},{"lineNumber":341,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":342,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":343,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":344,"author":{"gitId":"thant"},"content":"Understood. I have removed this task:","lastModifiedDate":"2023-03-24"},{"lineNumber":345,"author":{"gitId":"thant"},"content":"\t  [T][ ] todo (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":346,"author":{"gitId":"thant"},"content":"You now have 3 tasks in your list.","lastModifiedDate":"2023-03-24"},{"lineNumber":347,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":348,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":349,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":350,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":351,"author":{"gitId":"jeraldgau"},"content":"## **Deleting a school class : `remove class`**","lastModifiedDate":"2023-03-29"},{"lineNumber":352,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":353,"author":{"gitId":"jeraldgau"},"content":"Removes a school class from the schedule.","lastModifiedDate":"2023-03-29"},{"lineNumber":354,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":355,"author":{"gitId":"jeraldgau"},"content":"**Input:** `remove /class \u003cclass_name\u003e /description \u003cdescription\u003e /day \u003cDAY_OF_WEEK\u003e /from \u003cHHmm\u003e /to \u003cHHmm\u003e`","lastModifiedDate":"2023-03-30"},{"lineNumber":356,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":357,"author":{"gitId":"jeraldgau"},"content":"`\u003cdescription\u003e` can be left empty if the class has no description.","lastModifiedDate":"2023-03-31"},{"lineNumber":358,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":359,"author":{"gitId":"jeraldgau"},"content":"eg. `remove /class cs2113 /description /day THURSDAY /from 1100 /to 1200`","lastModifiedDate":"2023-03-31"},{"lineNumber":360,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":361,"author":{"gitId":"jeraldgau"},"content":"**Output:  Demonstrated with input `remove class /class CS2113 /description bring laptop /day THURSDAY /from 1100 /to 1200`**","lastModifiedDate":"2023-03-31"},{"lineNumber":362,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":363,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":364,"author":{"gitId":"jeraldgau"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":365,"author":{"gitId":"jeraldgau"},"content":"Class has been deleted successfully.","lastModifiedDate":"2023-03-29"},{"lineNumber":366,"author":{"gitId":"jeraldgau"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":367,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":368,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":369,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":370,"author":{"gitId":"thant"},"content":"## **Designate a task priority : `priority \u003cTask_Number\u003e \u003cpriority\u003e`**","lastModifiedDate":"2023-03-24"},{"lineNumber":371,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":372,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":373,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":374,"author":{"gitId":"thant"},"content":"Specifies a priority for a given task, with the following assignments: ","lastModifiedDate":"2023-03-24"},{"lineNumber":375,"author":{"gitId":"thant"},"content":"* 1 - Low ","lastModifiedDate":"2023-03-24"},{"lineNumber":376,"author":{"gitId":"thant"},"content":"* 2 - Medium ","lastModifiedDate":"2023-03-24"},{"lineNumber":377,"author":{"gitId":"thant"},"content":"* 3 - High ","lastModifiedDate":"2023-03-24"},{"lineNumber":378,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":379,"author":{"gitId":"miahjerry"},"content":"By default, all tasks are low priority.","lastModifiedDate":"2023-03-31"},{"lineNumber":380,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":381,"author":{"gitId":"thant"},"content":"**Input:** `priority \u003cTask_Number\u003e \u003cpriority\u003e`","lastModifiedDate":"2023-03-24"},{"lineNumber":382,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":383,"author":{"gitId":"thant"},"content":"**Output:  Demonstrated with input `priority 1 1`**","lastModifiedDate":"2023-03-24"},{"lineNumber":384,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":385,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":386,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":387,"author":{"gitId":"thant"},"content":"Understood. The task\u0027s new priority is:","lastModifiedDate":"2023-03-24"},{"lineNumber":388,"author":{"gitId":"thant"},"content":"\t Low priority.","lastModifiedDate":"2023-03-24"},{"lineNumber":389,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":390,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":391,"author":{"gitId":"skyanzy"},"content":"## **Adding notes for a specific task : `add_note`**","lastModifiedDate":"2023-03-31"},{"lineNumber":392,"author":{"gitId":"miahjerry"},"content":"Adds a note to the specified task","lastModifiedDate":"2023-03-31"},{"lineNumber":393,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":394,"author":{"gitId":"miahjerry"},"content":"**Input:** `add_note \u003cTask_Number\u003e`  ","lastModifiedDate":"2023-03-31"},{"lineNumber":395,"author":{"gitId":"miahjerry"},"content":"**Output: Demonstrated below adding \"Bring own recyclable bag\"**","lastModifiedDate":"2023-03-31"},{"lineNumber":396,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":397,"author":{"gitId":"miahjerry"},"content":"    What note would you like to add to the following task?","lastModifiedDate":"2023-03-31"},{"lineNumber":398,"author":{"gitId":"miahjerry"},"content":"        [T][ ] Buy groceries (Low priority.)","lastModifiedDate":"2023-03-31"},{"lineNumber":399,"author":{"gitId":"miahjerry"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":400,"author":{"gitId":"miahjerry"},"content":"Bring own recyclable bag","lastModifiedDate":"2023-03-31"},{"lineNumber":401,"author":{"gitId":"miahjerry"},"content":"    The note has been added!","lastModifiedDate":"2023-03-31"},{"lineNumber":402,"author":{"gitId":"miahjerry"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":403,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":404,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":405,"author":{"gitId":"skyanzy"},"content":"## **Deleting notes for a specific task : `delete_note`**","lastModifiedDate":"2023-03-31"},{"lineNumber":406,"author":{"gitId":"miahjerry"},"content":"Deletes the specified note for the task","lastModifiedDate":"2023-04-03"},{"lineNumber":407,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":408,"author":{"gitId":"miahjerry"},"content":"**Input:** `delete_note \u003cTask_Number\u003e \u003cNote_number\u003e`  ","lastModifiedDate":"2023-03-31"},{"lineNumber":409,"author":{"gitId":"miahjerry"},"content":"**Output: Demonstrated below to delete 1 task**","lastModifiedDate":"2023-03-31"},{"lineNumber":410,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":411,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":412,"author":{"gitId":"miahjerry"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":413,"author":{"gitId":"miahjerry"},"content":"\t Deleting note: ","lastModifiedDate":"2023-03-31"},{"lineNumber":414,"author":{"gitId":"miahjerry"},"content":"\t \tBring own recyclable bag","lastModifiedDate":"2023-03-31"},{"lineNumber":415,"author":{"gitId":"miahjerry"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":416,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":417,"author":{"gitId":"skyanzy"},"content":"## **Editing notes for a specific task : `edit_note`**","lastModifiedDate":"2023-03-31"},{"lineNumber":418,"author":{"gitId":"miahjerry"},"content":"Edits the specified note for a specific task.","lastModifiedDate":"2023-03-31"},{"lineNumber":419,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":420,"author":{"gitId":"miahjerry"},"content":"**Input:** `edit_note \u003cTask_Number\u003e \u003cNote_Number\u003e`  ","lastModifiedDate":"2023-03-31"},{"lineNumber":421,"author":{"gitId":"miahjerry"},"content":"**Output: Demonstrated below to edit \"Bring recyclable bag\" to \"Bring tote bag\"**","lastModifiedDate":"2023-03-31"},{"lineNumber":422,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":423,"author":{"gitId":"miahjerry"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":424,"author":{"gitId":"miahjerry"},"content":"\t What would you like to change the note to? ","lastModifiedDate":"2023-03-31"},{"lineNumber":425,"author":{"gitId":"miahjerry"},"content":"\t\tBring recyclable bag","lastModifiedDate":"2023-03-31"},{"lineNumber":426,"author":{"gitId":"miahjerry"},"content":"Bring tote bag","lastModifiedDate":"2023-03-31"},{"lineNumber":427,"author":{"gitId":"miahjerry"},"content":"\tThe specified note has been edited!","lastModifiedDate":"2023-03-31"},{"lineNumber":428,"author":{"gitId":"miahjerry"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":429,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":430,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":431,"author":{"gitId":"skyanzy"},"content":"## **Printing notes for a specific task : `view_notes`**","lastModifiedDate":"2023-03-31"},{"lineNumber":432,"author":{"gitId":"miahjerry"},"content":"Prints the notes for a specific task if they exist.   ","lastModifiedDate":"2023-03-31"},{"lineNumber":433,"author":{"gitId":"miahjerry"},"content":"Otherwise, a message stating that there are no notes for that task will be shown","lastModifiedDate":"2023-03-31"},{"lineNumber":434,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":435,"author":{"gitId":"miahjerry"},"content":"**Input:** `view_notes \u003cTask_Number\u003e`  ","lastModifiedDate":"2023-03-31"},{"lineNumber":436,"author":{"gitId":"miahjerry"},"content":"**Output: Demonstrated below for a task with 1 note**","lastModifiedDate":"2023-03-31"},{"lineNumber":437,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":438,"author":{"gitId":"miahjerry"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":439,"author":{"gitId":"miahjerry"},"content":"\tHere are the notes for that task quack!","lastModifiedDate":"2023-03-31"},{"lineNumber":440,"author":{"gitId":"miahjerry"},"content":"\t\t\t [T][ ] Buy groceries (Low priority.)","lastModifiedDate":"2023-03-31"},{"lineNumber":441,"author":{"gitId":"miahjerry"},"content":"\t1. Bring own recyclable bag","lastModifiedDate":"2023-03-31"},{"lineNumber":442,"author":{"gitId":"miahjerry"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":443,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":444,"author":{"gitId":"miahjerry"},"content":"**Output: Demonstrated below for a task with no notes**","lastModifiedDate":"2023-03-31"},{"lineNumber":445,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":446,"author":{"gitId":"miahjerry"},"content":"        ____________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":447,"author":{"gitId":"miahjerry"},"content":"\tHere are the notes for that task quack!","lastModifiedDate":"2023-03-31"},{"lineNumber":448,"author":{"gitId":"miahjerry"},"content":"\t\t\t [T][ ] Buy groceries (Low priority.)","lastModifiedDate":"2023-03-31"},{"lineNumber":449,"author":{"gitId":"miahjerry"},"content":"\tThere are no notes for this task!","lastModifiedDate":"2023-03-31"},{"lineNumber":450,"author":{"gitId":"miahjerry"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":451,"author":{"gitId":"miahjerry"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":452,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":453,"author":{"gitId":"thant"},"content":"## **Purge Expired Tasks : `purge`**","lastModifiedDate":"2023-03-24"},{"lineNumber":454,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":455,"author":{"gitId":"thant"},"content":"Prompts the user for confirmation. Proceeds to remove all expired tasks from storage upon confirmation. This operation is automatically executed once upon Duck’s startup.","lastModifiedDate":"2023-03-24"},{"lineNumber":456,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":457,"author":{"gitId":"thant"},"content":"**Input:** `purge`","lastModifiedDate":"2023-03-24"},{"lineNumber":458,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":459,"author":{"gitId":"thant"},"content":"**Output: Demonstrated by having an expired deadline task in the array**","lastModifiedDate":"2023-03-24"},{"lineNumber":460,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":461,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":462,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":463,"author":{"gitId":"thant"},"content":" Displaying all expired tasks below...","lastModifiedDate":"2023-03-24"},{"lineNumber":464,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":465,"author":{"gitId":"thant"},"content":"\t [D][ ] deadline (by: 2023-03-24 1100) (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":466,"author":{"gitId":"thant"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":467,"author":{"gitId":"thant"},"content":"\t Quack! A total of 1 task has expired!","lastModifiedDate":"2023-03-24"},{"lineNumber":468,"author":{"gitId":"thant"},"content":"\t Should I remove these tasks from the pending list human?","lastModifiedDate":"2023-03-24"},{"lineNumber":469,"author":{"gitId":"thant"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":470,"author":{"gitId":"thant"},"content":"\t THIS IS AN IRREVERSIBLE PROCESS. ARE YOU SURE? Y/N","lastModifiedDate":"2023-03-24"},{"lineNumber":471,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":472,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":473,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":474,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":475,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":476,"author":{"gitId":"thant"},"content":"* **If the user inputs ‘Y’:** ","lastModifiedDate":"2023-03-24"},{"lineNumber":477,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":478,"author":{"gitId":"thant"},"content":"Expired Tasks have been purged from the list!","lastModifiedDate":"2023-03-24"},{"lineNumber":479,"author":{"gitId":"thant"},"content":"I love purging things,human...","lastModifiedDate":"2023-03-24"},{"lineNumber":480,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":481,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":482,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":483,"author":{"gitId":"thant"},"content":"* **If the user inputs ‘N’:** ","lastModifiedDate":"2023-03-24"},{"lineNumber":484,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":485,"author":{"gitId":"thant"},"content":"Quack! Expired tasks have not been purged.","lastModifiedDate":"2023-03-24"},{"lineNumber":486,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":487,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":488,"author":{"gitId":"thant"},"content":"## **Clearing tasks from storage: `clear`**","lastModifiedDate":"2023-03-24"},{"lineNumber":489,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":490,"author":{"gitId":"thant"},"content":"Prompts the user for confirmation. Proceeds to clear all tasks from storage upon confirmation.","lastModifiedDate":"2023-03-24"},{"lineNumber":491,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":492,"author":{"gitId":"thant"},"content":"**Input:** `clear`","lastModifiedDate":"2023-03-24"},{"lineNumber":493,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":494,"author":{"gitId":"thant"},"content":"**Output:** ","lastModifiedDate":"2023-03-24"},{"lineNumber":495,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":496,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":497,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":498,"author":{"gitId":"thant"},"content":"THIS IS AN IRREVERSIBLE PROCESS. ARE YOU SURE? Y/N","lastModifiedDate":"2023-03-24"},{"lineNumber":499,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":500,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":501,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":502,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":503,"author":{"gitId":"thant"},"content":"* **If the user inputs ‘Y’:** `Got it, all tasks have been cleared.`","lastModifiedDate":"2023-03-24"},{"lineNumber":504,"author":{"gitId":"thant"},"content":"* **If the user inputs ‘N’:** `Quack! Process cancelled.`","lastModifiedDate":"2023-03-24"},{"lineNumber":505,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":506,"author":{"gitId":"thant"},"content":"## **Finding tasks from storage that match a keyword: `find \u003ckeyword\u003e`**","lastModifiedDate":"2023-03-24"},{"lineNumber":507,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":508,"author":{"gitId":"thant"},"content":"Traverses through the stored tasks to return all tasks that contain the keyword","lastModifiedDate":"2023-03-24"},{"lineNumber":509,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":510,"author":{"gitId":"thant"},"content":"**Input:** `find \u003ckeyword\u003e`","lastModifiedDate":"2023-03-24"},{"lineNumber":511,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":512,"author":{"gitId":"thant"},"content":"**Output: Demonstrated by using the keyword `todo`**","lastModifiedDate":"2023-03-24"},{"lineNumber":513,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":514,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":515,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":516,"author":{"gitId":"thant"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-03-24"},{"lineNumber":517,"author":{"gitId":"thant"},"content":"1.\t [T][ ] todo (Low priority.)   || The index of this item is 1","lastModifiedDate":"2023-04-04"},{"lineNumber":518,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":519,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":520,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":521,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":522,"author":{"gitId":"skyanzy"},"content":"## **Adding a ToDo Task : `/todo \u003cdescription\u003e`**","lastModifiedDate":"2023-04-06"},{"lineNumber":523,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":524,"author":{"gitId":"thant"},"content":"Adds a ToDo task to the storage of Duck","lastModifiedDate":"2023-03-24"},{"lineNumber":525,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":526,"author":{"gitId":"skyanzy"},"content":"**Input:** `/todo \u003cdescription\u003e`","lastModifiedDate":"2023-04-06"},{"lineNumber":527,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":528,"author":{"gitId":"skyanzy"},"content":"**Output:  Demonstrated by inputting `/todo todo`**","lastModifiedDate":"2023-04-06"},{"lineNumber":529,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":530,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":531,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":532,"author":{"gitId":"thant"},"content":"Alright, I have added this task: ","lastModifiedDate":"2023-03-24"},{"lineNumber":533,"author":{"gitId":"thant"},"content":"\t[T][ ] todo (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":534,"author":{"gitId":"thant"},"content":"You now have 2 tasks in your list.","lastModifiedDate":"2023-03-24"},{"lineNumber":535,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":536,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":537,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":538,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":539,"author":{"gitId":"thant"},"content":"## **Adding a Deadline Task : `\u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e`**","lastModifiedDate":"2023-03-24"},{"lineNumber":540,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":541,"author":{"gitId":"thant"},"content":"Adds a Deadline task to the storage of Duck","lastModifiedDate":"2023-03-24"},{"lineNumber":542,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":543,"author":{"gitId":"thant"},"content":"**Input:** `\u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e`","lastModifiedDate":"2023-03-24"},{"lineNumber":544,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":545,"author":{"gitId":"thant"},"content":"**Output:  Demonstrated by inputting `deadline /by 2023-03-25 2359`**","lastModifiedDate":"2023-03-24"},{"lineNumber":546,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":547,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":548,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":549,"author":{"gitId":"thant"},"content":"Alright, I have added this task: ","lastModifiedDate":"2023-03-24"},{"lineNumber":550,"author":{"gitId":"thant"},"content":"\t[D][ ] deadline (by: 2023-03-25 2359) (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":551,"author":{"gitId":"thant"},"content":"You now have 3 tasks in your list.","lastModifiedDate":"2023-03-24"},{"lineNumber":552,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":553,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":554,"author":{"gitId":"skyanzy"},"content":"## **Adding a RecurringDeadline Task : `/re \u003cdescription\u003e /by \u003cHHmm\u003e /day \u003cDAY_OF_WEEK\u003e`**","lastModifiedDate":"2023-03-31"},{"lineNumber":555,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":556,"author":{"gitId":"skyanzy"},"content":"Adds a RecurringDeadline task to the storage of Duck","lastModifiedDate":"2023-03-31"},{"lineNumber":557,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":558,"author":{"gitId":"skyanzy"},"content":"**Input:** `/re \u003cdescription\u003e /by \u003cHHmm\u003e /day \u003cDAY_OF_WEEK\u003e`","lastModifiedDate":"2023-03-31"},{"lineNumber":559,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":560,"author":{"gitId":"skyanzy"},"content":"**Output:  Demonstrated by inputting `/re new_deadline /by 2359 /day MONDAY`**","lastModifiedDate":"2023-03-31"},{"lineNumber":561,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":562,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":563,"author":{"gitId":"skyanzy"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":564,"author":{"gitId":"skyanzy"},"content":"Alright, I have added this task: ","lastModifiedDate":"2023-03-31"},{"lineNumber":565,"author":{"gitId":"skyanzy"},"content":"\t[D][ ] new_deadline (by: 2359) (every MONDAY) (Low priority.)","lastModifiedDate":"2023-03-31"},{"lineNumber":566,"author":{"gitId":"skyanzy"},"content":"You now have 4 tasks in your list.","lastModifiedDate":"2023-03-31"},{"lineNumber":567,"author":{"gitId":"skyanzy"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":568,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":569,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":570,"author":{"gitId":"thant"},"content":"## **Adding an Event Task : `\u003cdescription\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e`**","lastModifiedDate":"2023-03-24"},{"lineNumber":571,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":572,"author":{"gitId":"thant"},"content":"Adds an Event task to the storage of Duck","lastModifiedDate":"2023-03-24"},{"lineNumber":573,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":574,"author":{"gitId":"thant"},"content":"**Input:** `\u003cdescription\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e`","lastModifiedDate":"2023-03-24"},{"lineNumber":575,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":576,"author":{"gitId":"thant"},"content":"**Output:  Demonstrated by inputting `event /from 2023-03-25 2359 /to 2023-03-26 1100`**","lastModifiedDate":"2023-03-24"},{"lineNumber":577,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":578,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":579,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":580,"author":{"gitId":"thant"},"content":"Alright, I have added this task: ","lastModifiedDate":"2023-03-24"},{"lineNumber":581,"author":{"gitId":"thant"},"content":"\t[E][ ] event (from: 2023-03-25 2359 to: 2023-03-26 1100) (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":582,"author":{"gitId":"skyanzy"},"content":"You now have 5 tasks in your list.","lastModifiedDate":"2023-03-31"},{"lineNumber":583,"author":{"gitId":"skyanzy"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":584,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":585,"author":{"gitId":"skyanzy"},"content":"## **Adding an RecurringEvent Task : `/re \u003cdescription\u003e /from \u003cHHmm\u003e /to \u003cHHmm\u003e /day \u003cDAY_OF_WEEK\u003e`**","lastModifiedDate":"2023-03-31"},{"lineNumber":586,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":587,"author":{"gitId":"skyanzy"},"content":"Adds a RecurringEvent task to the storage of Duck","lastModifiedDate":"2023-03-31"},{"lineNumber":588,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":589,"author":{"gitId":"skyanzy"},"content":"**Input:** `/re \u003cdescription\u003e /from \u003cHHmm\u003e /to \u003cHHmm\u003e /day \u003cDAY_OF_WEEK\u003e`","lastModifiedDate":"2023-03-31"},{"lineNumber":590,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":591,"author":{"gitId":"skyanzy"},"content":"**Output:  Demonstrated by inputting `/re new_event /from 2000 /to 2300 /day MONDAY`**","lastModifiedDate":"2023-03-31"},{"lineNumber":592,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":593,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":594,"author":{"gitId":"skyanzy"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":595,"author":{"gitId":"skyanzy"},"content":"Alright, I have added this task: ","lastModifiedDate":"2023-03-31"},{"lineNumber":596,"author":{"gitId":"thant"},"content":"\t[E][ ] new_event (from: 2000 to: 2300) (every MONDAY) (Low priority.)","lastModifiedDate":"2023-04-04"},{"lineNumber":597,"author":{"gitId":"skyanzy"},"content":"You now have 6 tasks in your list.","lastModifiedDate":"2023-03-31"},{"lineNumber":598,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":599,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":600,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":601,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":602,"author":{"gitId":"jeraldgau"},"content":"## **Adding a School Class : `\u003cdescription\u003e /class \u003cclass_name\u003e /day \u003cDAY_OF_WEEK\u003e /from \u003cHHmm\u003e /to \u003cHHmm\u003e`**","lastModifiedDate":"2023-03-29"},{"lineNumber":603,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":604,"author":{"gitId":"thant"},"content":"Adds a Class task to the storage of Duck","lastModifiedDate":"2023-03-24"},{"lineNumber":605,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":606,"author":{"gitId":"jeraldgau"},"content":"**Input:** `\u003cdescription\u003e /class \u003cclass_name\u003e /day \u003cDAY_OF_WEEK\u003e /from \u003cHHmm\u003e /to \u003cHHmm\u003e`","lastModifiedDate":"2023-03-29"},{"lineNumber":607,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":608,"author":{"gitId":"jeraldgau"},"content":"**Output:  Demonstrated by inputting `Bring laptop /class CS2113 /day THURSDAY /from 1100 /to 1200`**","lastModifiedDate":"2023-03-29"},{"lineNumber":609,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":610,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":611,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":612,"author":{"gitId":"thant"},"content":"Alright, I have added this task: ","lastModifiedDate":"2023-03-24"},{"lineNumber":613,"author":{"gitId":"jeraldgau"},"content":"\t[THURSDAY][ ] CS2113: Bring laptop (from: 1100 to: 1200)","lastModifiedDate":"2023-03-29"},{"lineNumber":614,"author":{"gitId":"jeraldgau"},"content":"You now have 1 class in your schedule.","lastModifiedDate":"2023-03-29"},{"lineNumber":615,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":616,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":617,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":618,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":619,"author":{"gitId":"thant"},"content":"## **Exiting the program : `bye`**","lastModifiedDate":"2023-03-24"},{"lineNumber":620,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":621,"author":{"gitId":"thant"},"content":"Exits the program.","lastModifiedDate":"2023-03-24"},{"lineNumber":622,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":623,"author":{"gitId":"thant"},"content":"**Input:** `bye`","lastModifiedDate":"2023-03-24"},{"lineNumber":624,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":625,"author":{"gitId":"thant"},"content":"**Output:** ","lastModifiedDate":"2023-03-24"},{"lineNumber":626,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":627,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":628,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":629,"author":{"gitId":"thant"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-24"},{"lineNumber":630,"author":{"gitId":"thant"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":631,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":632,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":633,"author":{"gitId":"thant"},"content":"## **Saving the data :**","lastModifiedDate":"2023-03-24"},{"lineNumber":634,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":635,"author":{"gitId":"thant"},"content":"Duck’s data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"thant":281,"jeraldgau":48,"MichelleLiang0116":62,"miahjerry":137,"skyanzy":88,"-":19}},{"path":"docs/team/MichelleLiang0116.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MichelleLiang0116"},"content":"# LIANG TING YU - Project Portfolio Page","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"MichelleLiang0116"},"content":"## Project: Duck","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"MichelleLiang0116"},"content":"### Duck is a desktop app for managing tasks and deadlines, as well as a school class scheduler. It is optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"MichelleLiang0116"},"content":"### Summary of Contributions: ","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"MichelleLiang0116"},"content":"#### • New Feature: Display upcoming deadline/event when starting application","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"MichelleLiang0116"},"content":"#### • New Feature: Display next upcoming deadline/event/task/class","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"MichelleLiang0116"},"content":"#### Code contributed: ","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"MichelleLiang0116"},"content":"#### Enhancements implemented: ","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"MichelleLiang0116"},"content":"#### Contributions to the UG: ","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"MichelleLiang0116"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"MichelleLiang0116"},"content":"#### Review/mentoring contributions:","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"MichelleLiang0116":13}},{"path":"docs/team/jeraldgau.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"# Jerald Gau - Project Portfolio Page","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"## Overview","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"Duck is a desktop task and class tracker for users to keep track of their schedule and the things they have to do. The user interacts with it using the CLI. It is written in Java, and has about 3.5kLoc.","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"## Summary of Contributions","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"### Base Code: Contributed code from iP Duke bot to serve as a base to work upon.","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"- Justification: Duck is an improved version of the Duke bot, building upon the pre-existing functionality of Duke with enhanced features like date/time tracking, as well as a new school class scheduler. As such, it made sense to reuse code from the iP and add in features from there.","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"### New Feature: Implementation of the ```SchoolClass``` Task","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"- Makes use of the jave.time package for registering valid start/end timings, as well as java.time.DayOfWeek to register valid days in a week. This facilitates the time tracking feature.","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"- Revamped how saving and loading from savefile works from the iP base code, in order to account for the new SchoolClass Task. The saving and loading of task priorities was also tweaked in order for it to work with adding SchoolClasses to the savefile.","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"### New Feature: Class schedule with automatic time tracking","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"- SchoolClasses will be added to a separate list which automatically sorts them based on their registered day of week, and starting/ending time.","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"- The SchoolClasses will be automatically marked as done when the current time is past their registered ending time, and their done status will be reset to not done at the start of a new week.","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"### New Feature: ```list_classes```","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"- Displays all the currently registered SchoolClasses saved in Duck, and lists them out based on their day of week, starting and ending time. ","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"- Shows whether the class is over for the week, with a \"done\" marker [X] shown on the left of each class.","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"### New Feature: Adding a SchoolClass","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"- By following the specified format as indicated in the User Guide, users will be able to add SchoolClasses to their schedule which are saved to the savefile.","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"### New Feature: Removing a SchoolClass","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"- By Following the specified format as indicated in the User Guide, users will be able to remove unwanted SchoolClasses from their schedule.","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"### Code Contributed: [RepoSense Link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003djeraldgau\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"jeraldgau"},"content":"### Project Management:","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"jeraldgau"},"content":"- Managed the releases ```v1.0``` - ```v2.0``` (2 releases) on GitHub","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"jeraldgau"},"content":"### Documentation:","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"jeraldgau"},"content":"- User Guide:","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"jeraldgau"},"content":"  - Added documentation for the features ```list_classes```, ```remove class``` and ```Adding a School Class```","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"jeraldgau"},"content":"  ","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"jeraldgau"},"content":"- Developer Guide:","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"jeraldgau"},"content":"  - Added design and implementation details of the SchoolClass feature","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"jeraldgau"},"content":"  - Added the sequence diagram for the ```Adding a School Class``` function","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"jeraldgau"},"content":"  - Added the sequence diagram for the ```list_classes``` function","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"jeraldgau"},"content":"### Community:","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"jeraldgau"},"content":"- Reported bugs and suggestions for other teams (examples: [1](https://github.com/jeraldgau/ped/issues/9), [2](https://github.com/jeraldgau/ped/issues/7), [3](https://github.com/jeraldgau/ped/issues/5))","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"jeraldgau":56}},{"path":"src/main/java/seedu/duck/Duck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.SchoolClass;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"thant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"public class Duck {","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"    /** Runs the Duck bot */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"thant"},"content":"    private static void runDuck() throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"        Ui.greetingMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"        PriorityQueue\u003cSchoolClass\u003e classes \u003d new PriorityQueue\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"        Storage.tryLoad(tasks, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"        TaskList.purge(tasks, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"MichelleLiang0116"},"content":"        Ui.displayUpcomingDeadline(tasks);","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"MichelleLiang0116"},"content":"        Ui.displayUpcomingEvent(tasks);","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"        String line;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"        Parser.processCommand(tasks, classes, line, in);","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"        Ui.exitMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"thant"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"        runDuck();","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"thant":3,"jeraldgau":29,"MichelleLiang0116":2}},{"path":"src/main/java/seedu/duck/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.SchoolClass;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"thant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":" * Deals with making sense of the user command","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"public class Parser {","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"     * Returns boolean value of true if input String is an integer,","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"     * else returns boolean value of false","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"     * @param word String input to check if it is an integer","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"     * @return true if input String is an integer, otherwise false","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"    public static boolean isNumeric(String word) {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"        int valueToConvert;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"            valueToConvert \u003d Integer.parseInt(word);","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"            // Empty catch block, since the only purpose is to return false","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"            // if try block fails.","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"        return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"     * Processes the user input and executes the appropriate command","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"     * @param line The line of user input","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jeraldgau"},"content":"     * @param in The input from scanner","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"thant"},"content":"    static void processCommand(ArrayList\u003cTask\u003e tasks, PriorityQueue\u003cSchoolClass\u003e classes, String line, Scanner in) throws IOException {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"thant"},"content":"        while (!line.trim().equals(\"bye\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"miahjerry"},"content":"            line \u003d line.trim().replaceAll(\"\\\\s{2,}\", \" \");","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"jeraldgau"},"content":"            String[] words \u003d line.split(\" \");","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"jeraldgau"},"content":"            if (line.isBlank()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"jeraldgau"},"content":"                Ui.emptyCommandMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"miahjerry"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"thant"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"thant"},"content":"                switch (words[0]) {","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"thant"},"content":"                case \"list\":","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"thant"},"content":"                    if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"jeraldgau"},"content":"                        Ui.list(tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"thant"},"content":"                    } else if (words.length \u003d\u003d 2 \u0026\u0026 isNumeric(words[1])) {","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"thant"},"content":"                        Ui.printUpcomingTasks(tasks, words[1]);","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"thant"},"content":"                    } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"thant"},"content":"                        Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"MichelleLiang0116"},"content":"                case \"event\":","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"MichelleLiang0116"},"content":"                    if(words.length\u003d\u003d2 \u0026\u0026 isNumeric(words[1])){","lastModifiedDate":"2023-04-03"},{"lineNumber":62,"author":{"gitId":"MichelleLiang0116"},"content":"                        Ui.printUpcomingEvents(tasks,words[1]);","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"MichelleLiang0116"},"content":"                    } else{","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"MichelleLiang0116"},"content":"                        Ui.unknownCommandMessage();","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"MichelleLiang0116"},"content":"                    }","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"MichelleLiang0116"},"content":"                    break;","lastModifiedDate":"2023-04-03"},{"lineNumber":67,"author":{"gitId":"MichelleLiang0116"},"content":"                case \"deadline\":","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"MichelleLiang0116"},"content":"                    if(words.length\u003d\u003d2 \u0026\u0026 isNumeric(words[1])){","lastModifiedDate":"2023-04-03"},{"lineNumber":69,"author":{"gitId":"MichelleLiang0116"},"content":"                        Ui.printUpcomingDeadline(tasks,words[1]);","lastModifiedDate":"2023-04-03"},{"lineNumber":70,"author":{"gitId":"MichelleLiang0116"},"content":"                    } else{","lastModifiedDate":"2023-04-03"},{"lineNumber":71,"author":{"gitId":"MichelleLiang0116"},"content":"                        Ui.unknownCommandMessage();","lastModifiedDate":"2023-04-03"},{"lineNumber":72,"author":{"gitId":"MichelleLiang0116"},"content":"                    }","lastModifiedDate":"2023-04-03"},{"lineNumber":73,"author":{"gitId":"MichelleLiang0116"},"content":"                    break;","lastModifiedDate":"2023-04-03"},{"lineNumber":74,"author":{"gitId":"thant"},"content":"                case \"list_today\":","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"skyanzy"},"content":"                    Ui.listToday(tasks, classes);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"thant"},"content":"                case \"priority_list\":","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"miahjerry"},"content":"                    Ui.printPriorityList(tasks);","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"thant"},"content":"                case \"low_priority\":","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"miahjerry"},"content":"                    Ui.printLowPriority(tasks);","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"thant"},"content":"                case \"medium_priority\":","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"miahjerry"},"content":"                    Ui.printMediumPriority(tasks);","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"thant"},"content":"                case \"high_priority\":","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"miahjerry"},"content":"                    Ui.printHighPriority(tasks);","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"thant"},"content":"                case \"list_classes\":","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"jeraldgau"},"content":"                    Ui.listClasses(classes, tasks);","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"thant"},"content":"                case \"help\":","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"thant"},"content":"                    Ui.help();","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"thant"},"content":"                case \"upcoming_class\":","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"MichelleLiang0116"},"content":"                    Ui.displayNextUpcomingClass(classes);","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"MichelleLiang0116"},"content":"                case \"upcoming_event\":","lastModifiedDate":"2023-04-03"},{"lineNumber":99,"author":{"gitId":"MichelleLiang0116"},"content":"                    Ui.displayNextUpcomingEvent(tasks);","lastModifiedDate":"2023-04-03"},{"lineNumber":100,"author":{"gitId":"MichelleLiang0116"},"content":"                    break;","lastModifiedDate":"2023-04-03"},{"lineNumber":101,"author":{"gitId":"MichelleLiang0116"},"content":"                case \"upcoming_deadline\":","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"MichelleLiang0116"},"content":"                    Ui.displayNextUpcomingDeadline(tasks);","lastModifiedDate":"2023-04-03"},{"lineNumber":103,"author":{"gitId":"MichelleLiang0116"},"content":"                    break;","lastModifiedDate":"2023-04-03"},{"lineNumber":104,"author":{"gitId":"MichelleLiang0116"},"content":"                case \"upcoming_task\":","lastModifiedDate":"2023-04-03"},{"lineNumber":105,"author":{"gitId":"MichelleLiang0116"},"content":"                    Ui.displayNextUpcomingTask(tasks);","lastModifiedDate":"2023-04-03"},{"lineNumber":106,"author":{"gitId":"MichelleLiang0116"},"content":"                    break;","lastModifiedDate":"2023-04-03"},{"lineNumber":107,"author":{"gitId":"thant"},"content":"                case \"unmark\":","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"thant"},"content":"                    if (words.length \u003d\u003d 2 \u0026\u0026 isNumeric(words[1])) {","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"jeraldgau"},"content":"                        TaskList.unmarkTask(tasks, words);","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"jeraldgau"},"content":"                        Storage.trySave(tasks, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":111,"author":{"gitId":"thant"},"content":"                    } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"thant"},"content":"                        Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"thant"},"content":"                case \"mark\":","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"thant"},"content":"                    if (words.length \u003d\u003d 2 \u0026\u0026 isNumeric(words[1])) {","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"jeraldgau"},"content":"                        TaskList.markTask(tasks, words);","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"jeraldgau"},"content":"                        Storage.trySave(tasks, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"thant"},"content":"                    } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"thant"},"content":"                        Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"thant"},"content":"                case \"delete\":","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"thant"},"content":"                    if (words.length \u003d\u003d 2 \u0026\u0026 isNumeric(words[1])) {","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"jeraldgau"},"content":"                        TaskList.deleteTask(tasks, words);","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"jeraldgau"},"content":"                        Storage.trySave(tasks, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":127,"author":{"gitId":"thant"},"content":"                    } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"thant"},"content":"                        Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"thant"},"content":"                case \"remove\":","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"jeraldgau"},"content":"                    if (words.length \u003e 1 \u0026\u0026 words[1].equals(\"/class\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"jeraldgau"},"content":"                        TaskList.tryDeleteClass(classes, line);","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"jeraldgau"},"content":"                        Storage.trySave(tasks, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"thant"},"content":"                    } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"thant"},"content":"                        Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"skyanzy"},"content":"                case \"edit\":","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"skyanzy"},"content":"                    if (words.length \u003d\u003d 2 \u0026\u0026 isNumeric(words[1])) {","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"skyanzy"},"content":"                        TaskList.tryEditTask(tasks, words);","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"skyanzy"},"content":"                        Storage.trySave(tasks, classes);","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"skyanzy"},"content":"                    } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"skyanzy"},"content":"                        Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"skyanzy"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"skyanzy"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"thant"},"content":"                case \"find\":","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"thant"},"content":"                    if (words.length \u003e 1) {","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"jeraldgau"},"content":"                        Ui.find(tasks, words);","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"thant"},"content":"                    } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"thant"},"content":"                        Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"thant"},"content":"                case \"purge\":","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"jeraldgau"},"content":"                    TaskList.purge(tasks, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":156,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"thant"},"content":"                case \"priority\":","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"thant"},"content":"                    if (words.length \u003d\u003d 3) {","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"thant"},"content":"                        TaskList.setPriority(tasks, words);","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"jeraldgau"},"content":"                        Storage.trySave(tasks, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":161,"author":{"gitId":"thant"},"content":"                    } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"thant"},"content":"                        Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"miahjerry"},"content":"                case \"add_notes\":","lastModifiedDate":"2023-04-03"},{"lineNumber":166,"author":{"gitId":"thant"},"content":"                    if(words.length \u003d\u003d 2 \u0026\u0026 isNumeric(words[1])){","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"miahjerry"},"content":"                        TaskList.addNote(tasks, words);","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"miahjerry"},"content":"                        Storage.trySave(tasks, classes);","lastModifiedDate":"2023-04-01"},{"lineNumber":169,"author":{"gitId":"thant"},"content":"                    }else{","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"thant"},"content":"                        Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"miahjerry"},"content":"                case \"delete_notes\":","lastModifiedDate":"2023-04-03"},{"lineNumber":174,"author":{"gitId":"thant"},"content":"                    if(words.length \u003d\u003d 3){","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"miahjerry"},"content":"                        TaskList.deleteNotes(tasks,words);","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"miahjerry"},"content":"                        Storage.trySave(tasks, classes);","lastModifiedDate":"2023-04-01"},{"lineNumber":177,"author":{"gitId":"thant"},"content":"                    } else{","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"thant"},"content":"                        Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"miahjerry"},"content":"                case \"view_notes\":","lastModifiedDate":"2023-03-31"},{"lineNumber":182,"author":{"gitId":"thant"},"content":"                    if(words.length \u003d\u003d 2 \u0026\u0026 isNumeric(words[1])) {","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"miahjerry"},"content":"                        Ui.printNotes(tasks, words);","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"thant"},"content":"                    }else{","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"thant"},"content":"                        Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"thant"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"miahjerry"},"content":"                case \"edit_notes\":","lastModifiedDate":"2023-04-03"},{"lineNumber":189,"author":{"gitId":"miahjerry"},"content":"                    if(words.length \u003d\u003d 3){","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"miahjerry"},"content":"                        TaskList.editNote(tasks, words);","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"miahjerry"},"content":"                        Storage.trySave(tasks, classes);","lastModifiedDate":"2023-04-01"},{"lineNumber":192,"author":{"gitId":"miahjerry"},"content":"                    }else{","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"miahjerry"},"content":"                        Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"miahjerry"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"miahjerry"},"content":"                    break;","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"thant"},"content":"                case \"clear\":","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"thant"},"content":"                    if (Ui.doubleCheck()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"thant"},"content":"                        // Find tasks that contain a keyword","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"thant"},"content":"                        tasks.clear();","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"thant"},"content":"                        Task.clearCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"jeraldgau"},"content":"                        classes.clear();","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"thant"},"content":"                        Ui.borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"thant"},"content":"                        System.out.println(\"\\t Got it, all tasks have been cleared.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"thant"},"content":"                        Ui.borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"thant"},"content":"                        Storage.clearTask();","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"thant"},"content":"                        break;","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"thant"},"content":"                    } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"thant"},"content":"                        Ui.borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"thant"},"content":"                        System.out.println(\"\\t Quack! Process cancelled.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"thant"},"content":"                        Ui.borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"thant"},"content":"                        break;","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"thant"},"content":"                default:","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"jeraldgau"},"content":"                    TaskList.addTask(line, tasks, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":215,"author":{"gitId":"jeraldgau"},"content":"                    Storage.trySave(tasks, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":216,"author":{"gitId":"miahjerry"},"content":"                    break;","lastModifiedDate":"2023-04-03"},{"lineNumber":217,"author":{"gitId":"jeraldgau"},"content":"                }","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"jeraldgau"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":219,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":221,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":223,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":224,"author":{"gitId":"jeraldgau"},"content":"     * Process the array of words from the user input and extracts the","lastModifiedDate":"2023-03-09"},{"lineNumber":225,"author":{"gitId":"jeraldgau"},"content":"     * keywords into a single string to use for the find function","lastModifiedDate":"2023-03-09"},{"lineNumber":226,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":227,"author":{"gitId":"jeraldgau"},"content":"     * @param words The array of words generated from the user input","lastModifiedDate":"2023-03-09"},{"lineNumber":228,"author":{"gitId":"jeraldgau"},"content":"     * @return The keywords string to use for the find function","lastModifiedDate":"2023-03-09"},{"lineNumber":229,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":230,"author":{"gitId":"miahjerry"},"content":"    static String processKeywords(String[] words,int index) {","lastModifiedDate":"2023-03-29"},{"lineNumber":231,"author":{"gitId":"jeraldgau"},"content":"        String rawKeyword \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":232,"author":{"gitId":"miahjerry"},"content":"        for (int i \u003d index; i \u003c words.length; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":233,"author":{"gitId":"jeraldgau"},"content":"            rawKeyword +\u003d (\" \" + words[i]);","lastModifiedDate":"2023-03-09"},{"lineNumber":234,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":235,"author":{"gitId":"jeraldgau"},"content":"        String keyword \u003d rawKeyword.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":236,"author":{"gitId":"jeraldgau"},"content":"        return keyword;","lastModifiedDate":"2023-03-09"},{"lineNumber":237,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":238,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"thant":101,"jeraldgau":79,"miahjerry":25,"MichelleLiang0116":24,"skyanzy":9}},{"path":"src/main/java/seedu/duck/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"skyanzy"},"content":"import seedu.duck.task.*;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"import java.io.File;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"thant"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"public class Storage {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"    static final String SAVEPATH \u003d \"data/savedata.txt\";","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"    static final String SAVEFOLDER \u003d \"data\";","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"miahjerry"},"content":"     * Load tasks and the notes under the task from save data into the list","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"     * @param line  The line of input from the save file","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"    static void loadTask(String line, ArrayList\u003cTask\u003e tasks, PriorityQueue\u003cSchoolClass\u003e classes, String doneStatus) {","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"        if (line.contains(\"/by\")) {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"skyanzy"},"content":"            if (line.contains(\"/day\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"MichelleLiang0116"},"content":"                loadRecurringDeadline(line, tasks);","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"skyanzy"},"content":"            } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"                loadDeadline(line, tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"skyanzy"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"            loadTaskStatus(tasks, doneStatus);","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"            Task.incrementCount();","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"        } else if (line.contains(\"/class\")) {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"            loadSchoolClass(line, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"        } else if (line.contains(\"/from\") || line.contains(\"/to\")) {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"skyanzy"},"content":"            if (line.contains(\"/day\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"MichelleLiang0116"},"content":"                loadRecurringEvent(line, tasks);","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"skyanzy"},"content":"            } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"jeraldgau"},"content":"                loadEvent(line, tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"skyanzy"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"jeraldgau"},"content":"            loadTaskStatus(tasks, doneStatus);","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"jeraldgau"},"content":"            Task.incrementCount();","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"jeraldgau"},"content":"            loadTodo(line, tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"jeraldgau"},"content":"            loadTaskStatus(tasks, doneStatus);","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"jeraldgau"},"content":"            Task.incrementCount();","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"thant"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"thant"},"content":"     * Deletes the existing savedata file then recreates a new blank slate.","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"thant"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"thant"},"content":"    static void clearTask() throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"thant"},"content":"        {","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"thant"},"content":"            try {","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"thant"},"content":"                FileWriter fw \u003d new FileWriter(SAVEPATH, false);","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"thant"},"content":"                PrintWriter pw \u003d new PrintWriter(fw, false);","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"thant"},"content":"                pw.flush();","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"thant"},"content":"                pw.close();","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"thant"},"content":"                fw.close();","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"thant"},"content":"            } catch (Exception exception) {","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"thant"},"content":"                System.out.println(\"Exception have been caught\");","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"thant"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"thant"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"jeraldgau"},"content":"     * Adds a _Todo_ into the list without generating messages,","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"jeraldgau"},"content":"     * to be used when loading from save data.","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"jeraldgau"},"content":"     * @param line  The line of input from the save file","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"jeraldgau"},"content":"    static void loadTodo(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"thant"},"content":"        String description \u003d line.substring(0, line.indexOf(\"\u003cp\u003e\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"thant"},"content":"        Todo currTodo \u003d new Todo(description);","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"miahjerry"},"content":"        String priority \u003d line.substring(line.indexOf(\"\u003cp\u003e\") + 3,line.indexOf(\"\u003cn\u003e\")).trim();","lastModifiedDate":"2023-04-01"},{"lineNumber":82,"author":{"gitId":"thant"},"content":"        currTodo.setPriority(priority);","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"jeraldgau"},"content":"        tasks.add(currTodo);","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"miahjerry"},"content":"        String savedNotes \u003d line.substring(line.indexOf(\"\u003cn\u003e\") + 3);","lastModifiedDate":"2023-04-01"},{"lineNumber":85,"author":{"gitId":"miahjerry"},"content":"        if (savedNotes.charAt(0) \u003d\u003d \u00271\u0027){","lastModifiedDate":"2023-04-01"},{"lineNumber":86,"author":{"gitId":"miahjerry"},"content":"            savedNotes \u003d savedNotes.substring(1);","lastModifiedDate":"2023-04-01"},{"lineNumber":87,"author":{"gitId":"miahjerry"},"content":"            String[] notesToBeAdded;","lastModifiedDate":"2023-04-01"},{"lineNumber":88,"author":{"gitId":"miahjerry"},"content":"            notesToBeAdded \u003d savedNotes.split(\"@\",0);","lastModifiedDate":"2023-04-01"},{"lineNumber":89,"author":{"gitId":"miahjerry"},"content":"                for (String item : notesToBeAdded) {","lastModifiedDate":"2023-04-01"},{"lineNumber":90,"author":{"gitId":"miahjerry"},"content":"                    tasks.get(tasks.size() - 1).addNotes(item);","lastModifiedDate":"2023-04-01"},{"lineNumber":91,"author":{"gitId":"miahjerry"},"content":"                }","lastModifiedDate":"2023-04-01"},{"lineNumber":92,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":93,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":96,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"jeraldgau"},"content":"     * Adds an event into the list without generating messages,","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"jeraldgau"},"content":"     * to be used when loading from save data.","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"jeraldgau"},"content":"     * @param line  The line of input from the save file","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"jeraldgau"},"content":"    static void loadEvent(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"jeraldgau"},"content":"        String start \u003d line.substring(line.indexOf(\"/from\") + 5, line.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"jeraldgau"},"content":"        String end \u003d line.substring(line.indexOf(\"/to\") + 3, line.indexOf(\"\u003cp\u003e\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"thant"},"content":"        String priority \u003d line.substring(line.indexOf(\"\u003cp\u003e\") + 3, line.indexOf(\"\u003cp\u003e\") + 4).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"jeraldgau"},"content":"        Event currEvent \u003d new Event(description, start, end);","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"thant"},"content":"        currEvent.setPriority(priority);","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"jeraldgau"},"content":"        tasks.add(currEvent);","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"miahjerry"},"content":"        String savedNotes \u003d line.substring(line.indexOf(\"\u003cn\u003e\") + 3);","lastModifiedDate":"2023-04-01"},{"lineNumber":112,"author":{"gitId":"miahjerry"},"content":"        if (savedNotes.charAt(0) \u003d\u003d \u00271\u0027){","lastModifiedDate":"2023-04-01"},{"lineNumber":113,"author":{"gitId":"miahjerry"},"content":"            savedNotes \u003d savedNotes.substring(1);","lastModifiedDate":"2023-04-01"},{"lineNumber":114,"author":{"gitId":"miahjerry"},"content":"            String[] notesToBeAdded;","lastModifiedDate":"2023-04-01"},{"lineNumber":115,"author":{"gitId":"miahjerry"},"content":"            notesToBeAdded \u003d savedNotes.split(\"@\",0);","lastModifiedDate":"2023-04-01"},{"lineNumber":116,"author":{"gitId":"miahjerry"},"content":"            for (String item : notesToBeAdded) {","lastModifiedDate":"2023-04-01"},{"lineNumber":117,"author":{"gitId":"miahjerry"},"content":"                tasks.get(tasks.size() - 1).addNotes(item);","lastModifiedDate":"2023-04-01"},{"lineNumber":118,"author":{"gitId":"miahjerry"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":119,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":120,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"MichelleLiang0116"},"content":"    static void loadRecurringEvent(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-31"},{"lineNumber":123,"author":{"gitId":"skyanzy"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"skyanzy"},"content":"        String start \u003d line.substring(line.indexOf(\"/from\") + 5, line.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"skyanzy"},"content":"        String end \u003d line.substring(line.indexOf(\"/to\") + 3, line.indexOf(\"\u003cp\u003e\")).trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"skyanzy"},"content":"        String priority \u003d line.substring(line.indexOf(\"\u003cp\u003e\") + 3, line.indexOf(\"/day\")).trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"skyanzy"},"content":"        DayOfWeek day \u003d DayOfWeek.valueOf(line.substring(line.indexOf(\"/day\") + 4).trim());","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"skyanzy"},"content":"        RecurringEvent currEvent \u003d new RecurringEvent(description, start, end, day);","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"skyanzy"},"content":"        currEvent.setPriority(priority);","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"skyanzy"},"content":"        tasks.add(currEvent);","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"jeraldgau"},"content":"     * Adds a schoolClass to the list without generating messages,","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"jeraldgau"},"content":"     * to be used when loading from save data.","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"jeraldgau"},"content":"     * @param line    The line of input from the user","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"jeraldgau"},"content":"     * @param classes The priority queue of school classes","lastModifiedDate":"2023-03-26"},{"lineNumber":139,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"jeraldgau"},"content":"    static void loadSchoolClass(String line, PriorityQueue\u003cSchoolClass\u003e classes) {","lastModifiedDate":"2023-03-26"},{"lineNumber":141,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/class\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"jeraldgau"},"content":"        String className \u003d line.substring(line.indexOf(\"/class\") + 6, line.indexOf(\"/day\")).trim();","lastModifiedDate":"2023-03-26"},{"lineNumber":143,"author":{"gitId":"jeraldgau"},"content":"        DayOfWeek day \u003d DayOfWeek.valueOf(line.substring(line.indexOf(\"/day\") + 4, line.indexOf(\"/from\")).trim());","lastModifiedDate":"2023-03-26"},{"lineNumber":144,"author":{"gitId":"jeraldgau"},"content":"        String startString \u003d line.substring(line.indexOf(\"/from\") + 5, line.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"jeraldgau"},"content":"        String endString \u003d line.substring(line.indexOf(\"/to\") + 3).trim();","lastModifiedDate":"2023-03-26"},{"lineNumber":146,"author":{"gitId":"jeraldgau"},"content":"        SchoolClass currSchoolClass \u003d new SchoolClass(className, description, day, startString, endString);","lastModifiedDate":"2023-03-26"},{"lineNumber":147,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"jeraldgau"},"content":"        TaskList.checkClassOver(day, endString, currSchoolClass);","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"jeraldgau"},"content":"        classes.add(currSchoolClass);","lastModifiedDate":"2023-03-26"},{"lineNumber":150,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"jeraldgau"},"content":"     * Adds a deadline into the list without generating messages,","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"jeraldgau"},"content":"     * to be used when loading from save data.","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"jeraldgau"},"content":"     * @param line  The line of input from the save file","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"jeraldgau"},"content":"    static void loadDeadline(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/by\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"jeraldgau"},"content":"        String deadline \u003d line.substring(line.indexOf(\"/by\") + 3, line.indexOf(\"\u003cp\u003e\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"thant"},"content":"        String priority \u003d line.substring(line.indexOf(\"\u003cp\u003e\") + 3, line.indexOf(\"\u003cp\u003e\") + 4).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":163,"author":{"gitId":"jeraldgau"},"content":"        Deadline currDeadline \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"thant"},"content":"        currDeadline.setPriority(priority);","lastModifiedDate":"2023-03-15"},{"lineNumber":165,"author":{"gitId":"skyanzy"},"content":"        tasks.add(currDeadline);","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"miahjerry"},"content":"        String savedNotes \u003d line.substring(line.indexOf(\"\u003cn\u003e\") + 3);","lastModifiedDate":"2023-04-01"},{"lineNumber":167,"author":{"gitId":"miahjerry"},"content":"        if (savedNotes.charAt(0) \u003d\u003d \u00271\u0027){","lastModifiedDate":"2023-04-01"},{"lineNumber":168,"author":{"gitId":"miahjerry"},"content":"            savedNotes \u003d savedNotes.substring(1);","lastModifiedDate":"2023-04-01"},{"lineNumber":169,"author":{"gitId":"miahjerry"},"content":"            String[] notesToBeAdded;","lastModifiedDate":"2023-04-01"},{"lineNumber":170,"author":{"gitId":"miahjerry"},"content":"            notesToBeAdded \u003d savedNotes.split(\"@\",0);","lastModifiedDate":"2023-04-01"},{"lineNumber":171,"author":{"gitId":"miahjerry"},"content":"            for (String item : notesToBeAdded) {","lastModifiedDate":"2023-04-01"},{"lineNumber":172,"author":{"gitId":"miahjerry"},"content":"                tasks.get(tasks.size() - 1).addNotes(item);","lastModifiedDate":"2023-04-01"},{"lineNumber":173,"author":{"gitId":"miahjerry"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":174,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":175,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"skyanzy"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"skyanzy"},"content":"     * Adds a RecurringDeadline to the list when loading from save data","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"skyanzy"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"skyanzy"},"content":"     * @param line  The line of input from save file","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"skyanzy"},"content":"     * @param tasks the array list of tasks","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"skyanzy"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"MichelleLiang0116"},"content":"    static void loadRecurringDeadline(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-31"},{"lineNumber":184,"author":{"gitId":"skyanzy"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/by\")).trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"skyanzy"},"content":"        String deadline \u003d line.substring(line.indexOf(\"/by\") + 3, line.indexOf(\"\u003cp\u003e\")).trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"skyanzy"},"content":"        String priority \u003d line.substring(line.indexOf(\"\u003cp\u003e\") + 3, line.indexOf(\"/day\")).trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"skyanzy"},"content":"        DayOfWeek day \u003d DayOfWeek.valueOf(line.substring(line.indexOf(\"/day\") + 4).trim());","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"skyanzy"},"content":"        RecurringDeadline currDeadline \u003d new RecurringDeadline(description, deadline, day);","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"skyanzy"},"content":"        currDeadline.setPriority(priority);","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"jeraldgau"},"content":"        tasks.add(currDeadline);","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"jeraldgau"},"content":"     * Load the task status of a task from the save data","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":196,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks      The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":197,"author":{"gitId":"jeraldgau"},"content":"     * @param doneStatus The done status of the current task","lastModifiedDate":"2023-03-09"},{"lineNumber":198,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":199,"author":{"gitId":"jeraldgau"},"content":"    static void loadTaskStatus(ArrayList\u003cTask\u003e tasks, String doneStatus) {","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"jeraldgau"},"content":"        int taskNumber \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"jeraldgau"},"content":"        if (doneStatus.equals(\"1\")) {","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"jeraldgau"},"content":"            tasks.get(taskNumber).markAsDone();","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"jeraldgau"},"content":"            tasks.get(taskNumber).markAsNotDone();","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":206,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":207,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"jeraldgau"},"content":"     * Saves the tasks in the list to the save file","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":211,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":212,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"jeraldgau"},"content":"    static void save(ArrayList\u003cTask\u003e tasks, PriorityQueue\u003cSchoolClass\u003e classes) throws IOException {","lastModifiedDate":"2023-03-26"},{"lineNumber":214,"author":{"gitId":"jeraldgau"},"content":"        File f \u003d new File(SAVEPATH);","lastModifiedDate":"2023-03-09"},{"lineNumber":215,"author":{"gitId":"jeraldgau"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"jeraldgau"},"content":"            f.delete();","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"jeraldgau"},"content":"        f.createNewFile();","lastModifiedDate":"2023-03-09"},{"lineNumber":219,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"jeraldgau"},"content":"        // Saving the task list to the save file","lastModifiedDate":"2023-03-26"},{"lineNumber":221,"author":{"gitId":"jeraldgau"},"content":"        FileWriter fw \u003d new FileWriter(SAVEPATH);","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"jeraldgau"},"content":"        for (Task currTask : tasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":223,"author":{"gitId":"jeraldgau"},"content":"            fw.write(currTask.toSaveString());","lastModifiedDate":"2023-03-09"},{"lineNumber":224,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":225,"author":{"gitId":"jeraldgau"},"content":"        fw.close();","lastModifiedDate":"2023-03-09"},{"lineNumber":226,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":227,"author":{"gitId":"jeraldgau"},"content":"        // Saving the class schedule to the save file","lastModifiedDate":"2023-03-26"},{"lineNumber":228,"author":{"gitId":"jeraldgau"},"content":"        FileWriter fw2 \u003d new FileWriter(SAVEPATH, true);","lastModifiedDate":"2023-03-26"},{"lineNumber":229,"author":{"gitId":"jeraldgau"},"content":"        PriorityQueue\u003cSchoolClass\u003e temp \u003d new PriorityQueue\u003cSchoolClass\u003e(classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":230,"author":{"gitId":"jeraldgau"},"content":"        while (!temp.isEmpty()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":231,"author":{"gitId":"jeraldgau"},"content":"            fw2.write(temp.poll().toSaveString());","lastModifiedDate":"2023-03-26"},{"lineNumber":232,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":233,"author":{"gitId":"jeraldgau"},"content":"        fw2.close();","lastModifiedDate":"2023-03-26"},{"lineNumber":234,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":235,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":236,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":237,"author":{"gitId":"jeraldgau"},"content":"     * Try to save, shows error message if saving fails","lastModifiedDate":"2023-03-09"},{"lineNumber":238,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":239,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":240,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":241,"author":{"gitId":"jeraldgau"},"content":"    static void trySave(ArrayList\u003cTask\u003e tasks, PriorityQueue\u003cSchoolClass\u003e classes) {","lastModifiedDate":"2023-03-26"},{"lineNumber":242,"author":{"gitId":"jeraldgau"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":243,"author":{"gitId":"jeraldgau"},"content":"            save(tasks, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":244,"author":{"gitId":"jeraldgau"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":245,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"Saving error.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":246,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":247,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":248,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":249,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":250,"author":{"gitId":"jeraldgau"},"content":"     * Load the save data","lastModifiedDate":"2023-03-09"},{"lineNumber":251,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":252,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":253,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":254,"author":{"gitId":"jeraldgau"},"content":"    static void load(ArrayList\u003cTask\u003e tasks, PriorityQueue\u003cSchoolClass\u003e classes) throws IOException {","lastModifiedDate":"2023-03-26"},{"lineNumber":255,"author":{"gitId":"jeraldgau"},"content":"        File folder \u003d new File(SAVEFOLDER);","lastModifiedDate":"2023-03-09"},{"lineNumber":256,"author":{"gitId":"jeraldgau"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":257,"author":{"gitId":"jeraldgau"},"content":"            new File(SAVEFOLDER).mkdir();","lastModifiedDate":"2023-03-09"},{"lineNumber":258,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":259,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":260,"author":{"gitId":"jeraldgau"},"content":"        File f \u003d new File(SAVEPATH);","lastModifiedDate":"2023-03-09"},{"lineNumber":261,"author":{"gitId":"jeraldgau"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":262,"author":{"gitId":"jeraldgau"},"content":"            f.createNewFile();","lastModifiedDate":"2023-03-09"},{"lineNumber":263,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":264,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":265,"author":{"gitId":"jeraldgau"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-03-09"},{"lineNumber":266,"author":{"gitId":"jeraldgau"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":267,"author":{"gitId":"jeraldgau"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":268,"author":{"gitId":"jeraldgau"},"content":"            String[] formattedInput \u003d line.split(\" \");","lastModifiedDate":"2023-03-09"},{"lineNumber":269,"author":{"gitId":"jeraldgau"},"content":"            String doneStatus \u003d formattedInput[0];","lastModifiedDate":"2023-03-09"},{"lineNumber":270,"author":{"gitId":"jeraldgau"},"content":"            String command \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":271,"author":{"gitId":"jeraldgau"},"content":"            for (int i \u003d 1; i \u003c formattedInput.length; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":272,"author":{"gitId":"jeraldgau"},"content":"                command +\u003d formattedInput[i];","lastModifiedDate":"2023-03-09"},{"lineNumber":273,"author":{"gitId":"jeraldgau"},"content":"                command +\u003d \" \";","lastModifiedDate":"2023-03-09"},{"lineNumber":274,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":275,"author":{"gitId":"jeraldgau"},"content":"            loadTask(command, tasks, classes, doneStatus);","lastModifiedDate":"2023-03-26"},{"lineNumber":276,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":277,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":278,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":279,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":280,"author":{"gitId":"jeraldgau"},"content":"     * Try to load the save data, shows error message if loading fails","lastModifiedDate":"2023-03-09"},{"lineNumber":281,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":282,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":283,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":284,"author":{"gitId":"jeraldgau"},"content":"    static void tryLoad(ArrayList\u003cTask\u003e tasks, PriorityQueue\u003cSchoolClass\u003e classes) {","lastModifiedDate":"2023-03-26"},{"lineNumber":285,"author":{"gitId":"jeraldgau"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":286,"author":{"gitId":"jeraldgau"},"content":"            load(tasks, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":287,"author":{"gitId":"jeraldgau"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":288,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"Error loading save file.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":289,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":290,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":291,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"thant":25,"jeraldgau":199,"miahjerry":30,"MichelleLiang0116":4,"skyanzy":33}},{"path":"src/main/java/seedu/duck/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"skyanzy"},"content":"import seedu.duck.exception.*;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"skyanzy"},"content":"import seedu.duck.task.*;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"thant"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"thant"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"thant"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"thant"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"thant"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"skyanzy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"thant"},"content":"import java.util.Date;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"miahjerry"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":" * Contains operations to manipulate the task list","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"public class TaskList {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"    static void addTask(String line, ArrayList\u003cTask\u003e tasks, PriorityQueue\u003cSchoolClass\u003e classes) {","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"        if (line.contains(\"/by\")) {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"            // Adding a Deadline","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"skyanzy"},"content":"            if (line.contains(\"/re\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"skyanzy"},"content":"                try {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"MichelleLiang0116"},"content":"                    addRecurringDeadline(line, tasks);","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"skyanzy"},"content":"                    Task.incrementCount();","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"skyanzy"},"content":"                } catch(IllegalDeadlineException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"skyanzy"},"content":"                    Ui.deadlineErrorMessage();","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"skyanzy"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"skyanzy"},"content":"                    Ui.invalidDayMessage();","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"skyanzy"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"skyanzy"},"content":"                    Ui.invalidDateTimeMessage();","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"skyanzy"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"skyanzy"},"content":"            } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"                try {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jeraldgau"},"content":"                    addDeadline(line, tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"jeraldgau"},"content":"                    Task.incrementCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"jeraldgau"},"content":"                } catch (IllegalDeadlineException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"jeraldgau"},"content":"                    Ui.deadlineErrorMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"thant"},"content":"                } catch (expiredDateException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"thant"},"content":"                    Ui.expiredErrorMessage();","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"thant"},"content":"                } catch (DateTimeException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"jeraldgau"},"content":"                    Ui.invalidDateTimeMessage();","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"jeraldgau"},"content":"                }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"skyanzy"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"jeraldgau"},"content":"        } else if (line.contains(\"/class\")) {","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"jeraldgau"},"content":"            // Adding a SchoolClass","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"jeraldgau"},"content":"            try {","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"jeraldgau"},"content":"                addSchoolClass(line, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"jeraldgau"},"content":"            } catch (IllegalSchoolClassException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"jeraldgau"},"content":"                Ui.eventErrorMessage();","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"jeraldgau"},"content":"            } catch (expiredDateException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"jeraldgau"},"content":"                Ui.expiredErrorMessage();","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"jeraldgau"},"content":"            } catch (startAfterEndException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"jeraldgau"},"content":"                Ui.startAfterEndErrorMessage();","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"jeraldgau"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"jeraldgau"},"content":"                Ui.invalidDateTimeMessage();","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"skyanzy"},"content":"        } else if (line.contains(\"/from\") \u0026\u0026 line.contains(\"/to\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"jeraldgau"},"content":"            // Adding an Event","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"skyanzy"},"content":"            if (line.contains(\"/re\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"skyanzy"},"content":"                try {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"MichelleLiang0116"},"content":"                    addRecurringEvent(line, tasks);","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"skyanzy"},"content":"                    Task.incrementCount();","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"skyanzy"},"content":"                } catch (IllegalEventException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"skyanzy"},"content":"                    Ui.eventErrorMessage();","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"skyanzy"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"skyanzy"},"content":"                    Ui.invalidDayMessage();","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"skyanzy"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"skyanzy"},"content":"                    Ui.invalidDateTimeMessage();","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"skyanzy"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"skyanzy"},"content":"            } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"jeraldgau"},"content":"                try {","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"jeraldgau"},"content":"                    addEvent(line, tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"jeraldgau"},"content":"                    Task.incrementCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"thant"},"content":"                } catch (IllegalEventException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"jeraldgau"},"content":"                    Ui.eventErrorMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"thant"},"content":"                } catch (expiredDateException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"thant"},"content":"                    Ui.expiredErrorMessage();","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"thant"},"content":"                } catch (startAfterEndException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"thant"},"content":"                    Ui.startAfterEndErrorMessage();","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"thant"},"content":"                } catch (DateTimeException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"jeraldgau"},"content":"                    Ui.invalidDateTimeMessage();","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"jeraldgau"},"content":"                }","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"skyanzy"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"skyanzy"},"content":"        } else if (line.trim().split(\" \")[0].equals(\"/todo\")){","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"jeraldgau"},"content":"            // Adding a _Todo_","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"jeraldgau"},"content":"            try {","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"jeraldgau"},"content":"                addTodo(line, tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"jeraldgau"},"content":"                Task.incrementCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"jeraldgau"},"content":"            } catch (IllegalTodoException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"jeraldgau"},"content":"                Ui.todoErrorMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"skyanzy"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":99,"author":{"gitId":"skyanzy"},"content":"            Ui.unknownCommandMessage();","lastModifiedDate":"2023-04-06"},{"lineNumber":100,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"jeraldgau"},"content":"     * Adds a _Todo_ to the list","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"jeraldgau"},"content":"     * @param line  The line of input from the user","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"jeraldgau"},"content":"    static void addTodo(String line, ArrayList\u003cTask\u003e tasks) throws IllegalTodoException {","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"skyanzy"},"content":"        line \u003d line.trim();","lastModifiedDate":"2023-04-06"},{"lineNumber":111,"author":{"gitId":"skyanzy"},"content":"        String description \u003d line.substring(5).trim();","lastModifiedDate":"2023-04-06"},{"lineNumber":112,"author":{"gitId":"skyanzy"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":113,"author":{"gitId":"jeraldgau"},"content":"            throw new IllegalTodoException();","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"skyanzy"},"content":"            Todo currTodo \u003d new Todo(description);","lastModifiedDate":"2023-04-06"},{"lineNumber":116,"author":{"gitId":"jeraldgau"},"content":"            tasks.add(currTodo);","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"jeraldgau"},"content":"            Ui.addedTaskMessage(currTodo);","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"thant"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"thant"},"content":"     * Sets a priority to the specified task","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"thant"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"thant"},"content":"     * @param words  The input variable from the user, consisting of an index and a priority (from 1 to 3)","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"thant"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"thant"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"thant"},"content":"    static void setPriority(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"skyanzy"},"content":"        if (!words[2].equals(\"1\") \u0026\u0026 !words[2].equals(\"2\") \u0026\u0026 !words[2].equals(\"3\")) {","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"skyanzy"},"content":"            Ui.priorityErrorMessage();","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"skyanzy"},"content":"        } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":131,"author":{"gitId":"thant"},"content":"            int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"thant"},"content":"            int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"miahjerry"},"content":"            if (taskNumber \u003e taskCount || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-04-03"},{"lineNumber":134,"author":{"gitId":"thant"},"content":"                // Input task number exceeds the number of tasks in the list","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"thant"},"content":"                Ui.exceedTaskNumberMessage(taskNumber);","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"thant"},"content":"            } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"thant"},"content":"                tasks.get(taskNumber - 1).setPriority(words[2]);","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"thant"},"content":"                // Printing out marked as done message","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"thant"},"content":"                Ui.borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"thant"},"content":"                System.out.println(\"\\t Understood. The task\u0027s new priority is:\");","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"thant"},"content":"                System.out.println(\"\\t \" + tasks.get(taskNumber - 1).getPriority());","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"thant"},"content":"                Ui.borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"thant"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":145,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"jeraldgau"},"content":"     * Adds an event to the list","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"jeraldgau"},"content":"     * @param line  The line of input from the user","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"thant"},"content":"    static void addEvent(String line, ArrayList\u003cTask\u003e tasks) throws IllegalEventException, startAfterEndException,","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"thant"},"content":"            expiredDateException {","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"thant"},"content":"        String startString \u003d line.substring(line.indexOf(\"/from\") + 5, line.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"thant"},"content":"        String endString \u003d line.substring(line.indexOf(\"/to\") + 3).trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"thant"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"thant"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(startString, dateFormat);","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"thant"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(endString, dateFormat);","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"thant"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"thant"},"content":"            throw new startAfterEndException();","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"thant"},"content":"        } else if (start.isBefore(LocalDateTime.now()) || end.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"thant"},"content":"            throw new expiredDateException();","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"thant"},"content":"        } else if (description.isBlank() || startString.isBlank() || endString.isBlank()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"jeraldgau"},"content":"            throw new IllegalEventException();","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"thant"},"content":"            Event currEvent \u003d new Event(description, startString, endString);","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"jeraldgau"},"content":"            tasks.add(currEvent);","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"jeraldgau"},"content":"            Ui.addedTaskMessage(currEvent);","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"MichelleLiang0116"},"content":"    static void addRecurringEvent(String line, ArrayList\u003cTask\u003e tasks) throws IllegalEventException{","lastModifiedDate":"2023-03-31"},{"lineNumber":175,"author":{"gitId":"skyanzy"},"content":"        String description \u003d line.substring(4, line.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"skyanzy"},"content":"        String start \u003d line.substring(line.indexOf(\"/from\") + 5, line.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"skyanzy"},"content":"        String end \u003d line.substring(line.indexOf(\"/to\") + 3, line.indexOf(\"/day\")).trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"skyanzy"},"content":"        DayOfWeek day \u003d DayOfWeek.valueOf(line.substring(line.indexOf(\"/day\") + 4).trim());","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"skyanzy"},"content":"        DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"skyanzy"},"content":"        //check whether start and end are in the correct format","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"skyanzy"},"content":"        LocalTime.parse(start, timeFormat);","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"skyanzy"},"content":"        LocalTime.parse(end, timeFormat);","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"skyanzy"},"content":"        if (description.isBlank() || start.isBlank() || end.isBlank()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"skyanzy"},"content":"            throw new IllegalEventException();","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"skyanzy"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"skyanzy"},"content":"            RecurringEvent currEvent \u003d new RecurringEvent(description, start, end, day);","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"skyanzy"},"content":"            tasks.add(currEvent);","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"skyanzy"},"content":"            Ui.addedTaskMessage(currEvent);","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"skyanzy"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"jeraldgau"},"content":"     * Adds a schoolClass to the list","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"jeraldgau"},"content":"     * @param line  The line of input from the user","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"jeraldgau"},"content":"     * @param classes The priority queue of school classes","lastModifiedDate":"2023-03-26"},{"lineNumber":197,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"jeraldgau"},"content":"    static void addSchoolClass(String line, PriorityQueue\u003cSchoolClass\u003e classes) throws IllegalSchoolClassException,","lastModifiedDate":"2023-03-26"},{"lineNumber":199,"author":{"gitId":"jeraldgau"},"content":"            startAfterEndException, expiredDateException, IllegalArgumentException, NullPointerException {","lastModifiedDate":"2023-03-26"},{"lineNumber":200,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/class\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"jeraldgau"},"content":"        String className \u003d line.substring(line.indexOf(\"/class\") + 6, line.indexOf(\"/day\")).trim();","lastModifiedDate":"2023-03-26"},{"lineNumber":202,"author":{"gitId":"jeraldgau"},"content":"        try {","lastModifiedDate":"2023-03-26"},{"lineNumber":203,"author":{"gitId":"jeraldgau"},"content":"            DayOfWeek day \u003d DayOfWeek.valueOf(line.substring(line.indexOf(\"/day\") + 4, line.indexOf(\"/from\")).trim());","lastModifiedDate":"2023-03-26"},{"lineNumber":204,"author":{"gitId":"jeraldgau"},"content":"            String startString \u003d line.substring(line.indexOf(\"/from\") + 5, line.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"jeraldgau"},"content":"            String endString \u003d line.substring(line.indexOf(\"/to\") + 3).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"jeraldgau"},"content":"            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-03-26"},{"lineNumber":207,"author":{"gitId":"jeraldgau"},"content":"            LocalTime start \u003d LocalTime.parse(startString, timeFormat);","lastModifiedDate":"2023-03-26"},{"lineNumber":208,"author":{"gitId":"jeraldgau"},"content":"            LocalTime end \u003d LocalTime.parse(endString, timeFormat);","lastModifiedDate":"2023-03-26"},{"lineNumber":209,"author":{"gitId":"jeraldgau"},"content":"            if (start.isAfter(end)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"jeraldgau"},"content":"                throw new startAfterEndException();","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"jeraldgau"},"content":"            } else if (className.isBlank() || startString.isBlank() || endString.isBlank()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"jeraldgau"},"content":"                throw new IllegalSchoolClassException();","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"jeraldgau"},"content":"            } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":214,"author":{"gitId":"jeraldgau"},"content":"                SchoolClass currSchoolClass \u003d new SchoolClass(className, description, day, startString, endString);","lastModifiedDate":"2023-03-26"},{"lineNumber":215,"author":{"gitId":"jeraldgau"},"content":"                classes.add(currSchoolClass);","lastModifiedDate":"2023-03-26"},{"lineNumber":216,"author":{"gitId":"jeraldgau"},"content":"                Ui.addedSchoolClassMessage(currSchoolClass, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":217,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":218,"author":{"gitId":"jeraldgau"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-26"},{"lineNumber":219,"author":{"gitId":"jeraldgau"},"content":"            Ui.invalidDayMessage();","lastModifiedDate":"2023-03-26"},{"lineNumber":220,"author":{"gitId":"jeraldgau"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-03-26"},{"lineNumber":221,"author":{"gitId":"jeraldgau"},"content":"            Ui.emptyDayErrorMessage();","lastModifiedDate":"2023-03-26"},{"lineNumber":222,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":223,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":225,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":226,"author":{"gitId":"jeraldgau"},"content":"     * Adds a deadline to the list","lastModifiedDate":"2023-03-09"},{"lineNumber":227,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":228,"author":{"gitId":"jeraldgau"},"content":"     * @param line  The line of input from the user","lastModifiedDate":"2023-03-09"},{"lineNumber":229,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":230,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":231,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":232,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":233,"author":{"gitId":"thant"},"content":"    static void addDeadline(String line, ArrayList\u003cTask\u003e tasks) throws IllegalDeadlineException, expiredDateException {","lastModifiedDate":"2023-03-11"},{"lineNumber":234,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/by\")).trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":235,"author":{"gitId":"thant"},"content":"        String deadlineString \u003d line.substring(line.indexOf(\"/by\") + 3).trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":236,"author":{"gitId":"thant"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-11"},{"lineNumber":237,"author":{"gitId":"thant"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(deadlineString, dateFormat);","lastModifiedDate":"2023-03-11"},{"lineNumber":238,"author":{"gitId":"jeraldgau"},"content":"        //System.out.println(description.isBlank());","lastModifiedDate":"2023-03-09"},{"lineNumber":239,"author":{"gitId":"thant"},"content":"        if (description.isBlank() || deadlineString.isBlank()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":240,"author":{"gitId":"jeraldgau"},"content":"            throw new IllegalDeadlineException();","lastModifiedDate":"2023-03-09"},{"lineNumber":241,"author":{"gitId":"thant"},"content":"        } else if (deadline.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-11"},{"lineNumber":242,"author":{"gitId":"thant"},"content":"            throw new expiredDateException();","lastModifiedDate":"2023-03-11"},{"lineNumber":243,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":244,"author":{"gitId":"thant"},"content":"            Deadline currDeadline \u003d new Deadline(description, deadlineString);","lastModifiedDate":"2023-03-11"},{"lineNumber":245,"author":{"gitId":"jeraldgau"},"content":"            tasks.add(currDeadline);","lastModifiedDate":"2023-03-09"},{"lineNumber":246,"author":{"gitId":"jeraldgau"},"content":"            Ui.addedTaskMessage(currDeadline);","lastModifiedDate":"2023-03-09"},{"lineNumber":247,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":248,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":249,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":250,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":251,"author":{"gitId":"skyanzy"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":252,"author":{"gitId":"skyanzy"},"content":"     * adds a recurringDeadline to the list","lastModifiedDate":"2023-03-29"},{"lineNumber":253,"author":{"gitId":"skyanzy"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":254,"author":{"gitId":"skyanzy"},"content":"     * @param line the line of input from the user","lastModifiedDate":"2023-03-29"},{"lineNumber":255,"author":{"gitId":"skyanzy"},"content":"     * @param tasks the array list of tasks","lastModifiedDate":"2023-03-29"},{"lineNumber":256,"author":{"gitId":"skyanzy"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":257,"author":{"gitId":"MichelleLiang0116"},"content":"    static void addRecurringDeadline(String line, ArrayList\u003cTask\u003e tasks) throws IllegalDeadlineException,","lastModifiedDate":"2023-03-31"},{"lineNumber":258,"author":{"gitId":"skyanzy"},"content":"            IllegalArgumentException {","lastModifiedDate":"2023-03-29"},{"lineNumber":259,"author":{"gitId":"skyanzy"},"content":"        String description \u003d line.substring(4, line.indexOf(\"/by\")).trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":260,"author":{"gitId":"skyanzy"},"content":"        String deadline \u003d line.substring(line.indexOf(\"/by\") + 3, line.indexOf(\"/day\")).trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":261,"author":{"gitId":"skyanzy"},"content":"        DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-03-29"},{"lineNumber":262,"author":{"gitId":"skyanzy"},"content":"        LocalTime.parse(deadline, timeFormat);","lastModifiedDate":"2023-03-29"},{"lineNumber":263,"author":{"gitId":"skyanzy"},"content":"        DayOfWeek day \u003d DayOfWeek.valueOf(line.substring(line.indexOf(\"/day\") + 4).trim());","lastModifiedDate":"2023-03-29"},{"lineNumber":264,"author":{"gitId":"skyanzy"},"content":"        if (description.isBlank() || deadline.isBlank()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":265,"author":{"gitId":"skyanzy"},"content":"            throw new IllegalDeadlineException();","lastModifiedDate":"2023-03-29"},{"lineNumber":266,"author":{"gitId":"skyanzy"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":267,"author":{"gitId":"skyanzy"},"content":"            RecurringDeadline currDeadline \u003d new RecurringDeadline(description, deadline, day);","lastModifiedDate":"2023-03-29"},{"lineNumber":268,"author":{"gitId":"skyanzy"},"content":"            tasks.add(currDeadline);","lastModifiedDate":"2023-03-29"},{"lineNumber":269,"author":{"gitId":"skyanzy"},"content":"            Ui.addedTaskMessage(currDeadline);","lastModifiedDate":"2023-03-29"},{"lineNumber":270,"author":{"gitId":"skyanzy"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":271,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":272,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":273,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":274,"author":{"gitId":"jeraldgau"},"content":"     * Marks a task as done","lastModifiedDate":"2023-03-09"},{"lineNumber":275,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":276,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":277,"author":{"gitId":"jeraldgau"},"content":"     * @param words The array of words generated from the user input","lastModifiedDate":"2023-03-09"},{"lineNumber":278,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":279,"author":{"gitId":"jeraldgau"},"content":"    static void markTask(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-03-09"},{"lineNumber":280,"author":{"gitId":"jeraldgau"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-09"},{"lineNumber":281,"author":{"gitId":"jeraldgau"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-09"},{"lineNumber":282,"author":{"gitId":"miahjerry"},"content":"        if (taskNumber \u003e taskCount || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-04-03"},{"lineNumber":283,"author":{"gitId":"jeraldgau"},"content":"            // Input task number exceeds the number of tasks in the list","lastModifiedDate":"2023-03-09"},{"lineNumber":284,"author":{"gitId":"jeraldgau"},"content":"            Ui.exceedTaskNumberMessage(taskNumber);","lastModifiedDate":"2023-03-09"},{"lineNumber":285,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":286,"author":{"gitId":"jeraldgau"},"content":"            tasks.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2023-03-09"},{"lineNumber":287,"author":{"gitId":"jeraldgau"},"content":"            // Printing out marked as done message","lastModifiedDate":"2023-03-09"},{"lineNumber":288,"author":{"gitId":"jeraldgau"},"content":"            Ui.borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":289,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t Understood. I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-03-09"},{"lineNumber":290,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t \" + tasks.get(taskNumber - 1));","lastModifiedDate":"2023-03-09"},{"lineNumber":291,"author":{"gitId":"jeraldgau"},"content":"            Ui.borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":292,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":293,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":294,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":295,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":296,"author":{"gitId":"jeraldgau"},"content":"     * Marks a task as not done","lastModifiedDate":"2023-03-09"},{"lineNumber":297,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":298,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":299,"author":{"gitId":"jeraldgau"},"content":"     * @param words The array of words generated from the user input","lastModifiedDate":"2023-03-09"},{"lineNumber":300,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":301,"author":{"gitId":"jeraldgau"},"content":"    static void unmarkTask(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-03-09"},{"lineNumber":302,"author":{"gitId":"jeraldgau"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-09"},{"lineNumber":303,"author":{"gitId":"jeraldgau"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-09"},{"lineNumber":304,"author":{"gitId":"miahjerry"},"content":"        if (taskNumber \u003e taskCount || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-04-03"},{"lineNumber":305,"author":{"gitId":"jeraldgau"},"content":"            // Input task number exceeds the number of tasks in the list","lastModifiedDate":"2023-03-09"},{"lineNumber":306,"author":{"gitId":"jeraldgau"},"content":"            Ui.exceedTaskNumberMessage(taskNumber);","lastModifiedDate":"2023-03-09"},{"lineNumber":307,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":308,"author":{"gitId":"jeraldgau"},"content":"            tasks.get(taskNumber - 1).markAsNotDone();","lastModifiedDate":"2023-03-09"},{"lineNumber":309,"author":{"gitId":"jeraldgau"},"content":"            // Printing out marked as not done message","lastModifiedDate":"2023-03-09"},{"lineNumber":310,"author":{"gitId":"jeraldgau"},"content":"            Ui.borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":311,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t Understood. I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-03-09"},{"lineNumber":312,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t \" + tasks.get(taskNumber - 1));","lastModifiedDate":"2023-03-09"},{"lineNumber":313,"author":{"gitId":"jeraldgau"},"content":"            Ui.borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":314,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":315,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":316,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":317,"author":{"gitId":"skyanzy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":318,"author":{"gitId":"skyanzy"},"content":"     * edits the attributes of a specific task","lastModifiedDate":"2023-03-30"},{"lineNumber":319,"author":{"gitId":"MichelleLiang0116"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-31"},{"lineNumber":320,"author":{"gitId":"MichelleLiang0116"},"content":"     * @param words The array of words generated from the user input","lastModifiedDate":"2023-03-31"},{"lineNumber":321,"author":{"gitId":"skyanzy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":322,"author":{"gitId":"skyanzy"},"content":"    static void editTask(ArrayList\u003cTask\u003e tasks, String[] words) throws expiredDateException,","lastModifiedDate":"2023-03-30"},{"lineNumber":323,"author":{"gitId":"skyanzy"},"content":"            startAfterEndException, EmptyDescriptionException {","lastModifiedDate":"2023-03-30"},{"lineNumber":324,"author":{"gitId":"skyanzy"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-30"},{"lineNumber":325,"author":{"gitId":"skyanzy"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-30"},{"lineNumber":326,"author":{"gitId":"skyanzy"},"content":"        DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-03-30"},{"lineNumber":327,"author":{"gitId":"skyanzy"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-30"},{"lineNumber":328,"author":{"gitId":"miahjerry"},"content":"        if (taskNumber \u003e taskCount || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-04-03"},{"lineNumber":329,"author":{"gitId":"skyanzy"},"content":"            Ui.exceedTaskNumberMessage(taskNumber);","lastModifiedDate":"2023-03-30"},{"lineNumber":330,"author":{"gitId":"skyanzy"},"content":"            return;","lastModifiedDate":"2023-03-30"},{"lineNumber":331,"author":{"gitId":"skyanzy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":332,"author":{"gitId":"skyanzy"},"content":"        Task taskToEdit \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-03-30"},{"lineNumber":333,"author":{"gitId":"skyanzy"},"content":"        if (taskToEdit instanceof Todo) {","lastModifiedDate":"2023-03-30"},{"lineNumber":334,"author":{"gitId":"skyanzy"},"content":"            Ui.editTodoMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":335,"author":{"gitId":"skyanzy"},"content":"            String editLine \u003d Ui.askForEditMessage().trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":336,"author":{"gitId":"skyanzy"},"content":"            if (editLine.isBlank()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":337,"author":{"gitId":"skyanzy"},"content":"                throw new EmptyDescriptionException();","lastModifiedDate":"2023-03-30"},{"lineNumber":338,"author":{"gitId":"skyanzy"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":339,"author":{"gitId":"skyanzy"},"content":"            taskToEdit.setDescription(editLine);","lastModifiedDate":"2023-03-30"},{"lineNumber":340,"author":{"gitId":"skyanzy"},"content":"        } else if (taskToEdit instanceof Deadline) {","lastModifiedDate":"2023-03-30"},{"lineNumber":341,"author":{"gitId":"skyanzy"},"content":"            Ui.editDeadlineMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":342,"author":{"gitId":"skyanzy"},"content":"            String editLine \u003d Ui.askForEditMessage().trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":343,"author":{"gitId":"skyanzy"},"content":"            String[] editWords \u003d editLine.split(\" \");","lastModifiedDate":"2023-03-30"},{"lineNumber":344,"author":{"gitId":"skyanzy"},"content":"            if (taskToEdit instanceof RecurringDeadline) {","lastModifiedDate":"2023-03-30"},{"lineNumber":345,"author":{"gitId":"skyanzy"},"content":"                if (editWords.length \u003e 1 \u0026\u0026 editWords[0].equals(\"/description\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":346,"author":{"gitId":"skyanzy"},"content":"                    String newDescription \u003d editLine.substring(12).trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":347,"author":{"gitId":"skyanzy"},"content":"                    if (newDescription.isBlank()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":348,"author":{"gitId":"skyanzy"},"content":"                        throw new EmptyDescriptionException();","lastModifiedDate":"2023-03-30"},{"lineNumber":349,"author":{"gitId":"skyanzy"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":350,"author":{"gitId":"skyanzy"},"content":"                    taskToEdit.setDescription(newDescription);","lastModifiedDate":"2023-03-30"},{"lineNumber":351,"author":{"gitId":"skyanzy"},"content":"                } else if (editWords.length \u003e 1 \u0026\u0026 editWords[0].equals(\"/deadline\")){","lastModifiedDate":"2023-03-30"},{"lineNumber":352,"author":{"gitId":"skyanzy"},"content":"                    String deadline \u003d editLine.substring(9).trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":353,"author":{"gitId":"skyanzy"},"content":"                    LocalTime.parse(deadline, timeFormat);","lastModifiedDate":"2023-03-30"},{"lineNumber":354,"author":{"gitId":"skyanzy"},"content":"                    ((RecurringDeadline) taskToEdit).setDeadline(deadline);","lastModifiedDate":"2023-03-30"},{"lineNumber":355,"author":{"gitId":"skyanzy"},"content":"                } else if (editWords.length \u003e 1 \u0026\u0026 editWords[0].equals(\"/day\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":356,"author":{"gitId":"skyanzy"},"content":"                    DayOfWeek day \u003d DayOfWeek.valueOf(editLine.substring(4).trim());","lastModifiedDate":"2023-03-30"},{"lineNumber":357,"author":{"gitId":"skyanzy"},"content":"                    ((RecurringDeadline) taskToEdit).setDay(day);","lastModifiedDate":"2023-03-30"},{"lineNumber":358,"author":{"gitId":"skyanzy"},"content":"                } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":359,"author":{"gitId":"skyanzy"},"content":"                    Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":360,"author":{"gitId":"skyanzy"},"content":"                }","lastModifiedDate":"2023-03-30"},{"lineNumber":361,"author":{"gitId":"skyanzy"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":362,"author":{"gitId":"skyanzy"},"content":"                if (editWords.length \u003e 1 \u0026\u0026 editWords[0].equals(\"/description\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":363,"author":{"gitId":"skyanzy"},"content":"                    String newDescription \u003d editLine.substring(editLine.indexOf(words[1]));","lastModifiedDate":"2023-03-30"},{"lineNumber":364,"author":{"gitId":"skyanzy"},"content":"                    if (newDescription.isBlank()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":365,"author":{"gitId":"skyanzy"},"content":"                        throw new EmptyDescriptionException();","lastModifiedDate":"2023-03-30"},{"lineNumber":366,"author":{"gitId":"skyanzy"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":367,"author":{"gitId":"skyanzy"},"content":"                    taskToEdit.setDescription(newDescription);","lastModifiedDate":"2023-03-30"},{"lineNumber":368,"author":{"gitId":"skyanzy"},"content":"                } else if (editWords.length \u003e 1 \u0026\u0026 editWords[0].equals(\"/deadline\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":369,"author":{"gitId":"skyanzy"},"content":"                    String deadlineString \u003d editLine.substring(9).trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":370,"author":{"gitId":"skyanzy"},"content":"                    System.out.println(deadlineString);","lastModifiedDate":"2023-03-30"},{"lineNumber":371,"author":{"gitId":"skyanzy"},"content":"                    LocalDateTime deadline \u003d LocalDateTime.parse(deadlineString, dateFormat);","lastModifiedDate":"2023-03-30"},{"lineNumber":372,"author":{"gitId":"skyanzy"},"content":"                    if (deadline.isBefore(LocalDateTime.now())){","lastModifiedDate":"2023-03-30"},{"lineNumber":373,"author":{"gitId":"skyanzy"},"content":"                        throw new expiredDateException();","lastModifiedDate":"2023-03-30"},{"lineNumber":374,"author":{"gitId":"skyanzy"},"content":"                    } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":375,"author":{"gitId":"skyanzy"},"content":"                        ((Deadline) taskToEdit).setDeadline(deadlineString);","lastModifiedDate":"2023-03-30"},{"lineNumber":376,"author":{"gitId":"skyanzy"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":377,"author":{"gitId":"skyanzy"},"content":"                } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":378,"author":{"gitId":"skyanzy"},"content":"                    Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":379,"author":{"gitId":"skyanzy"},"content":"                }","lastModifiedDate":"2023-03-30"},{"lineNumber":380,"author":{"gitId":"skyanzy"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":381,"author":{"gitId":"skyanzy"},"content":"        } else if (taskToEdit instanceof Event) {","lastModifiedDate":"2023-03-30"},{"lineNumber":382,"author":{"gitId":"skyanzy"},"content":"            Ui.editEventMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":383,"author":{"gitId":"skyanzy"},"content":"            String editLine \u003d Ui.askForEditMessage().trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":384,"author":{"gitId":"skyanzy"},"content":"            String[] editWords \u003d editLine.split(\" \");","lastModifiedDate":"2023-03-30"},{"lineNumber":385,"author":{"gitId":"skyanzy"},"content":"            if (taskToEdit instanceof RecurringEvent) {","lastModifiedDate":"2023-03-30"},{"lineNumber":386,"author":{"gitId":"skyanzy"},"content":"                if (editWords.length \u003e 1 \u0026\u0026 editWords[0].equals(\"/description\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":387,"author":{"gitId":"skyanzy"},"content":"                    String newDescription \u003d editLine.substring(12).trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":388,"author":{"gitId":"skyanzy"},"content":"                    if (newDescription.isBlank()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":389,"author":{"gitId":"skyanzy"},"content":"                        throw new EmptyDescriptionException();","lastModifiedDate":"2023-03-30"},{"lineNumber":390,"author":{"gitId":"skyanzy"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":391,"author":{"gitId":"skyanzy"},"content":"                    taskToEdit.setDescription(newDescription);","lastModifiedDate":"2023-03-30"},{"lineNumber":392,"author":{"gitId":"skyanzy"},"content":"                } else if (editWords.length \u003e 1 \u0026\u0026 editWords[0].equals(\"/from\")){","lastModifiedDate":"2023-03-30"},{"lineNumber":393,"author":{"gitId":"skyanzy"},"content":"                    String start \u003d editLine.substring(5).trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":394,"author":{"gitId":"skyanzy"},"content":"                    LocalTime.parse(start, timeFormat);","lastModifiedDate":"2023-03-30"},{"lineNumber":395,"author":{"gitId":"skyanzy"},"content":"                    ((RecurringEvent) taskToEdit).setStart(start);","lastModifiedDate":"2023-03-30"},{"lineNumber":396,"author":{"gitId":"skyanzy"},"content":"                } else if (editWords.length \u003e 1 \u0026\u0026 editWords[0].equals(\"/to\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":397,"author":{"gitId":"skyanzy"},"content":"                    String end \u003d editLine.substring(3).trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":398,"author":{"gitId":"skyanzy"},"content":"                    LocalTime.parse(end, timeFormat);","lastModifiedDate":"2023-03-30"},{"lineNumber":399,"author":{"gitId":"skyanzy"},"content":"                    ((RecurringEvent) taskToEdit).setEnd(end);","lastModifiedDate":"2023-03-30"},{"lineNumber":400,"author":{"gitId":"skyanzy"},"content":"                } else if(editWords.length \u003e 1 \u0026\u0026 editWords[0].equals(\"/day\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":401,"author":{"gitId":"skyanzy"},"content":"                    DayOfWeek day \u003d DayOfWeek.valueOf(editLine.substring(4).trim());","lastModifiedDate":"2023-03-30"},{"lineNumber":402,"author":{"gitId":"skyanzy"},"content":"                    ((RecurringEvent) taskToEdit).setDay(day);","lastModifiedDate":"2023-03-30"},{"lineNumber":403,"author":{"gitId":"skyanzy"},"content":"                } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":404,"author":{"gitId":"skyanzy"},"content":"                    Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":405,"author":{"gitId":"skyanzy"},"content":"                }","lastModifiedDate":"2023-03-30"},{"lineNumber":406,"author":{"gitId":"skyanzy"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":407,"author":{"gitId":"skyanzy"},"content":"                LocalDateTime start \u003d LocalDateTime.parse(((Event) taskToEdit).getStart(), dateFormat);","lastModifiedDate":"2023-03-30"},{"lineNumber":408,"author":{"gitId":"skyanzy"},"content":"                LocalDateTime end \u003d LocalDateTime.parse(((Event) taskToEdit).getEnd(), dateFormat);","lastModifiedDate":"2023-03-30"},{"lineNumber":409,"author":{"gitId":"skyanzy"},"content":"                String newStartString \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":410,"author":{"gitId":"skyanzy"},"content":"                String newEndString \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":411,"author":{"gitId":"skyanzy"},"content":"                LocalDateTime newStart \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":412,"author":{"gitId":"skyanzy"},"content":"                LocalDateTime newEnd \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":413,"author":{"gitId":"skyanzy"},"content":"                if (editWords.length \u003e 1 \u0026\u0026 editWords[0].equals(\"/description\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":414,"author":{"gitId":"skyanzy"},"content":"                    String newDescription \u003d editLine.substring(12).trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":415,"author":{"gitId":"skyanzy"},"content":"                    if (newDescription.isBlank()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":416,"author":{"gitId":"skyanzy"},"content":"                        throw new EmptyDescriptionException();","lastModifiedDate":"2023-03-30"},{"lineNumber":417,"author":{"gitId":"skyanzy"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":418,"author":{"gitId":"skyanzy"},"content":"                    taskToEdit.setDescription(newDescription);","lastModifiedDate":"2023-03-30"},{"lineNumber":419,"author":{"gitId":"skyanzy"},"content":"                } else if (editWords.length \u003e 1 \u0026\u0026 editWords[0].equals(\"/from\")){","lastModifiedDate":"2023-03-30"},{"lineNumber":420,"author":{"gitId":"skyanzy"},"content":"                    newStartString \u003d editLine.substring(5).trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":421,"author":{"gitId":"skyanzy"},"content":"                    newStart \u003d LocalDateTime.parse(newStartString, dateFormat);","lastModifiedDate":"2023-03-30"},{"lineNumber":422,"author":{"gitId":"skyanzy"},"content":"                    //((Event) taskToEdit).setStart(newStart);","lastModifiedDate":"2023-03-30"},{"lineNumber":423,"author":{"gitId":"skyanzy"},"content":"                } else if (editWords.length \u003e 1 \u0026\u0026 editWords[0].equals(\"/to\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":424,"author":{"gitId":"skyanzy"},"content":"                    newEndString \u003d editLine.substring(3).trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":425,"author":{"gitId":"skyanzy"},"content":"                    newEnd\u003d LocalDateTime.parse(newEndString, dateFormat);","lastModifiedDate":"2023-03-30"},{"lineNumber":426,"author":{"gitId":"skyanzy"},"content":"                    //((Event) taskToEdit).setEnd(newEnd);","lastModifiedDate":"2023-03-30"},{"lineNumber":427,"author":{"gitId":"skyanzy"},"content":"                } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":428,"author":{"gitId":"skyanzy"},"content":"                    Ui.unknownCommandMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":429,"author":{"gitId":"skyanzy"},"content":"                }","lastModifiedDate":"2023-03-30"},{"lineNumber":430,"author":{"gitId":"skyanzy"},"content":"                if (newStart !\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":431,"author":{"gitId":"skyanzy"},"content":"                    if (newStart.isAfter(end)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":432,"author":{"gitId":"skyanzy"},"content":"                        throw new startAfterEndException();","lastModifiedDate":"2023-03-30"},{"lineNumber":433,"author":{"gitId":"skyanzy"},"content":"                    } else if (newStart.isBefore(LocalDateTime.now()) || end.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-30"},{"lineNumber":434,"author":{"gitId":"skyanzy"},"content":"                        throw new expiredDateException();","lastModifiedDate":"2023-03-30"},{"lineNumber":435,"author":{"gitId":"skyanzy"},"content":"                    } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":436,"author":{"gitId":"skyanzy"},"content":"                        ((Event) taskToEdit).setStart(newStartString);","lastModifiedDate":"2023-03-30"},{"lineNumber":437,"author":{"gitId":"skyanzy"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":438,"author":{"gitId":"skyanzy"},"content":"                } else if (newEnd !\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":439,"author":{"gitId":"skyanzy"},"content":"                    if (start.isAfter(newEnd)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":440,"author":{"gitId":"skyanzy"},"content":"                        throw new startAfterEndException();","lastModifiedDate":"2023-03-30"},{"lineNumber":441,"author":{"gitId":"skyanzy"},"content":"                    } else if (start.isBefore(LocalDateTime.now()) || newEnd.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-30"},{"lineNumber":442,"author":{"gitId":"skyanzy"},"content":"                        throw new expiredDateException();","lastModifiedDate":"2023-03-30"},{"lineNumber":443,"author":{"gitId":"skyanzy"},"content":"                    } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":444,"author":{"gitId":"skyanzy"},"content":"                        ((Event) taskToEdit).setEnd(newEndString);","lastModifiedDate":"2023-03-30"},{"lineNumber":445,"author":{"gitId":"skyanzy"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":446,"author":{"gitId":"skyanzy"},"content":"                }","lastModifiedDate":"2023-03-30"},{"lineNumber":447,"author":{"gitId":"skyanzy"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":448,"author":{"gitId":"skyanzy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":449,"author":{"gitId":"skyanzy"},"content":"        Ui.printEditedTask(taskToEdit);","lastModifiedDate":"2023-03-30"},{"lineNumber":450,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":451,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":452,"author":{"gitId":"skyanzy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":453,"author":{"gitId":"skyanzy"},"content":"     * tries editTask and handles exceptions","lastModifiedDate":"2023-03-30"},{"lineNumber":454,"author":{"gitId":"MichelleLiang0116"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-31"},{"lineNumber":455,"author":{"gitId":"MichelleLiang0116"},"content":"     * @param words The array of words generated from the user input","lastModifiedDate":"2023-03-31"},{"lineNumber":456,"author":{"gitId":"skyanzy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":457,"author":{"gitId":"skyanzy"},"content":"    static void tryEditTask(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-03-30"},{"lineNumber":458,"author":{"gitId":"skyanzy"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":459,"author":{"gitId":"skyanzy"},"content":"            editTask(tasks, words);","lastModifiedDate":"2023-03-30"},{"lineNumber":460,"author":{"gitId":"skyanzy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":461,"author":{"gitId":"skyanzy"},"content":"            Ui.invalidDateTimeMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":462,"author":{"gitId":"skyanzy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":463,"author":{"gitId":"skyanzy"},"content":"            Ui.invalidDayMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":464,"author":{"gitId":"skyanzy"},"content":"        } catch (expiredDateException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":465,"author":{"gitId":"skyanzy"},"content":"            Ui.expiredErrorMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":466,"author":{"gitId":"skyanzy"},"content":"        } catch (startAfterEndException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":467,"author":{"gitId":"skyanzy"},"content":"            Ui.startAfterEndErrorMessage();","lastModifiedDate":"2023-03-30"},{"lineNumber":468,"author":{"gitId":"skyanzy"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":469,"author":{"gitId":"MichelleLiang0116"},"content":"            Ui.emptyDescriptionErrorMessage();","lastModifiedDate":"2023-03-31"},{"lineNumber":470,"author":{"gitId":"skyanzy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":471,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":472,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":473,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":474,"author":{"gitId":"jeraldgau"},"content":"     * Deletes a task from the list","lastModifiedDate":"2023-03-09"},{"lineNumber":475,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":476,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":477,"author":{"gitId":"jeraldgau"},"content":"     * @param words The array of words generated from the user input","lastModifiedDate":"2023-03-09"},{"lineNumber":478,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":479,"author":{"gitId":"jeraldgau"},"content":"    static void deleteTask(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-03-09"},{"lineNumber":480,"author":{"gitId":"jeraldgau"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-09"},{"lineNumber":481,"author":{"gitId":"jeraldgau"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-09"},{"lineNumber":482,"author":{"gitId":"miahjerry"},"content":"        if (taskNumber \u003e taskCount || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-04-03"},{"lineNumber":483,"author":{"gitId":"jeraldgau"},"content":"            // Input task number exceeds the number of tasks in the list","lastModifiedDate":"2023-03-09"},{"lineNumber":484,"author":{"gitId":"jeraldgau"},"content":"            Ui.exceedTaskNumberMessage(taskNumber);","lastModifiedDate":"2023-03-09"},{"lineNumber":485,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":486,"author":{"gitId":"jeraldgau"},"content":"            Task taskToDelete \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":487,"author":{"gitId":"jeraldgau"},"content":"            tasks.remove(taskNumber - 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":488,"author":{"gitId":"jeraldgau"},"content":"            Task.decrementCount();","lastModifiedDate":"2023-03-09"},{"lineNumber":489,"author":{"gitId":"jeraldgau"},"content":"            Ui.deleteTaskMessage(taskToDelete);","lastModifiedDate":"2023-03-09"},{"lineNumber":490,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":491,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":492,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":493,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":494,"author":{"gitId":"jeraldgau"},"content":"     * Deletes a SchoolClass from the priority queue","lastModifiedDate":"2023-03-28"},{"lineNumber":495,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":496,"author":{"gitId":"jeraldgau"},"content":"     * @param classes The priority queue of SchoolClasses","lastModifiedDate":"2023-03-28"},{"lineNumber":497,"author":{"gitId":"jeraldgau"},"content":"     * @param line The line of user input","lastModifiedDate":"2023-03-28"},{"lineNumber":498,"author":{"gitId":"MichelleLiang0116"},"content":"     * @throws IllegalArgumentException handle IllegalArgumentException","lastModifiedDate":"2023-03-31"},{"lineNumber":499,"author":{"gitId":"MichelleLiang0116"},"content":"     * @throws NullPointerException handle NullPointerException","lastModifiedDate":"2023-03-31"},{"lineNumber":500,"author":{"gitId":"MichelleLiang0116"},"content":"     * @throws StringIndexOutOfBoundsException handle StringIndexOutOfBoundsException","lastModifiedDate":"2023-03-31"},{"lineNumber":501,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":502,"author":{"gitId":"jeraldgau"},"content":"    static void deleteClass(PriorityQueue\u003cSchoolClass\u003e classes, String line) throws","lastModifiedDate":"2023-03-26"},{"lineNumber":503,"author":{"gitId":"jeraldgau"},"content":"            IllegalArgumentException, NullPointerException, StringIndexOutOfBoundsException{","lastModifiedDate":"2023-03-26"},{"lineNumber":504,"author":{"gitId":"jeraldgau"},"content":"        try {","lastModifiedDate":"2023-03-26"},{"lineNumber":505,"author":{"gitId":"jeraldgau"},"content":"            // Buffer holds the string \"remove class\" and is redundant","lastModifiedDate":"2023-03-26"},{"lineNumber":506,"author":{"gitId":"jeraldgau"},"content":"            String buffer \u003d line.substring(0, line.indexOf(\"/class\")).trim();","lastModifiedDate":"2023-03-26"},{"lineNumber":507,"author":{"gitId":"jeraldgau"},"content":"            String className \u003d line.substring(line.indexOf(\"/class\") + 6, line.indexOf(\"/description\")).trim();","lastModifiedDate":"2023-03-26"},{"lineNumber":508,"author":{"gitId":"jeraldgau"},"content":"            String description \u003d line.substring(line.indexOf(\"/description\") + 12, line.indexOf(\"/day\")).trim();","lastModifiedDate":"2023-03-26"},{"lineNumber":509,"author":{"gitId":"jeraldgau"},"content":"            DayOfWeek day \u003d DayOfWeek.valueOf(line.substring(line.indexOf(\"/day\") + 4, line.indexOf(\"/from\")).trim());","lastModifiedDate":"2023-03-26"},{"lineNumber":510,"author":{"gitId":"jeraldgau"},"content":"            String startString \u003d line.substring(line.indexOf(\"/from\") + 5, line.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-03-26"},{"lineNumber":511,"author":{"gitId":"jeraldgau"},"content":"            String endString \u003d line.substring(line.indexOf(\"/to\") + 3).trim();","lastModifiedDate":"2023-03-26"},{"lineNumber":512,"author":{"gitId":"jeraldgau"},"content":"            SchoolClass toDelete \u003d new SchoolClass(className, description, day, startString, endString);","lastModifiedDate":"2023-03-26"},{"lineNumber":513,"author":{"gitId":"MichelleLiang0116"},"content":"            if (classes.remove(toDelete)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":514,"author":{"gitId":"jeraldgau"},"content":"                Ui.deleteClassMessage();","lastModifiedDate":"2023-03-28"},{"lineNumber":515,"author":{"gitId":"jeraldgau"},"content":"            } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":516,"author":{"gitId":"jeraldgau"},"content":"                Ui.unsuccessfulDeleteClassMessage();","lastModifiedDate":"2023-03-28"},{"lineNumber":517,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":518,"author":{"gitId":"jeraldgau"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-26"},{"lineNumber":519,"author":{"gitId":"jeraldgau"},"content":"            Ui.invalidDayMessage();","lastModifiedDate":"2023-03-26"},{"lineNumber":520,"author":{"gitId":"jeraldgau"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-03-26"},{"lineNumber":521,"author":{"gitId":"jeraldgau"},"content":"            Ui.emptyDayErrorMessage();","lastModifiedDate":"2023-03-26"},{"lineNumber":522,"author":{"gitId":"jeraldgau"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-26"},{"lineNumber":523,"author":{"gitId":"jeraldgau"},"content":"            Ui.invalidRemoveClassMessage();","lastModifiedDate":"2023-03-26"},{"lineNumber":524,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":525,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":526,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":527,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":528,"author":{"gitId":"jeraldgau"},"content":"     * Tries to delete a SchoolClass from the priority queue, and throws an error message","lastModifiedDate":"2023-03-28"},{"lineNumber":529,"author":{"gitId":"jeraldgau"},"content":"     * if unsuccessful. This method should be used instead of directly invoking","lastModifiedDate":"2023-03-28"},{"lineNumber":530,"author":{"gitId":"jeraldgau"},"content":"     * the deleteClass() method.","lastModifiedDate":"2023-03-28"},{"lineNumber":531,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":532,"author":{"gitId":"jeraldgau"},"content":"     * @param classes The priority queue of SchoolClasses","lastModifiedDate":"2023-03-28"},{"lineNumber":533,"author":{"gitId":"jeraldgau"},"content":"     * @param line The line of user input","lastModifiedDate":"2023-03-28"},{"lineNumber":534,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":535,"author":{"gitId":"jeraldgau"},"content":"    static void tryDeleteClass(PriorityQueue\u003cSchoolClass\u003e classes, String line) {","lastModifiedDate":"2023-03-26"},{"lineNumber":536,"author":{"gitId":"jeraldgau"},"content":"        if (!line.contains(\"/class\") || !line.contains(\"/description\") || !line.contains(\"/day\") ||","lastModifiedDate":"2023-03-26"},{"lineNumber":537,"author":{"gitId":"jeraldgau"},"content":"                !line.contains(\"/from\") || !line.contains(\"/to\")) {","lastModifiedDate":"2023-03-26"},{"lineNumber":538,"author":{"gitId":"jeraldgau"},"content":"            Ui.invalidRemoveClassMessage();","lastModifiedDate":"2023-03-26"},{"lineNumber":539,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":540,"author":{"gitId":"jeraldgau"},"content":"            deleteClass(classes, line);","lastModifiedDate":"2023-03-26"},{"lineNumber":541,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":542,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":543,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":544,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":545,"author":{"gitId":"jeraldgau"},"content":"     * Checks if the current day and time is past the day and end time of the SchoolClass.","lastModifiedDate":"2023-03-28"},{"lineNumber":546,"author":{"gitId":"jeraldgau"},"content":"     * If SchoolClass is over, mark as done, otherwise mark as not done.","lastModifiedDate":"2023-03-28"},{"lineNumber":547,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":548,"author":{"gitId":"jeraldgau"},"content":"     * @param day The enum for the day of week registered in the current SchoolClass to check","lastModifiedDate":"2023-03-28"},{"lineNumber":549,"author":{"gitId":"jeraldgau"},"content":"     * @param endString The end timing for the current SchoolClass to check","lastModifiedDate":"2023-03-28"},{"lineNumber":550,"author":{"gitId":"jeraldgau"},"content":"     * @param currSchoolClass The current SchoolClass","lastModifiedDate":"2023-03-28"},{"lineNumber":551,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":552,"author":{"gitId":"jeraldgau"},"content":"    static void checkClassOver(DayOfWeek day, String endString, SchoolClass currSchoolClass) {","lastModifiedDate":"2023-03-28"},{"lineNumber":553,"author":{"gitId":"jeraldgau"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-03-28"},{"lineNumber":554,"author":{"gitId":"jeraldgau"},"content":"        DayOfWeek dayToday \u003d today.getDayOfWeek();","lastModifiedDate":"2023-03-28"},{"lineNumber":555,"author":{"gitId":"jeraldgau"},"content":"        if (dayToday.getValue() \u003e day.getValue()) { // day of week passed","lastModifiedDate":"2023-03-28"},{"lineNumber":556,"author":{"gitId":"jeraldgau"},"content":"            currSchoolClass.markAsDone();","lastModifiedDate":"2023-03-28"},{"lineNumber":557,"author":{"gitId":"jeraldgau"},"content":"        } else if (dayToday.getValue() \u003c day.getValue()) { // day of week not passed","lastModifiedDate":"2023-03-28"},{"lineNumber":558,"author":{"gitId":"jeraldgau"},"content":"            currSchoolClass.markAsNotDone();","lastModifiedDate":"2023-03-28"},{"lineNumber":559,"author":{"gitId":"jeraldgau"},"content":"        } else { // same day of week","lastModifiedDate":"2023-03-28"},{"lineNumber":560,"author":{"gitId":"jeraldgau"},"content":"            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-03-28"},{"lineNumber":561,"author":{"gitId":"jeraldgau"},"content":"            LocalTime classEndTime \u003d LocalTime.parse(endString, timeFormat);","lastModifiedDate":"2023-03-28"},{"lineNumber":562,"author":{"gitId":"jeraldgau"},"content":"            LocalTime currTime \u003d LocalTime.now();","lastModifiedDate":"2023-03-28"},{"lineNumber":563,"author":{"gitId":"jeraldgau"},"content":"            if (currTime.isAfter(classEndTime)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":564,"author":{"gitId":"jeraldgau"},"content":"                currSchoolClass.markAsDone();","lastModifiedDate":"2023-03-28"},{"lineNumber":565,"author":{"gitId":"jeraldgau"},"content":"            } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":566,"author":{"gitId":"jeraldgau"},"content":"                currSchoolClass.markAsNotDone();","lastModifiedDate":"2023-03-28"},{"lineNumber":567,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":568,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":569,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":570,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":571,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":572,"author":{"gitId":"jeraldgau"},"content":"     * Clears the task list and SchoolClass priority queue, and reloads from save file.","lastModifiedDate":"2023-03-28"},{"lineNumber":573,"author":{"gitId":"jeraldgau"},"content":"     * This function is mainly used to update the done status of SchoolClasses in the schedule.","lastModifiedDate":"2023-03-28"},{"lineNumber":574,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":575,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The ArrayList of tasks","lastModifiedDate":"2023-03-28"},{"lineNumber":576,"author":{"gitId":"jeraldgau"},"content":"     * @param classes The priority queue of SchoolClasses","lastModifiedDate":"2023-03-28"},{"lineNumber":577,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":578,"author":{"gitId":"jeraldgau"},"content":"    static void refresh(ArrayList\u003cTask\u003e tasks, PriorityQueue\u003cSchoolClass\u003e classes) {","lastModifiedDate":"2023-03-28"},{"lineNumber":579,"author":{"gitId":"jeraldgau"},"content":"        tasks.clear();","lastModifiedDate":"2023-03-28"},{"lineNumber":580,"author":{"gitId":"jeraldgau"},"content":"        Task.clearCount();","lastModifiedDate":"2023-03-28"},{"lineNumber":581,"author":{"gitId":"jeraldgau"},"content":"        classes.clear();","lastModifiedDate":"2023-03-28"},{"lineNumber":582,"author":{"gitId":"jeraldgau"},"content":"        Storage.tryLoad(tasks, classes);","lastModifiedDate":"2023-03-28"},{"lineNumber":583,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":584,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":585,"author":{"gitId":"jeraldgau"},"content":"    static void purge(ArrayList\u003cTask\u003e tasks, PriorityQueue\u003cSchoolClass\u003e classes) {","lastModifiedDate":"2023-03-26"},{"lineNumber":586,"author":{"gitId":"thant"},"content":"        Ui.borderLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":587,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t Displaying all expired tasks below...\");","lastModifiedDate":"2023-03-23"},{"lineNumber":588,"author":{"gitId":"thant"},"content":"        System.out.println();","lastModifiedDate":"2023-03-23"},{"lineNumber":589,"author":{"gitId":"thant"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2023-03-23"},{"lineNumber":590,"author":{"gitId":"thant"},"content":"            int expiredCount \u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":591,"author":{"gitId":"thant"},"content":"            ArrayList\u003cTask\u003e expiredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":592,"author":{"gitId":"thant"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-03-23"},{"lineNumber":593,"author":{"gitId":"skyanzy"},"content":"                if (task instanceof Deadline \u0026\u0026 !(task instanceof RecurringDeadline)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":594,"author":{"gitId":"thant"},"content":"                    SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-23"},{"lineNumber":595,"author":{"gitId":"thant"},"content":"                    String deadline \u003d ((Deadline) task).getDeadline();","lastModifiedDate":"2023-03-23"},{"lineNumber":596,"author":{"gitId":"thant"},"content":"                    Date d \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":597,"author":{"gitId":"thant"},"content":"                    Date n \u003d new Date();","lastModifiedDate":"2023-03-23"},{"lineNumber":598,"author":{"gitId":"thant"},"content":"                    try {","lastModifiedDate":"2023-03-23"},{"lineNumber":599,"author":{"gitId":"thant"},"content":"                        d \u003d format.parse(deadline);","lastModifiedDate":"2023-03-23"},{"lineNumber":600,"author":{"gitId":"thant"},"content":"                    } catch (ParseException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":601,"author":{"gitId":"thant"},"content":"                        e.printStackTrace();","lastModifiedDate":"2023-03-23"},{"lineNumber":602,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-23"},{"lineNumber":603,"author":{"gitId":"thant"},"content":"                    assert d !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":604,"author":{"gitId":"thant"},"content":"                    long diff \u003d d.getTime() - n.getTime();","lastModifiedDate":"2023-03-23"},{"lineNumber":605,"author":{"gitId":"thant"},"content":"                    if (diff \u003c 0) {","lastModifiedDate":"2023-03-23"},{"lineNumber":606,"author":{"gitId":"thant"},"content":"                        expiredCount++;","lastModifiedDate":"2023-03-23"},{"lineNumber":607,"author":{"gitId":"thant"},"content":"                        System.out.println(task);","lastModifiedDate":"2023-03-23"},{"lineNumber":608,"author":{"gitId":"thant"},"content":"                        expiredTasks.add(task);","lastModifiedDate":"2023-03-23"},{"lineNumber":609,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-23"},{"lineNumber":610,"author":{"gitId":"skyanzy"},"content":"                } else if (task instanceof Event \u0026\u0026 !(task instanceof RecurringEvent)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":611,"author":{"gitId":"thant"},"content":"                    SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-23"},{"lineNumber":612,"author":{"gitId":"thant"},"content":"                    String end \u003d ((Event) task).getEnd();","lastModifiedDate":"2023-03-23"},{"lineNumber":613,"author":{"gitId":"thant"},"content":"                    Date d \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":614,"author":{"gitId":"thant"},"content":"                    Date n \u003d new Date();","lastModifiedDate":"2023-03-23"},{"lineNumber":615,"author":{"gitId":"thant"},"content":"                    try {","lastModifiedDate":"2023-03-23"},{"lineNumber":616,"author":{"gitId":"thant"},"content":"                        d \u003d format.parse(end);","lastModifiedDate":"2023-03-23"},{"lineNumber":617,"author":{"gitId":"thant"},"content":"                    } catch (ParseException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":618,"author":{"gitId":"thant"},"content":"                        e.printStackTrace();","lastModifiedDate":"2023-03-23"},{"lineNumber":619,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-23"},{"lineNumber":620,"author":{"gitId":"thant"},"content":"                    assert d !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":621,"author":{"gitId":"thant"},"content":"                    long diff \u003d d.getTime() - n.getTime();","lastModifiedDate":"2023-03-23"},{"lineNumber":622,"author":{"gitId":"thant"},"content":"                    if (diff \u003c 0) {","lastModifiedDate":"2023-03-23"},{"lineNumber":623,"author":{"gitId":"thant"},"content":"                        expiredCount++;","lastModifiedDate":"2023-03-23"},{"lineNumber":624,"author":{"gitId":"thant"},"content":"                        System.out.println(task);","lastModifiedDate":"2023-03-23"},{"lineNumber":625,"author":{"gitId":"thant"},"content":"                        expiredTasks.add(task);","lastModifiedDate":"2023-03-23"},{"lineNumber":626,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-23"},{"lineNumber":627,"author":{"gitId":"thant"},"content":"                } else if (task instanceof SchoolClass) {","lastModifiedDate":"2023-03-23"},{"lineNumber":628,"author":{"gitId":"thant"},"content":"                    SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-23"},{"lineNumber":629,"author":{"gitId":"thant"},"content":"                    String end \u003d ((SchoolClass) task).getEnd();","lastModifiedDate":"2023-03-23"},{"lineNumber":630,"author":{"gitId":"thant"},"content":"                    Date d \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":631,"author":{"gitId":"thant"},"content":"                    Date n \u003d new Date();","lastModifiedDate":"2023-03-23"},{"lineNumber":632,"author":{"gitId":"thant"},"content":"                    try {","lastModifiedDate":"2023-03-23"},{"lineNumber":633,"author":{"gitId":"thant"},"content":"                        d \u003d format.parse(end);","lastModifiedDate":"2023-03-23"},{"lineNumber":634,"author":{"gitId":"thant"},"content":"                    } catch (ParseException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":635,"author":{"gitId":"thant"},"content":"                        e.printStackTrace();","lastModifiedDate":"2023-03-23"},{"lineNumber":636,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-23"},{"lineNumber":637,"author":{"gitId":"thant"},"content":"                    assert d !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":638,"author":{"gitId":"thant"},"content":"                    long diff \u003d d.getTime() - n.getTime();","lastModifiedDate":"2023-03-23"},{"lineNumber":639,"author":{"gitId":"thant"},"content":"                    if (diff \u003c 0) {","lastModifiedDate":"2023-03-23"},{"lineNumber":640,"author":{"gitId":"thant"},"content":"                        expiredCount++;","lastModifiedDate":"2023-03-23"},{"lineNumber":641,"author":{"gitId":"thant"},"content":"                        System.out.println(task);","lastModifiedDate":"2023-03-23"},{"lineNumber":642,"author":{"gitId":"thant"},"content":"                        expiredTasks.add(task);","lastModifiedDate":"2023-03-23"},{"lineNumber":643,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-23"},{"lineNumber":644,"author":{"gitId":"thant"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":645,"author":{"gitId":"thant"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":646,"author":{"gitId":"thant"},"content":"            if (expiredCount \u003e 0) {","lastModifiedDate":"2023-03-23"},{"lineNumber":647,"author":{"gitId":"thant"},"content":"                Ui.borderLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":648,"author":{"gitId":"thant"},"content":"                System.out.println(\"\\t Quack! A total of \" + expiredCount + \" tasks have expired!\");","lastModifiedDate":"2023-03-23"},{"lineNumber":649,"author":{"gitId":"thant"},"content":"                System.out.println(\"\\t Should I remove these tasks from the pending list human?\");","lastModifiedDate":"2023-03-23"},{"lineNumber":650,"author":{"gitId":"thant"},"content":"                Ui.borderLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":651,"author":{"gitId":"thant"},"content":"                if (Ui.doubleCheck()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":652,"author":{"gitId":"thant"},"content":"                    for (Task expiredTask : expiredTasks) {","lastModifiedDate":"2023-03-23"},{"lineNumber":653,"author":{"gitId":"thant"},"content":"                        tasks.removeIf(task -\u003e task \u003d\u003d expiredTask);","lastModifiedDate":"2023-03-23"},{"lineNumber":654,"author":{"gitId":"thant"},"content":"                        Task.decrementCount();","lastModifiedDate":"2023-03-23"},{"lineNumber":655,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-03-23"},{"lineNumber":656,"author":{"gitId":"jeraldgau"},"content":"                    Storage.trySave(tasks, classes);","lastModifiedDate":"2023-03-26"},{"lineNumber":657,"author":{"gitId":"thant"},"content":"                    Ui.borderLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":658,"author":{"gitId":"thant"},"content":"                    System.out.println(\"\\t Expired Tasks have been purged from the list!\");","lastModifiedDate":"2023-03-23"},{"lineNumber":659,"author":{"gitId":"thant"},"content":"                    System.out.println(\"\\t I love purging things, human...\");","lastModifiedDate":"2023-03-24"},{"lineNumber":660,"author":{"gitId":"thant"},"content":"                    Ui.borderLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":661,"author":{"gitId":"thant"},"content":"                } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":662,"author":{"gitId":"thant"},"content":"                    Ui.borderLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":663,"author":{"gitId":"thant"},"content":"                    System.out.println(\"\\t Quack! Expired tasks have not been purged.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":664,"author":{"gitId":"thant"},"content":"                    Ui.borderLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":665,"author":{"gitId":"thant"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":666,"author":{"gitId":"thant"},"content":"            } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":667,"author":{"gitId":"thant"},"content":"                System.out.println(\"\\t Quack! No tasks have expired!\");","lastModifiedDate":"2023-03-23"},{"lineNumber":668,"author":{"gitId":"thant"},"content":"                Ui.borderLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":669,"author":{"gitId":"thant"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":670,"author":{"gitId":"thant"},"content":"        } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":671,"author":{"gitId":"thant"},"content":"            System.out.println(\"\\t Quack! No tasks currently pending!\");","lastModifiedDate":"2023-03-24"},{"lineNumber":672,"author":{"gitId":"thant"},"content":"            Ui.borderLine();","lastModifiedDate":"2023-03-24"},{"lineNumber":673,"author":{"gitId":"thant"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":674,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":675,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":676,"author":{"gitId":"miahjerry"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":677,"author":{"gitId":"miahjerry"},"content":"     * Takes in the task number and adds a note to the list of notes under that task","lastModifiedDate":"2023-03-30"},{"lineNumber":678,"author":{"gitId":"miahjerry"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":679,"author":{"gitId":"miahjerry"},"content":"     * @param tasks The arraylist of tasks","lastModifiedDate":"2023-03-30"},{"lineNumber":680,"author":{"gitId":"miahjerry"},"content":"     * @param words The array of strings from user input","lastModifiedDate":"2023-03-30"},{"lineNumber":681,"author":{"gitId":"miahjerry"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":682,"author":{"gitId":"miahjerry"},"content":"    static void addNote(ArrayList\u003cTask\u003e tasks, String[] words){","lastModifiedDate":"2023-03-29"},{"lineNumber":683,"author":{"gitId":"miahjerry"},"content":"        int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-29"},{"lineNumber":684,"author":{"gitId":"miahjerry"},"content":"        if (index-1 \u003c tasks.size() \u0026\u0026 index \u003e\u003d 1) {","lastModifiedDate":"2023-03-30"},{"lineNumber":685,"author":{"gitId":"miahjerry"},"content":"            System.out.println(\"\\t What note would you like to add to the following task?\");","lastModifiedDate":"2023-03-29"},{"lineNumber":686,"author":{"gitId":"miahjerry"},"content":"            System.out.println(tasks.get(index - 1).toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":687,"author":{"gitId":"miahjerry"},"content":"            Ui.borderLine();","lastModifiedDate":"2023-03-29"},{"lineNumber":688,"author":{"gitId":"miahjerry"},"content":"            Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-29"},{"lineNumber":689,"author":{"gitId":"miahjerry"},"content":"            String noteToAdd \u003d userInput.nextLine();","lastModifiedDate":"2023-03-29"},{"lineNumber":690,"author":{"gitId":"miahjerry"},"content":"            tasks.get(index - 1).addNotes(noteToAdd);","lastModifiedDate":"2023-03-29"},{"lineNumber":691,"author":{"gitId":"miahjerry"},"content":"            System.out.println(\"\\t The note has been added!\");","lastModifiedDate":"2023-03-29"},{"lineNumber":692,"author":{"gitId":"miahjerry"},"content":"            Ui.borderLine();","lastModifiedDate":"2023-03-29"},{"lineNumber":693,"author":{"gitId":"miahjerry"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":694,"author":{"gitId":"miahjerry"},"content":"            Ui.exceedTaskNumberMessage(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":695,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":696,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":697,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":698,"author":{"gitId":"miahjerry"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":699,"author":{"gitId":"miahjerry"},"content":"     * Takes in the task number and index of the note to be deleted and then deletes it","lastModifiedDate":"2023-03-30"},{"lineNumber":700,"author":{"gitId":"miahjerry"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":701,"author":{"gitId":"miahjerry"},"content":"     * @param tasks The arraylist of tasks","lastModifiedDate":"2023-03-30"},{"lineNumber":702,"author":{"gitId":"miahjerry"},"content":"     * @param words The array of strings from user input","lastModifiedDate":"2023-03-30"},{"lineNumber":703,"author":{"gitId":"miahjerry"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":704,"author":{"gitId":"miahjerry"},"content":"    static void deleteNotes(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-03-30"},{"lineNumber":705,"author":{"gitId":"miahjerry"},"content":"        int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-29"},{"lineNumber":706,"author":{"gitId":"miahjerry"},"content":"        int indexOfNoteToBeDeleted \u003d Integer.parseInt(words[2]);","lastModifiedDate":"2023-03-29"},{"lineNumber":707,"author":{"gitId":"miahjerry"},"content":"        if (index-1 \u003c tasks.size() \u0026\u0026 index \u003e\u003d 1) {","lastModifiedDate":"2023-03-30"},{"lineNumber":708,"author":{"gitId":"miahjerry"},"content":"            if (indexOfNoteToBeDeleted-1 \u003c tasks.get(index-1).numberOfNotes() \u0026\u0026 indexOfNoteToBeDeleted \u003e\u003d 1) {","lastModifiedDate":"2023-03-30"},{"lineNumber":709,"author":{"gitId":"miahjerry"},"content":"                Ui.borderLine();","lastModifiedDate":"2023-03-29"},{"lineNumber":710,"author":{"gitId":"miahjerry"},"content":"                System.out.println(\"\\t Deleting note: \");","lastModifiedDate":"2023-03-29"},{"lineNumber":711,"author":{"gitId":"miahjerry"},"content":"                ArrayList\u003cString\u003e noteToBeDeleted \u003d tasks.get(index - 1).getAdditionalNotes();","lastModifiedDate":"2023-03-29"},{"lineNumber":712,"author":{"gitId":"miahjerry"},"content":"                System.out.println(\"\\t \\t\" + noteToBeDeleted.get(indexOfNoteToBeDeleted - 1));","lastModifiedDate":"2023-03-29"},{"lineNumber":713,"author":{"gitId":"miahjerry"},"content":"                tasks.get(index - 1).deleteNote(indexOfNoteToBeDeleted);","lastModifiedDate":"2023-03-29"},{"lineNumber":714,"author":{"gitId":"miahjerry"},"content":"                Ui.borderLine();","lastModifiedDate":"2023-03-29"},{"lineNumber":715,"author":{"gitId":"miahjerry"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":716,"author":{"gitId":"miahjerry"},"content":"                Ui.exceedNoteNumberMessage(indexOfNoteToBeDeleted);","lastModifiedDate":"2023-03-30"},{"lineNumber":717,"author":{"gitId":"miahjerry"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":718,"author":{"gitId":"miahjerry"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":719,"author":{"gitId":"miahjerry"},"content":"            Ui.exceedTaskNumberMessage(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":720,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":721,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":722,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":723,"author":{"gitId":"miahjerry"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":724,"author":{"gitId":"miahjerry"},"content":"     * Takes in the task number and index of the note to be edited and then changes it","lastModifiedDate":"2023-03-30"},{"lineNumber":725,"author":{"gitId":"miahjerry"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":726,"author":{"gitId":"miahjerry"},"content":"     * @param tasks The arraylist of tasks","lastModifiedDate":"2023-03-30"},{"lineNumber":727,"author":{"gitId":"miahjerry"},"content":"     * @param words The array of strings from user input","lastModifiedDate":"2023-03-30"},{"lineNumber":728,"author":{"gitId":"miahjerry"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":729,"author":{"gitId":"miahjerry"},"content":"    static void editNote(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-03-30"},{"lineNumber":730,"author":{"gitId":"miahjerry"},"content":"        int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-30"},{"lineNumber":731,"author":{"gitId":"miahjerry"},"content":"        int indexOfNoteToBeEdited \u003d Integer.parseInt(words[2]);","lastModifiedDate":"2023-03-30"},{"lineNumber":732,"author":{"gitId":"miahjerry"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-30"},{"lineNumber":733,"author":{"gitId":"miahjerry"},"content":"        if (index-1 \u003c tasks.size() \u0026\u0026 index \u003e\u003d 1) {","lastModifiedDate":"2023-03-30"},{"lineNumber":734,"author":{"gitId":"miahjerry"},"content":"            if (indexOfNoteToBeEdited-1 \u003c tasks.get(index-1).numberOfNotes() \u0026\u0026 indexOfNoteToBeEdited \u003e\u003d 1) {","lastModifiedDate":"2023-03-30"},{"lineNumber":735,"author":{"gitId":"miahjerry"},"content":"                Ui.borderLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":736,"author":{"gitId":"miahjerry"},"content":"                System.out.println(\"\\t What would you like to change the note to? \");","lastModifiedDate":"2023-03-30"},{"lineNumber":737,"author":{"gitId":"miahjerry"},"content":"                System.out.println(\"\\t\" + \"\\t\" + tasks.get(index - 1).getNote(indexOfNoteToBeEdited - 1));","lastModifiedDate":"2023-03-30"},{"lineNumber":738,"author":{"gitId":"miahjerry"},"content":"                String editedNote \u003d userInput.nextLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":739,"author":{"gitId":"miahjerry"},"content":"                tasks.get(index - 1).editNote(indexOfNoteToBeEdited - 1, editedNote);","lastModifiedDate":"2023-03-30"},{"lineNumber":740,"author":{"gitId":"miahjerry"},"content":"                System.out.println(\"\\t\" + \"The specified note has been edited!\");","lastModifiedDate":"2023-03-30"},{"lineNumber":741,"author":{"gitId":"miahjerry"},"content":"                Ui.borderLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":742,"author":{"gitId":"miahjerry"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":743,"author":{"gitId":"miahjerry"},"content":"                Ui.exceedNoteNumberMessage(indexOfNoteToBeEdited);","lastModifiedDate":"2023-03-30"},{"lineNumber":744,"author":{"gitId":"miahjerry"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":745,"author":{"gitId":"miahjerry"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":746,"author":{"gitId":"miahjerry"},"content":"            Ui.exceedTaskNumberMessage(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":747,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":748,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":749,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"thant":147,"jeraldgau":280,"miahjerry":80,"MichelleLiang0116":13,"skyanzy":229}},{"path":"src/main/java/seedu/duck/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"skyanzy"},"content":"import seedu.duck.task.*;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"MichelleLiang0116"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"MichelleLiang0116"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"skyanzy"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"skyanzy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"skyanzy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"MichelleLiang0116"},"content":"import java.util.Date;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"thant"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"thant"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"miahjerry"},"content":"import java.util.Random;","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":" * Deals with interactions with the user","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"public class Ui {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"miahjerry"},"content":"    static void printDuck() {","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"miahjerry"},"content":"        System.out.println(\"           ,-.\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"miahjerry"},"content":"                \"       ,--\u0027 ~.).\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"miahjerry"},"content":"                \"     ,\u0027         `.\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"miahjerry"},"content":"                \"    ; (((__   __)))\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"miahjerry"},"content":"                \"    ;  ( (#) ( (#)\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"miahjerry"},"content":"                \"    |   \\\\_/___\\\\_/\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"miahjerry"},"content":"                \"   ,\\\"  ,-\u0027    `__\\\".\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"miahjerry"},"content":"                \"  (   ( ._   ____`.)--._        _\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"miahjerry"},"content":"                \"   `._ `-.`-\u0027 \\\\(`-\u0027  _  `-. _,-\u0027 `-/`.\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"miahjerry"},"content":"                \"    ,\u0027)   `.`._))  ,\u0027 `.   `.  ,\u0027,\u0027  ;\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"miahjerry"},"content":"                \"  .\u0027  .     `--\u0027  /     ).   `.      ;\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"miahjerry"},"content":"                \" ;     `-        /     \u0027  )         ;\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"miahjerry"},"content":"                \" \\\\                       \u0027)       ,\u0027\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"miahjerry"},"content":"                \"  \\\\                     ,\u0027       ;\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"miahjerry"},"content":"                \"   \\\\               `~~~\u0027       ,\u0027\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"miahjerry"},"content":"                \"    `.                      _,\u0027\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"miahjerry"},"content":"                \"      `-._________,--\u0027\");","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"miahjerry"},"content":"    static void printMotivationalQuote() {","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"miahjerry"},"content":"        String[] quotes \u003d {","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"miahjerry"},"content":"                \"Believe you can and you\u0027re halfway there. -Theodore Roosevelt\",","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"miahjerry"},"content":"                \"Start where you are. Use what you have. Do what you can. -Arthur Ashe\",","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"miahjerry"},"content":"                \"You miss 100% of the shots you don\u0027t take. -Wayne Gretzky\",","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"miahjerry"},"content":"                \"Success is not final, failure is not fatal: it is the courage to continue that counts. -Winston Churchill\",","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"miahjerry"},"content":"                \"You are never too old to set another goal or to dream a new dream. -C.S. Lewis\",","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"miahjerry"},"content":"                \"Believe in yourself and all that you are. Know that there is something inside you that is greater than any obstacle. -Christian D. Larson\",","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"miahjerry"},"content":"                \"Success is not how high you have climbed, but how you make a positive difference to the world. -Roy T. Bennett\",","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"miahjerry"},"content":"                \"A journey of a thousand miles begins with a single step. -Lao Tzu\",","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"miahjerry"},"content":"                \"The only way to do great work is to love what you do. -Steve Jobs\",","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"miahjerry"},"content":"                \"You have brains in your head. You have feet in your shoes. You can steer yourself any direction you choose. -Dr. Seuss\",","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"miahjerry"},"content":"                \"Believe you can and you\u0027re halfway there. -Theodore Roosevelt\",","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"miahjerry"},"content":"                \"You never know how strong you are until being strong is your only choice. -Bob Marley\",","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"miahjerry"},"content":"                \"Do not wait for opportunities, create them. -Roy T. Bennett\",","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"miahjerry"},"content":"                \"Believe in yourself, take on your challenges, dig deep within yourself to conquer fears. Never let anyone bring you down. You got this. -Chantal Sutherland\",","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"miahjerry"},"content":"                \"The greatest glory in living lies not in never falling, but in rising every time we fall. -Nelson Mandela\",","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"miahjerry"},"content":"                \"Believe in your infinite potential. Your only limitations are those you set upon yourself. -Roy T. Bennett\",","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"miahjerry"},"content":"                \"What you get by achieving your goals is not as important as what you become by achieving your goals. -Zig Ziglar\",","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"miahjerry"},"content":"                \"Don\u0027t watch the clock; do what it does. Keep going. -Sam Levenson\",","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"miahjerry"},"content":"                \"Believe that you will succeed, and you will. -Dale Carnegie\",","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"miahjerry"},"content":"                \"Success is not the key to happiness. Happiness is the key to success. If you love what you are doing, you will be successful. -Albert Schweitzer\"","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"miahjerry"},"content":"        };","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"miahjerry"},"content":"        Random rand \u003d new Random();","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"miahjerry"},"content":"        int index \u003d rand.nextInt(quotes.length);","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"miahjerry"},"content":"        System.out.println(\"\\t Have some motivation! Quack!\" + \"\\n\");","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"miahjerry"},"content":"        System.out.println(\"\\t \" + quotes[index]);","lastModifiedDate":"2023-04-02"},{"lineNumber":70,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":71,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"jeraldgau"},"content":"     * Prints out all currently stored tasks in the list","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"jeraldgau"},"content":"    static void list(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"jeraldgau"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"jeraldgau"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"miahjerry"},"content":"            if (!tasks.get(i).getAdditionalNotes().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"miahjerry"},"content":"                printList(tasks, i);","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"miahjerry"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"jeraldgau"},"content":"    static void listClasses(PriorityQueue\u003cSchoolClass\u003e classes, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"jeraldgau"},"content":"        TaskList.refresh(tasks, classes);","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"jeraldgau"},"content":"        Iterator\u003cSchoolClass\u003e iterator \u003d classes.iterator();","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Here is your class schedule:\\n\");","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"jeraldgau"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"MichelleLiang0116"},"content":"            System.out.println(\"\\t\" + iterator.next());","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"skyanzy"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"skyanzy"},"content":"     * prints out all classes, deadlines and events happening today","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"MichelleLiang0116"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"skyanzy"},"content":"     * @param tasks   array list of all tasks","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"skyanzy"},"content":"     * @param classes pq of all classes","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"skyanzy"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"skyanzy"},"content":"    static void listToday(ArrayList\u003cTask\u003e tasks, PriorityQueue\u003cSchoolClass\u003e classes) {","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"skyanzy"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"skyanzy"},"content":"        DayOfWeek dayToday \u003d today.getDayOfWeek();","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"skyanzy"},"content":"        borderLine();","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t Here is your class schedule for today\");","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"skyanzy"},"content":"        for (SchoolClass c : classes) {","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"skyanzy"},"content":"            if (c.getDay() \u003d\u003d dayToday) {","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"skyanzy"},"content":"                System.out.println(c);","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"skyanzy"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"skyanzy"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"skyanzy"},"content":"        System.out.println();","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"skyanzy"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"skyanzy"},"content":"        String dateToday \u003d dateFormat.format(today);","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t Here are your tasks today\");","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"skyanzy"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"skyanzy"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"skyanzy"},"content":"                if (task instanceof RecurringDeadline) {","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"skyanzy"},"content":"                    if (((RecurringDeadline) task).getDay() \u003d\u003d dayToday) {","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"skyanzy"},"content":"                        System.out.println(task);","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"skyanzy"},"content":"                    }","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"skyanzy"},"content":"                } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"skyanzy"},"content":"                    if (((Deadline) task).getDeadline().startsWith(dateToday)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"skyanzy"},"content":"                        System.out.println(task);","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"skyanzy"},"content":"                    }","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"skyanzy"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"skyanzy"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"skyanzy"},"content":"                if (task instanceof RecurringEvent) {","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"skyanzy"},"content":"                    if (((RecurringEvent) task).getDay() \u003d\u003d dayToday) {","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"skyanzy"},"content":"                        System.out.println(task);","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"skyanzy"},"content":"                    }","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"skyanzy"},"content":"                } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"skyanzy"},"content":"                    if (((Event) task).getStart().startsWith(dateToday)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"skyanzy"},"content":"                        System.out.println(task);","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"skyanzy"},"content":"                    }","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"skyanzy"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"skyanzy"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"skyanzy"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"skyanzy"},"content":"        borderLine();","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"miahjerry"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"miahjerry"},"content":"     * Prints out all currently stored tasks in the list arranged by their priority from high, medium to low","lastModifiedDate":"2023-03-22"},{"lineNumber":149,"author":{"gitId":"miahjerry"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"miahjerry"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-03-22"},{"lineNumber":151,"author":{"gitId":"miahjerry"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"miahjerry"},"content":"    static void printPriorityList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"miahjerry"},"content":"        borderLine();","lastModifiedDate":"2023-03-22"},{"lineNumber":154,"author":{"gitId":"miahjerry"},"content":"        System.out.println(\"\\t Here are the tasks in your list arranged by priority:\");","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"miahjerry"},"content":"        borderLine();","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"miahjerry"},"content":"        printHighPriority(tasks);","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"miahjerry"},"content":"        printMediumPriority(tasks);","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"miahjerry"},"content":"        printLowPriority(tasks);","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":160,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":161,"author":{"gitId":"miahjerry"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":162,"author":{"gitId":"miahjerry"},"content":"     * Goes through the task list and prints out the tasks that are high in priority","lastModifiedDate":"2023-03-22"},{"lineNumber":163,"author":{"gitId":"miahjerry"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":164,"author":{"gitId":"miahjerry"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-03-22"},{"lineNumber":165,"author":{"gitId":"miahjerry"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"miahjerry"},"content":"    static void printHighPriority(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-22"},{"lineNumber":167,"author":{"gitId":"MichelleLiang0116"},"content":"        ArrayList\u003cInteger\u003e indexOfHighPriority \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":168,"author":{"gitId":"miahjerry"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"miahjerry"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"miahjerry"},"content":"            if (tasks.get(i).returnPriority() \u003d\u003d 3) {","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"miahjerry"},"content":"                indexOfHighPriority.add(i);","lastModifiedDate":"2023-03-22"},{"lineNumber":172,"author":{"gitId":"miahjerry"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"miahjerry"},"content":"        if (!indexOfHighPriority.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"miahjerry"},"content":"            System.out.println(\"\\t QUACK QUACK QUACK!!!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":176,"author":{"gitId":"miahjerry"},"content":"            System.out.println(\"\\t You have \" + indexOfHighPriority.size() + \" tasks that are high in priority!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"miahjerry"},"content":"            for (int i \u003d 0; i \u003c indexOfHighPriority.size(); i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":178,"author":{"gitId":"miahjerry"},"content":"                System.out.println(\"\\t\" + (i + 1) + \".\" + tasks.get(indexOfHighPriority.get(i)));","lastModifiedDate":"2023-03-22"},{"lineNumber":179,"author":{"gitId":"miahjerry"},"content":"                if (!tasks.get(i).getAdditionalNotes().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"miahjerry"},"content":"                    ArrayList\u003cString\u003e toBePrinted \u003d tasks.get(i).getAdditionalNotes();","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"miahjerry"},"content":"                    for (int j \u003d 0; j \u003c toBePrinted.size(); j++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"miahjerry"},"content":"                        System.out.println(\"\\t\" + \"\\t - \" + (j + 1) + \". \" + toBePrinted.get(j));","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"miahjerry"},"content":"                    }","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"miahjerry"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"miahjerry"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":186,"author":{"gitId":"miahjerry"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":187,"author":{"gitId":"miahjerry"},"content":"            System.out.println(\"\\t There are no tasks that are high in priority!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":188,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":189,"author":{"gitId":"miahjerry"},"content":"        borderLine();","lastModifiedDate":"2023-03-22"},{"lineNumber":190,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":191,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":192,"author":{"gitId":"miahjerry"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":193,"author":{"gitId":"miahjerry"},"content":"     * Goes through the task list and prints out the tasks that are medium in priority","lastModifiedDate":"2023-03-22"},{"lineNumber":194,"author":{"gitId":"miahjerry"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":195,"author":{"gitId":"miahjerry"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-03-22"},{"lineNumber":196,"author":{"gitId":"miahjerry"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":197,"author":{"gitId":"miahjerry"},"content":"    static void printMediumPriority(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-22"},{"lineNumber":198,"author":{"gitId":"MichelleLiang0116"},"content":"        ArrayList\u003cInteger\u003e indexOfMediumPriority \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":199,"author":{"gitId":"miahjerry"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-22"},{"lineNumber":200,"author":{"gitId":"miahjerry"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":201,"author":{"gitId":"miahjerry"},"content":"            if (tasks.get(i).returnPriority() \u003d\u003d 2) {","lastModifiedDate":"2023-03-26"},{"lineNumber":202,"author":{"gitId":"miahjerry"},"content":"                indexOfMediumPriority.add(i);","lastModifiedDate":"2023-03-22"},{"lineNumber":203,"author":{"gitId":"miahjerry"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":204,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":205,"author":{"gitId":"miahjerry"},"content":"        if (!indexOfMediumPriority.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":206,"author":{"gitId":"miahjerry"},"content":"            System.out.println(\"\\t QUACK QUACK!!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":207,"author":{"gitId":"miahjerry"},"content":"            System.out.println(\"\\t You have \" + indexOfMediumPriority.size() + \" tasks that are medium in priority!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":208,"author":{"gitId":"miahjerry"},"content":"            for (int i \u003d 0; i \u003c indexOfMediumPriority.size(); i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":209,"author":{"gitId":"miahjerry"},"content":"                System.out.println(\"\\t\" + (i + 1) + \".\" + tasks.get(indexOfMediumPriority.get(i)));","lastModifiedDate":"2023-03-22"},{"lineNumber":210,"author":{"gitId":"miahjerry"},"content":"                if (!tasks.get(i).getAdditionalNotes().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"miahjerry"},"content":"                    ArrayList\u003cString\u003e toBePrinted \u003d tasks.get(i).getAdditionalNotes();","lastModifiedDate":"2023-03-29"},{"lineNumber":212,"author":{"gitId":"miahjerry"},"content":"                    for (int j \u003d 0; j \u003c toBePrinted.size(); j++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"miahjerry"},"content":"                        System.out.println(\"\\t\" + \"\\t - \" + (j + 1) + \". \" + toBePrinted.get(j));","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"miahjerry"},"content":"                    }","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"miahjerry"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"miahjerry"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":217,"author":{"gitId":"miahjerry"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":218,"author":{"gitId":"miahjerry"},"content":"            System.out.println(\"\\t There are no tasks that are medium in priority!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":219,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":220,"author":{"gitId":"miahjerry"},"content":"        borderLine();","lastModifiedDate":"2023-03-22"},{"lineNumber":221,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":222,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":223,"author":{"gitId":"miahjerry"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":224,"author":{"gitId":"miahjerry"},"content":"     * Goes through the task list and prints out the tasks that are low in priority","lastModifiedDate":"2023-03-22"},{"lineNumber":225,"author":{"gitId":"miahjerry"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":226,"author":{"gitId":"miahjerry"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-03-22"},{"lineNumber":227,"author":{"gitId":"miahjerry"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":228,"author":{"gitId":"miahjerry"},"content":"    static void printLowPriority(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-22"},{"lineNumber":229,"author":{"gitId":"MichelleLiang0116"},"content":"        ArrayList\u003cInteger\u003e indexOfLowPriority \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":230,"author":{"gitId":"miahjerry"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-22"},{"lineNumber":231,"author":{"gitId":"miahjerry"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":232,"author":{"gitId":"miahjerry"},"content":"            if (tasks.get(i).returnPriority() \u003d\u003d 1) {","lastModifiedDate":"2023-03-22"},{"lineNumber":233,"author":{"gitId":"miahjerry"},"content":"                indexOfLowPriority.add(i);","lastModifiedDate":"2023-03-22"},{"lineNumber":234,"author":{"gitId":"miahjerry"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":235,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":236,"author":{"gitId":"miahjerry"},"content":"        if (!indexOfLowPriority.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":237,"author":{"gitId":"miahjerry"},"content":"            System.out.println(\"\\t Quack!\");","lastModifiedDate":"2023-03-26"},{"lineNumber":238,"author":{"gitId":"miahjerry"},"content":"            System.out.println(\"\\t You have \" + indexOfLowPriority.size() + \" tasks that are low in priority!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":239,"author":{"gitId":"miahjerry"},"content":"            for (int i \u003d 0; i \u003c indexOfLowPriority.size(); i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":240,"author":{"gitId":"miahjerry"},"content":"                System.out.println(\"\\t\" + (i + 1) + \".\" + tasks.get(indexOfLowPriority.get(i)));","lastModifiedDate":"2023-03-22"},{"lineNumber":241,"author":{"gitId":"miahjerry"},"content":"                if (!tasks.get(i).getAdditionalNotes().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"miahjerry"},"content":"                    ArrayList\u003cString\u003e toBePrinted \u003d tasks.get(i).getAdditionalNotes();","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"miahjerry"},"content":"                    for (int j \u003d 0; j \u003c toBePrinted.size(); j++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":244,"author":{"gitId":"miahjerry"},"content":"                        System.out.println(\"\\t\" + \"\\t - \" + (j + 1) + \". \" + toBePrinted.get(j));","lastModifiedDate":"2023-03-29"},{"lineNumber":245,"author":{"gitId":"miahjerry"},"content":"                    }","lastModifiedDate":"2023-03-29"},{"lineNumber":246,"author":{"gitId":"miahjerry"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":247,"author":{"gitId":"miahjerry"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":248,"author":{"gitId":"miahjerry"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":249,"author":{"gitId":"miahjerry"},"content":"            System.out.println(\"\\t There are no tasks that are low in priority!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":250,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":251,"author":{"gitId":"miahjerry"},"content":"        borderLine();","lastModifiedDate":"2023-03-22"},{"lineNumber":252,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":253,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":254,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":255,"author":{"gitId":"jeraldgau"},"content":"     * Finds tasks in the list that contain keywords input by the user","lastModifiedDate":"2023-03-09"},{"lineNumber":256,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":257,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":258,"author":{"gitId":"jeraldgau"},"content":"     * @param words The array of words generated from the user input","lastModifiedDate":"2023-03-09"},{"lineNumber":259,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":260,"author":{"gitId":"jeraldgau"},"content":"    static void find(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-03-09"},{"lineNumber":261,"author":{"gitId":"jeraldgau"},"content":"        ArrayList\u003cTask\u003e matchingResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":262,"author":{"gitId":"miahjerry"},"content":"        ArrayList\u003cInteger\u003e matchingResultsIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":263,"author":{"gitId":"jeraldgau"},"content":"        int matchCount \u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":264,"author":{"gitId":"miahjerry"},"content":"        String keyword \u003d Parser.processKeywords(words, 1);","lastModifiedDate":"2023-03-29"},{"lineNumber":265,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":266,"author":{"gitId":"miahjerry"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":267,"author":{"gitId":"miahjerry"},"content":"            if (tasks.get(i).getDescription().contains(keyword)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"miahjerry"},"content":"                matchingResults.add(tasks.get(i));","lastModifiedDate":"2023-03-23"},{"lineNumber":269,"author":{"gitId":"miahjerry"},"content":"                matchingResultsIndex.add(i + 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":270,"author":{"gitId":"jeraldgau"},"content":"                matchCount++;","lastModifiedDate":"2023-03-09"},{"lineNumber":271,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":272,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":273,"author":{"gitId":"miahjerry"},"content":"        printFindResults(matchingResults, matchCount, matchingResultsIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":274,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":275,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":276,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":277,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":278,"author":{"gitId":"jeraldgau"},"content":"     * Prints the results of the find command","lastModifiedDate":"2023-03-09"},{"lineNumber":279,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":280,"author":{"gitId":"jeraldgau"},"content":"     * @param matchingResults The array list of tasks that contain the keywords","lastModifiedDate":"2023-03-09"},{"lineNumber":281,"author":{"gitId":"jeraldgau"},"content":"     * @param matchCount      The number of tasks in the list that contain the keywords","lastModifiedDate":"2023-03-09"},{"lineNumber":282,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":283,"author":{"gitId":"jeraldgau"},"content":"    private static void printFindResults(ArrayList\u003cTask\u003e matchingResults, int matchCount,","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"jeraldgau"},"content":"                                         ArrayList\u003cInteger\u003e matchingResultsIndex) {","lastModifiedDate":"2023-03-28"},{"lineNumber":285,"author":{"gitId":"jeraldgau"},"content":"        if (matchingResults.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":286,"author":{"gitId":"jeraldgau"},"content":"            noMatchMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":287,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":288,"author":{"gitId":"miahjerry"},"content":"            printMatchingList(matchingResults, matchCount, matchingResultsIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":289,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":290,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":291,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":292,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":293,"author":{"gitId":"jeraldgau"},"content":"     * Prints the list of tasks that contain the keywords","lastModifiedDate":"2023-03-09"},{"lineNumber":294,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":295,"author":{"gitId":"jeraldgau"},"content":"     * @param matchingResults      The array list of tasks that contain the keywords","lastModifiedDate":"2023-03-09"},{"lineNumber":296,"author":{"gitId":"jeraldgau"},"content":"     * @param matchCount           The number of tasks in the list that contain the keywords","lastModifiedDate":"2023-03-09"},{"lineNumber":297,"author":{"gitId":"miahjerry"},"content":"     * @param matchingResultsIndex The index of the task in the main list","lastModifiedDate":"2023-03-26"},{"lineNumber":298,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":299,"author":{"gitId":"jeraldgau"},"content":"    static void printMatchingList(ArrayList\u003cTask\u003e matchingResults, int matchCount,","lastModifiedDate":"2023-03-28"},{"lineNumber":300,"author":{"gitId":"jeraldgau"},"content":"                                  ArrayList\u003cInteger\u003e matchingResultsIndex) {","lastModifiedDate":"2023-03-28"},{"lineNumber":301,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":302,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Here are the matching tasks in your list:\");","lastModifiedDate":"2023-03-09"},{"lineNumber":303,"author":{"gitId":"jeraldgau"},"content":"        for (int i \u003d 0; i \u003c matchCount; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":304,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t \" + (i + 1) + \".\" + matchingResults.get(i) +","lastModifiedDate":"2023-03-28"},{"lineNumber":305,"author":{"gitId":"jeraldgau"},"content":"                    \"   || The index of this item is \" + matchingResultsIndex.get(i));","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":307,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":308,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":309,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":310,"author":{"gitId":"MichelleLiang0116"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":311,"author":{"gitId":"MichelleLiang0116"},"content":"     * Display upcoming deadline","lastModifiedDate":"2023-03-21"},{"lineNumber":312,"author":{"gitId":"MichelleLiang0116"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":313,"author":{"gitId":"MichelleLiang0116"},"content":"     * @param tasks tasks store in the file","lastModifiedDate":"2023-03-21"},{"lineNumber":314,"author":{"gitId":"MichelleLiang0116"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":315,"author":{"gitId":"MichelleLiang0116"},"content":"    static void displayUpcomingDeadline(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-21"},{"lineNumber":316,"author":{"gitId":"MichelleLiang0116"},"content":"        System.out.println(\"\\t Here are the upcoming deadline:  \");","lastModifiedDate":"2023-03-21"},{"lineNumber":317,"author":{"gitId":"MichelleLiang0116"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-03-21"},{"lineNumber":318,"author":{"gitId":"MichelleLiang0116"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-03-31"},{"lineNumber":319,"author":{"gitId":"MichelleLiang0116"},"content":"            if (t instanceof Deadline \u0026\u0026 !(t instanceof RecurringDeadline)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":320,"author":{"gitId":"MichelleLiang0116"},"content":"                SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-21"},{"lineNumber":321,"author":{"gitId":"MichelleLiang0116"},"content":"                String deadline \u003d ((Deadline) t).getDeadline();","lastModifiedDate":"2023-03-31"},{"lineNumber":322,"author":{"gitId":"MichelleLiang0116"},"content":"                Date d;","lastModifiedDate":"2023-03-23"},{"lineNumber":323,"author":{"gitId":"MichelleLiang0116"},"content":"                Date n \u003d new Date();","lastModifiedDate":"2023-03-21"},{"lineNumber":324,"author":{"gitId":"MichelleLiang0116"},"content":"                try {","lastModifiedDate":"2023-03-21"},{"lineNumber":325,"author":{"gitId":"MichelleLiang0116"},"content":"                    d \u003d format.parse(deadline);","lastModifiedDate":"2023-03-21"},{"lineNumber":326,"author":{"gitId":"MichelleLiang0116"},"content":"                    long diff \u003d d.getTime() - n.getTime();","lastModifiedDate":"2023-03-21"},{"lineNumber":327,"author":{"gitId":"skyanzy"},"content":"                    String di \u003d getTimeDiff(diff);","lastModifiedDate":"2023-03-23"},{"lineNumber":328,"author":{"gitId":"MichelleLiang0116"},"content":"                    String description \u003d t.getDescription().replace(\"Deadlines\", \"\");","lastModifiedDate":"2023-04-03"},{"lineNumber":329,"author":{"gitId":"MichelleLiang0116"},"content":"                    System.out.println(\"\\t \" + (count + 1) + \".\" + description + \" (\" + di + \"before the deadline)\");","lastModifiedDate":"2023-03-21"},{"lineNumber":330,"author":{"gitId":"MichelleLiang0116"},"content":"                    count++;","lastModifiedDate":"2023-03-21"},{"lineNumber":331,"author":{"gitId":"MichelleLiang0116"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":332,"author":{"gitId":"MichelleLiang0116"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-03-23"},{"lineNumber":333,"author":{"gitId":"MichelleLiang0116"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":334,"author":{"gitId":"MichelleLiang0116"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":335,"author":{"gitId":"MichelleLiang0116"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":336,"author":{"gitId":"MichelleLiang0116"},"content":"        borderLine();","lastModifiedDate":"2023-03-21"},{"lineNumber":337,"author":{"gitId":"MichelleLiang0116"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":338,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":339,"author":{"gitId":"MichelleLiang0116"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":340,"author":{"gitId":"MichelleLiang0116"},"content":"     * Display upcoming event","lastModifiedDate":"2023-04-03"},{"lineNumber":341,"author":{"gitId":"MichelleLiang0116"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":342,"author":{"gitId":"MichelleLiang0116"},"content":"     * @param tasks tasks store in the file","lastModifiedDate":"2023-04-03"},{"lineNumber":343,"author":{"gitId":"MichelleLiang0116"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":344,"author":{"gitId":"MichelleLiang0116"},"content":"    static void displayUpcomingEvent(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-04-03"},{"lineNumber":345,"author":{"gitId":"MichelleLiang0116"},"content":"        System.out.println(\"\\t Here are the upcoming event:  \");","lastModifiedDate":"2023-04-03"},{"lineNumber":346,"author":{"gitId":"MichelleLiang0116"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-04-03"},{"lineNumber":347,"author":{"gitId":"MichelleLiang0116"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-04-03"},{"lineNumber":348,"author":{"gitId":"MichelleLiang0116"},"content":"            if (t instanceof Event \u0026\u0026 !(t instanceof RecurringEvent)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":349,"author":{"gitId":"MichelleLiang0116"},"content":"                SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-04-03"},{"lineNumber":350,"author":{"gitId":"MichelleLiang0116"},"content":"                String deadline \u003d ((Event) t).getStart();","lastModifiedDate":"2023-04-03"},{"lineNumber":351,"author":{"gitId":"MichelleLiang0116"},"content":"                Date d;","lastModifiedDate":"2023-04-03"},{"lineNumber":352,"author":{"gitId":"MichelleLiang0116"},"content":"                Date n \u003d new Date();","lastModifiedDate":"2023-04-03"},{"lineNumber":353,"author":{"gitId":"MichelleLiang0116"},"content":"                try {","lastModifiedDate":"2023-04-03"},{"lineNumber":354,"author":{"gitId":"MichelleLiang0116"},"content":"                    d \u003d format.parse(deadline);","lastModifiedDate":"2023-04-03"},{"lineNumber":355,"author":{"gitId":"MichelleLiang0116"},"content":"                    long diff \u003d d.getTime() - n.getTime();","lastModifiedDate":"2023-04-03"},{"lineNumber":356,"author":{"gitId":"MichelleLiang0116"},"content":"                    String di \u003d getTimeDiff(diff);","lastModifiedDate":"2023-04-03"},{"lineNumber":357,"author":{"gitId":"MichelleLiang0116"},"content":"                    String description \u003d t.getDescription().replace(\"Events\", \"\");","lastModifiedDate":"2023-04-03"},{"lineNumber":358,"author":{"gitId":"MichelleLiang0116"},"content":"                    System.out.println(\"\\t \" + (count + 1) + \".\" + description + \" (\" + di + \"before the event start)\");","lastModifiedDate":"2023-04-03"},{"lineNumber":359,"author":{"gitId":"MichelleLiang0116"},"content":"                    count++;","lastModifiedDate":"2023-04-03"},{"lineNumber":360,"author":{"gitId":"MichelleLiang0116"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":361,"author":{"gitId":"MichelleLiang0116"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-04-03"},{"lineNumber":362,"author":{"gitId":"MichelleLiang0116"},"content":"                }","lastModifiedDate":"2023-04-03"},{"lineNumber":363,"author":{"gitId":"MichelleLiang0116"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":364,"author":{"gitId":"MichelleLiang0116"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":365,"author":{"gitId":"MichelleLiang0116"},"content":"        borderLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":366,"author":{"gitId":"MichelleLiang0116"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":367,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":368,"author":{"gitId":"skyanzy"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":369,"author":{"gitId":"skyanzy"},"content":"     * Prints the list of tasks in x days in the future","lastModifiedDate":"2023-03-23"},{"lineNumber":370,"author":{"gitId":"skyanzy"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":371,"author":{"gitId":"skyanzy"},"content":"     * @param tasks the array list of all the tasks","lastModifiedDate":"2023-03-23"},{"lineNumber":372,"author":{"gitId":"skyanzy"},"content":"     * @param days  the required the number of days x from now onwards","lastModifiedDate":"2023-03-23"},{"lineNumber":373,"author":{"gitId":"skyanzy"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":374,"author":{"gitId":"skyanzy"},"content":"    static void printUpcomingTasks(ArrayList\u003cTask\u003e tasks, String days) {","lastModifiedDate":"2023-03-23"},{"lineNumber":375,"author":{"gitId":"skyanzy"},"content":"        borderLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":376,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t Here are your tasks in \" + days + \" days:\");","lastModifiedDate":"2023-03-23"},{"lineNumber":377,"author":{"gitId":"skyanzy"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":378,"author":{"gitId":"MichelleLiang0116"},"content":"        Date d;","lastModifiedDate":"2023-03-23"},{"lineNumber":379,"author":{"gitId":"skyanzy"},"content":"        Date n \u003d new Date();","lastModifiedDate":"2023-03-23"},{"lineNumber":380,"author":{"gitId":"skyanzy"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-23"},{"lineNumber":381,"author":{"gitId":"MichelleLiang0116"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-03-31"},{"lineNumber":382,"author":{"gitId":"skyanzy"},"content":"            String timeUntilTask \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":383,"author":{"gitId":"MichelleLiang0116"},"content":"            if (t instanceof Deadline \u0026\u0026 !(t instanceof RecurringDeadline)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":384,"author":{"gitId":"MichelleLiang0116"},"content":"                timeUntilTask \u003d ((Deadline) t).getDeadline();","lastModifiedDate":"2023-03-31"},{"lineNumber":385,"author":{"gitId":"MichelleLiang0116"},"content":"            } else if (t instanceof Event \u0026\u0026 !(t instanceof RecurringEvent)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":386,"author":{"gitId":"MichelleLiang0116"},"content":"                timeUntilTask \u003d ((Event) t).getStart();","lastModifiedDate":"2023-03-31"},{"lineNumber":387,"author":{"gitId":"MichelleLiang0116"},"content":"            } else if (t instanceof SchoolClass) {","lastModifiedDate":"2023-03-31"},{"lineNumber":388,"author":{"gitId":"MichelleLiang0116"},"content":"                timeUntilTask \u003d ((SchoolClass) t).getStart();","lastModifiedDate":"2023-03-31"},{"lineNumber":389,"author":{"gitId":"skyanzy"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":390,"author":{"gitId":"skyanzy"},"content":"            if (timeUntilTask !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":391,"author":{"gitId":"skyanzy"},"content":"                try {","lastModifiedDate":"2023-03-23"},{"lineNumber":392,"author":{"gitId":"skyanzy"},"content":"                    d \u003d format.parse(timeUntilTask);","lastModifiedDate":"2023-03-23"},{"lineNumber":393,"author":{"gitId":"skyanzy"},"content":"                    long diff \u003d d.getTime() - n.getTime();","lastModifiedDate":"2023-03-23"},{"lineNumber":394,"author":{"gitId":"skyanzy"},"content":"                    String di \u003d getTimeDiff(diff);","lastModifiedDate":"2023-03-23"},{"lineNumber":395,"author":{"gitId":"skyanzy"},"content":"                    String[] diffSplit \u003d di.split(\" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":396,"author":{"gitId":"skyanzy"},"content":"                    if (diffSplit.length \u003e\u003d 2 \u0026\u0026 ((diffSplit[1].contains(\"day\") \u0026\u0026 Integer.parseInt(diffSplit[0])","lastModifiedDate":"2023-03-23"},{"lineNumber":397,"author":{"gitId":"skyanzy"},"content":"                            \u003c\u003d Integer.parseInt(days)) || diffSplit[1].contains(\"hour\")","lastModifiedDate":"2023-03-23"},{"lineNumber":398,"author":{"gitId":"skyanzy"},"content":"                            || diffSplit[1].contains(\"minute\"))) {","lastModifiedDate":"2023-03-23"},{"lineNumber":399,"author":{"gitId":"skyanzy"},"content":"                        count++;","lastModifiedDate":"2023-03-23"},{"lineNumber":400,"author":{"gitId":"MichelleLiang0116"},"content":"                        System.out.println(\"\\t \" + count + \".\" + t);","lastModifiedDate":"2023-03-31"},{"lineNumber":401,"author":{"gitId":"skyanzy"},"content":"                    }","lastModifiedDate":"2023-03-23"},{"lineNumber":402,"author":{"gitId":"MichelleLiang0116"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":403,"author":{"gitId":"MichelleLiang0116"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-03-23"},{"lineNumber":404,"author":{"gitId":"MichelleLiang0116"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":405,"author":{"gitId":"skyanzy"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":406,"author":{"gitId":"skyanzy"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":407,"author":{"gitId":"skyanzy"},"content":"        borderLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":408,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":409,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":410,"author":{"gitId":"MichelleLiang0116"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":411,"author":{"gitId":"MichelleLiang0116"},"content":"     * Prints the list of events in x days in the future","lastModifiedDate":"2023-04-03"},{"lineNumber":412,"author":{"gitId":"MichelleLiang0116"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":413,"author":{"gitId":"MichelleLiang0116"},"content":"     * @param tasks the array list of all the tasks","lastModifiedDate":"2023-04-03"},{"lineNumber":414,"author":{"gitId":"MichelleLiang0116"},"content":"     * @param days  the required the number of days x from now onwards","lastModifiedDate":"2023-04-03"},{"lineNumber":415,"author":{"gitId":"MichelleLiang0116"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":416,"author":{"gitId":"MichelleLiang0116"},"content":"    static void printUpcomingEvents(ArrayList\u003cTask\u003e tasks, String days) {","lastModifiedDate":"2023-04-03"},{"lineNumber":417,"author":{"gitId":"MichelleLiang0116"},"content":"        borderLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":418,"author":{"gitId":"MichelleLiang0116"},"content":"        System.out.println(\"\\t Here are your events in \" + days + \" days:\");","lastModifiedDate":"2023-04-03"},{"lineNumber":419,"author":{"gitId":"MichelleLiang0116"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-04-03"},{"lineNumber":420,"author":{"gitId":"MichelleLiang0116"},"content":"        Date d;","lastModifiedDate":"2023-04-03"},{"lineNumber":421,"author":{"gitId":"MichelleLiang0116"},"content":"        Date n \u003d new Date();","lastModifiedDate":"2023-04-03"},{"lineNumber":422,"author":{"gitId":"MichelleLiang0116"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-04-03"},{"lineNumber":423,"author":{"gitId":"MichelleLiang0116"},"content":"        boolean noEvent \u003d true;","lastModifiedDate":"2023-04-03"},{"lineNumber":424,"author":{"gitId":"MichelleLiang0116"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-04-03"},{"lineNumber":425,"author":{"gitId":"MichelleLiang0116"},"content":"            String timeUntilTask;","lastModifiedDate":"2023-04-03"},{"lineNumber":426,"author":{"gitId":"MichelleLiang0116"},"content":"            if (t instanceof Event \u0026\u0026 !(t instanceof RecurringEvent)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":427,"author":{"gitId":"MichelleLiang0116"},"content":"                noEvent \u003d false;","lastModifiedDate":"2023-04-03"},{"lineNumber":428,"author":{"gitId":"MichelleLiang0116"},"content":"                timeUntilTask \u003d ((Event) t).getStart();","lastModifiedDate":"2023-04-03"},{"lineNumber":429,"author":{"gitId":"MichelleLiang0116"},"content":"                try {","lastModifiedDate":"2023-04-03"},{"lineNumber":430,"author":{"gitId":"MichelleLiang0116"},"content":"                    d \u003d format.parse(timeUntilTask);","lastModifiedDate":"2023-04-03"},{"lineNumber":431,"author":{"gitId":"MichelleLiang0116"},"content":"                    long diff \u003d d.getTime() - n.getTime();","lastModifiedDate":"2023-04-03"},{"lineNumber":432,"author":{"gitId":"MichelleLiang0116"},"content":"                    String di \u003d getTimeDiff(diff);","lastModifiedDate":"2023-04-03"},{"lineNumber":433,"author":{"gitId":"MichelleLiang0116"},"content":"                    String[] diffSplit \u003d di.split(\" \");","lastModifiedDate":"2023-04-03"},{"lineNumber":434,"author":{"gitId":"MichelleLiang0116"},"content":"                    if (diffSplit.length \u003e\u003d 2 \u0026\u0026 ((diffSplit[1].contains(\"day\") \u0026\u0026 Integer.parseInt(diffSplit[0])","lastModifiedDate":"2023-04-03"},{"lineNumber":435,"author":{"gitId":"MichelleLiang0116"},"content":"                            \u003c\u003d Integer.parseInt(days)) || diffSplit[1].contains(\"hour\")","lastModifiedDate":"2023-04-03"},{"lineNumber":436,"author":{"gitId":"MichelleLiang0116"},"content":"                            || diffSplit[1].contains(\"minute\"))) {","lastModifiedDate":"2023-04-03"},{"lineNumber":437,"author":{"gitId":"MichelleLiang0116"},"content":"                        count++;","lastModifiedDate":"2023-04-03"},{"lineNumber":438,"author":{"gitId":"MichelleLiang0116"},"content":"                        System.out.println(\"\\t \" + count + \".\" + t);","lastModifiedDate":"2023-04-03"},{"lineNumber":439,"author":{"gitId":"MichelleLiang0116"},"content":"                    }","lastModifiedDate":"2023-04-03"},{"lineNumber":440,"author":{"gitId":"MichelleLiang0116"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":441,"author":{"gitId":"MichelleLiang0116"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-04-03"},{"lineNumber":442,"author":{"gitId":"MichelleLiang0116"},"content":"                }","lastModifiedDate":"2023-04-03"},{"lineNumber":443,"author":{"gitId":"MichelleLiang0116"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":444,"author":{"gitId":"MichelleLiang0116"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":445,"author":{"gitId":"MichelleLiang0116"},"content":"        if (noEvent) {","lastModifiedDate":"2023-04-03"},{"lineNumber":446,"author":{"gitId":"MichelleLiang0116"},"content":"            System.out.println(\"\\t No Upcoming Events!\");","lastModifiedDate":"2023-04-03"},{"lineNumber":447,"author":{"gitId":"MichelleLiang0116"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":448,"author":{"gitId":"MichelleLiang0116"},"content":"        borderLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":449,"author":{"gitId":"MichelleLiang0116"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":450,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":451,"author":{"gitId":"MichelleLiang0116"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":452,"author":{"gitId":"MichelleLiang0116"},"content":"     * Prints the list of deadlines in x days in the future","lastModifiedDate":"2023-04-03"},{"lineNumber":453,"author":{"gitId":"MichelleLiang0116"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":454,"author":{"gitId":"MichelleLiang0116"},"content":"     * @param tasks the array list of all the tasks","lastModifiedDate":"2023-04-03"},{"lineNumber":455,"author":{"gitId":"MichelleLiang0116"},"content":"     * @param days  the required the number of days x from now onwards","lastModifiedDate":"2023-04-03"},{"lineNumber":456,"author":{"gitId":"MichelleLiang0116"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":457,"author":{"gitId":"MichelleLiang0116"},"content":"    static void printUpcomingDeadline(ArrayList\u003cTask\u003e tasks, String days) {","lastModifiedDate":"2023-04-03"},{"lineNumber":458,"author":{"gitId":"MichelleLiang0116"},"content":"        borderLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":459,"author":{"gitId":"MichelleLiang0116"},"content":"        System.out.println(\"\\t Here are your deadlines in \" + days + \" days:\");","lastModifiedDate":"2023-04-03"},{"lineNumber":460,"author":{"gitId":"MichelleLiang0116"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-04-03"},{"lineNumber":461,"author":{"gitId":"MichelleLiang0116"},"content":"        Date d;","lastModifiedDate":"2023-04-03"},{"lineNumber":462,"author":{"gitId":"MichelleLiang0116"},"content":"        Date n \u003d new Date();","lastModifiedDate":"2023-04-03"},{"lineNumber":463,"author":{"gitId":"MichelleLiang0116"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-04-03"},{"lineNumber":464,"author":{"gitId":"MichelleLiang0116"},"content":"        boolean noDeadline \u003d true;","lastModifiedDate":"2023-04-03"},{"lineNumber":465,"author":{"gitId":"MichelleLiang0116"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-04-03"},{"lineNumber":466,"author":{"gitId":"MichelleLiang0116"},"content":"            String timeUntilTask;","lastModifiedDate":"2023-04-03"},{"lineNumber":467,"author":{"gitId":"MichelleLiang0116"},"content":"            if (t instanceof Deadline \u0026\u0026 !(t instanceof RecurringDeadline)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":468,"author":{"gitId":"MichelleLiang0116"},"content":"                noDeadline \u003d false;","lastModifiedDate":"2023-04-03"},{"lineNumber":469,"author":{"gitId":"MichelleLiang0116"},"content":"                timeUntilTask \u003d ((Deadline) t).getDeadline();","lastModifiedDate":"2023-04-03"},{"lineNumber":470,"author":{"gitId":"MichelleLiang0116"},"content":"                try {","lastModifiedDate":"2023-04-03"},{"lineNumber":471,"author":{"gitId":"MichelleLiang0116"},"content":"                    d \u003d format.parse(timeUntilTask);","lastModifiedDate":"2023-04-03"},{"lineNumber":472,"author":{"gitId":"MichelleLiang0116"},"content":"                    long diff \u003d d.getTime() - n.getTime();","lastModifiedDate":"2023-04-03"},{"lineNumber":473,"author":{"gitId":"MichelleLiang0116"},"content":"                    String di \u003d getTimeDiff(diff);","lastModifiedDate":"2023-04-03"},{"lineNumber":474,"author":{"gitId":"MichelleLiang0116"},"content":"                    String[] diffSplit \u003d di.split(\" \");","lastModifiedDate":"2023-04-03"},{"lineNumber":475,"author":{"gitId":"MichelleLiang0116"},"content":"                    if (diffSplit.length \u003e\u003d 2 \u0026\u0026 ((diffSplit[1].contains(\"day\") \u0026\u0026 Integer.parseInt(diffSplit[0])","lastModifiedDate":"2023-04-03"},{"lineNumber":476,"author":{"gitId":"MichelleLiang0116"},"content":"                            \u003c\u003d Integer.parseInt(days)) || diffSplit[1].contains(\"hour\")","lastModifiedDate":"2023-04-03"},{"lineNumber":477,"author":{"gitId":"MichelleLiang0116"},"content":"                            || diffSplit[1].contains(\"minute\"))) {","lastModifiedDate":"2023-04-03"},{"lineNumber":478,"author":{"gitId":"MichelleLiang0116"},"content":"                        count++;","lastModifiedDate":"2023-04-03"},{"lineNumber":479,"author":{"gitId":"MichelleLiang0116"},"content":"                        System.out.println(\"\\t \" + count + \".\" + t);","lastModifiedDate":"2023-04-03"},{"lineNumber":480,"author":{"gitId":"MichelleLiang0116"},"content":"                    }","lastModifiedDate":"2023-04-03"},{"lineNumber":481,"author":{"gitId":"MichelleLiang0116"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":482,"author":{"gitId":"MichelleLiang0116"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-04-03"},{"lineNumber":483,"author":{"gitId":"MichelleLiang0116"},"content":"                }","lastModifiedDate":"2023-04-03"},{"lineNumber":484,"author":{"gitId":"MichelleLiang0116"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":485,"author":{"gitId":"MichelleLiang0116"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":486,"author":{"gitId":"MichelleLiang0116"},"content":"        if (noDeadline) {","lastModifiedDate":"2023-04-03"},{"lineNumber":487,"author":{"gitId":"MichelleLiang0116"},"content":"            System.out.println(\"\\t No Upcoming Deadline!\");","lastModifiedDate":"2023-04-03"},{"lineNumber":488,"author":{"gitId":"MichelleLiang0116"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":489,"author":{"gitId":"MichelleLiang0116"},"content":"        borderLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":490,"author":{"gitId":"MichelleLiang0116"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":491,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":492,"author":{"gitId":"MichelleLiang0116"},"content":"    static final int secondsPerMinute \u003d 60;","lastModifiedDate":"2023-04-05"},{"lineNumber":493,"author":{"gitId":"MichelleLiang0116"},"content":"    static final int minutesPerHour \u003d 60;","lastModifiedDate":"2023-04-05"},{"lineNumber":494,"author":{"gitId":"MichelleLiang0116"},"content":"    static final int hoursPerDay \u003d 24;","lastModifiedDate":"2023-04-05"},{"lineNumber":495,"author":{"gitId":"MichelleLiang0116"},"content":"    static final double daysPerMonth \u003d 30.41666666;","lastModifiedDate":"2023-04-05"},{"lineNumber":496,"author":{"gitId":"MichelleLiang0116"},"content":"    static final int monthsPerYear \u003d 12;","lastModifiedDate":"2023-04-05"},{"lineNumber":497,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":498,"author":{"gitId":"MichelleLiang0116"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":499,"author":{"gitId":"MichelleLiang0116"},"content":"     * Function help for calculating time difference","lastModifiedDate":"2023-03-21"},{"lineNumber":500,"author":{"gitId":"MichelleLiang0116"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":501,"author":{"gitId":"MichelleLiang0116"},"content":"     * @param timeDifferenceMilliseconds time difference between now and deadline","lastModifiedDate":"2023-03-21"},{"lineNumber":502,"author":{"gitId":"MichelleLiang0116"},"content":"     * @return time difference in structured format","lastModifiedDate":"2023-03-21"},{"lineNumber":503,"author":{"gitId":"MichelleLiang0116"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":504,"author":{"gitId":"skyanzy"},"content":"    static String getTimeDiff(long timeDifferenceMilliseconds) {","lastModifiedDate":"2023-03-23"},{"lineNumber":505,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":506,"author":{"gitId":"MichelleLiang0116"},"content":"        long diffMinutes \u003d timeDifferenceMilliseconds / (secondsPerMinute * 1000) % secondsPerMinute;","lastModifiedDate":"2023-04-05"},{"lineNumber":507,"author":{"gitId":"MichelleLiang0116"},"content":"        long diffHours \u003d timeDifferenceMilliseconds / (secondsPerMinute * minutesPerHour * 1000) % minutesPerHour;","lastModifiedDate":"2023-04-05"},{"lineNumber":508,"author":{"gitId":"MichelleLiang0116"},"content":"        long diffDays \u003d timeDifferenceMilliseconds / (secondsPerMinute * minutesPerHour * 1000 * hoursPerDay) % hoursPerDay;","lastModifiedDate":"2023-04-05"},{"lineNumber":509,"author":{"gitId":"MichelleLiang0116"},"content":"        long diffMonths \u003d (long) ((timeDifferenceMilliseconds / (secondsPerMinute * minutesPerHour * 1000 * hoursPerDay * daysPerMonth)) % daysPerMonth);","lastModifiedDate":"2023-04-05"},{"lineNumber":510,"author":{"gitId":"MichelleLiang0116"},"content":"        long diffYears \u003d (long) ((timeDifferenceMilliseconds / ( secondsPerMinute * minutesPerHour * 1000 * hoursPerDay * daysPerMonth * monthsPerYear)) % monthsPerYear);","lastModifiedDate":"2023-04-05"},{"lineNumber":511,"author":{"gitId":"MichelleLiang0116"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-03-21"},{"lineNumber":512,"author":{"gitId":"MichelleLiang0116"},"content":"        if (diffYears !\u003d 0) {","lastModifiedDate":"2023-03-21"},{"lineNumber":513,"author":{"gitId":"MichelleLiang0116"},"content":"            result +\u003d diffYears;","lastModifiedDate":"2023-03-21"},{"lineNumber":514,"author":{"gitId":"MichelleLiang0116"},"content":"            result +\u003d \" year\";","lastModifiedDate":"2023-03-21"},{"lineNumber":515,"author":{"gitId":"MichelleLiang0116"},"content":"            if (diffYears !\u003d 1) {","lastModifiedDate":"2023-03-21"},{"lineNumber":516,"author":{"gitId":"MichelleLiang0116"},"content":"                result +\u003d \"s\";","lastModifiedDate":"2023-03-21"},{"lineNumber":517,"author":{"gitId":"MichelleLiang0116"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":518,"author":{"gitId":"MichelleLiang0116"},"content":"            result +\u003d \" \";","lastModifiedDate":"2023-03-21"},{"lineNumber":519,"author":{"gitId":"MichelleLiang0116"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":520,"author":{"gitId":"MichelleLiang0116"},"content":"        if (diffMonths !\u003d 0) {","lastModifiedDate":"2023-03-21"},{"lineNumber":521,"author":{"gitId":"MichelleLiang0116"},"content":"            result +\u003d diffMonths;","lastModifiedDate":"2023-03-21"},{"lineNumber":522,"author":{"gitId":"MichelleLiang0116"},"content":"            result +\u003d \" month\";","lastModifiedDate":"2023-03-21"},{"lineNumber":523,"author":{"gitId":"MichelleLiang0116"},"content":"            if (diffMonths !\u003d 1) {","lastModifiedDate":"2023-03-21"},{"lineNumber":524,"author":{"gitId":"MichelleLiang0116"},"content":"                result +\u003d \"s\";","lastModifiedDate":"2023-03-21"},{"lineNumber":525,"author":{"gitId":"MichelleLiang0116"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":526,"author":{"gitId":"MichelleLiang0116"},"content":"            result +\u003d \" \";","lastModifiedDate":"2023-03-21"},{"lineNumber":527,"author":{"gitId":"MichelleLiang0116"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":528,"author":{"gitId":"MichelleLiang0116"},"content":"        if (diffDays !\u003d 0) {","lastModifiedDate":"2023-03-21"},{"lineNumber":529,"author":{"gitId":"MichelleLiang0116"},"content":"            result +\u003d diffDays;","lastModifiedDate":"2023-03-21"},{"lineNumber":530,"author":{"gitId":"MichelleLiang0116"},"content":"            result +\u003d \" day\";","lastModifiedDate":"2023-03-21"},{"lineNumber":531,"author":{"gitId":"MichelleLiang0116"},"content":"            if (diffDays !\u003d 1) {","lastModifiedDate":"2023-03-21"},{"lineNumber":532,"author":{"gitId":"MichelleLiang0116"},"content":"                result +\u003d \"s\";","lastModifiedDate":"2023-03-21"},{"lineNumber":533,"author":{"gitId":"MichelleLiang0116"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":534,"author":{"gitId":"MichelleLiang0116"},"content":"            result +\u003d \" \";","lastModifiedDate":"2023-03-21"},{"lineNumber":535,"author":{"gitId":"MichelleLiang0116"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":536,"author":{"gitId":"MichelleLiang0116"},"content":"        if (diffHours !\u003d 0) {","lastModifiedDate":"2023-03-21"},{"lineNumber":537,"author":{"gitId":"MichelleLiang0116"},"content":"            result +\u003d diffHours;","lastModifiedDate":"2023-03-21"},{"lineNumber":538,"author":{"gitId":"MichelleLiang0116"},"content":"            result +\u003d \" hour\";","lastModifiedDate":"2023-03-21"},{"lineNumber":539,"author":{"gitId":"MichelleLiang0116"},"content":"            if (diffHours !\u003d 1) {","lastModifiedDate":"2023-03-21"},{"lineNumber":540,"author":{"gitId":"MichelleLiang0116"},"content":"                result +\u003d \"s\";","lastModifiedDate":"2023-03-21"},{"lineNumber":541,"author":{"gitId":"MichelleLiang0116"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":542,"author":{"gitId":"MichelleLiang0116"},"content":"            result +\u003d \" \";","lastModifiedDate":"2023-03-21"},{"lineNumber":543,"author":{"gitId":"MichelleLiang0116"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":544,"author":{"gitId":"MichelleLiang0116"},"content":"        if (diffMinutes !\u003d 0) {","lastModifiedDate":"2023-03-21"},{"lineNumber":545,"author":{"gitId":"MichelleLiang0116"},"content":"            result +\u003d diffMinutes;","lastModifiedDate":"2023-03-21"},{"lineNumber":546,"author":{"gitId":"MichelleLiang0116"},"content":"            result +\u003d \" minute\";","lastModifiedDate":"2023-03-21"},{"lineNumber":547,"author":{"gitId":"MichelleLiang0116"},"content":"            if (diffMinutes !\u003d 1) {","lastModifiedDate":"2023-03-21"},{"lineNumber":548,"author":{"gitId":"MichelleLiang0116"},"content":"                result +\u003d \"s\";","lastModifiedDate":"2023-03-21"},{"lineNumber":549,"author":{"gitId":"MichelleLiang0116"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":550,"author":{"gitId":"MichelleLiang0116"},"content":"            result +\u003d \" \";","lastModifiedDate":"2023-03-21"},{"lineNumber":551,"author":{"gitId":"MichelleLiang0116"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":552,"author":{"gitId":"MichelleLiang0116"},"content":"        return result;","lastModifiedDate":"2023-03-21"},{"lineNumber":553,"author":{"gitId":"MichelleLiang0116"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":554,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":555,"author":{"gitId":"MichelleLiang0116"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":556,"author":{"gitId":"MichelleLiang0116"},"content":"     * Display Next Upcoming Class","lastModifiedDate":"2023-03-23"},{"lineNumber":557,"author":{"gitId":"MichelleLiang0116"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":558,"author":{"gitId":"MichelleLiang0116"},"content":"     * @param classes the priority queue of all the classes","lastModifiedDate":"2023-04-03"},{"lineNumber":559,"author":{"gitId":"MichelleLiang0116"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":560,"author":{"gitId":"MichelleLiang0116"},"content":"    static void displayNextUpcomingClass(PriorityQueue\u003cSchoolClass\u003e classes) {","lastModifiedDate":"2023-03-29"},{"lineNumber":561,"author":{"gitId":"MichelleLiang0116"},"content":"        borderLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":562,"author":{"gitId":"MichelleLiang0116"},"content":"        ArrayList\u003cSchoolClass\u003e result \u003d new ArrayList\u003c\u003e(classes);","lastModifiedDate":"2023-03-31"},{"lineNumber":563,"author":{"gitId":"MichelleLiang0116"},"content":"        System.out.println(\"\\t Here are your next upcoming class: \");","lastModifiedDate":"2023-03-23"},{"lineNumber":564,"author":{"gitId":"MichelleLiang0116"},"content":"        if (result.isEmpty()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":565,"author":{"gitId":"MichelleLiang0116"},"content":"            System.out.println(\"\\t No upcoming class!\");","lastModifiedDate":"2023-04-03"},{"lineNumber":566,"author":{"gitId":"MichelleLiang0116"},"content":"        } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":567,"author":{"gitId":"MichelleLiang0116"},"content":"            for (SchoolClass c : result) {","lastModifiedDate":"2023-03-31"},{"lineNumber":568,"author":{"gitId":"MichelleLiang0116"},"content":"                if (c.getStatusIcon() !\u003d \"X\") {","lastModifiedDate":"2023-03-31"},{"lineNumber":569,"author":{"gitId":"MichelleLiang0116"},"content":"                    System.out.println(\"\\t\" + c);","lastModifiedDate":"2023-03-31"},{"lineNumber":570,"author":{"gitId":"MichelleLiang0116"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":571,"author":{"gitId":"MichelleLiang0116"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":572,"author":{"gitId":"MichelleLiang0116"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":573,"author":{"gitId":"MichelleLiang0116"},"content":"        borderLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":574,"author":{"gitId":"MichelleLiang0116"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":575,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":576,"author":{"gitId":"MichelleLiang0116"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":577,"author":{"gitId":"MichelleLiang0116"},"content":"     * Display Next Upcoming Event","lastModifiedDate":"2023-04-03"},{"lineNumber":578,"author":{"gitId":"MichelleLiang0116"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":579,"author":{"gitId":"MichelleLiang0116"},"content":"     * @param tasks the array list of all the tasks","lastModifiedDate":"2023-04-03"},{"lineNumber":580,"author":{"gitId":"MichelleLiang0116"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":581,"author":{"gitId":"MichelleLiang0116"},"content":"    static void displayNextUpcomingEvent(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-04-03"},{"lineNumber":582,"author":{"gitId":"MichelleLiang0116"},"content":"        borderLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":583,"author":{"gitId":"MichelleLiang0116"},"content":"        System.out.println(\"\\t Here are your next upcoming event: \");","lastModifiedDate":"2023-04-03"},{"lineNumber":584,"author":{"gitId":"MichelleLiang0116"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-04-03"},{"lineNumber":585,"author":{"gitId":"MichelleLiang0116"},"content":"            if (tasks.get(i) instanceof Event \u0026\u0026 tasks.get(i).getStatusIcon() !\u003d \"X\") {","lastModifiedDate":"2023-04-03"},{"lineNumber":586,"author":{"gitId":"MichelleLiang0116"},"content":"                System.out.println(\"\\t \" + tasks.get(i));","lastModifiedDate":"2023-04-03"},{"lineNumber":587,"author":{"gitId":"MichelleLiang0116"},"content":"                break;","lastModifiedDate":"2023-04-03"},{"lineNumber":588,"author":{"gitId":"MichelleLiang0116"},"content":"            } else if (i \u003d\u003d tasks.size() - 1) {","lastModifiedDate":"2023-04-03"},{"lineNumber":589,"author":{"gitId":"MichelleLiang0116"},"content":"                System.out.println(\"\\t No upcoming event!\");","lastModifiedDate":"2023-04-03"},{"lineNumber":590,"author":{"gitId":"MichelleLiang0116"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":591,"author":{"gitId":"MichelleLiang0116"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":592,"author":{"gitId":"MichelleLiang0116"},"content":"        borderLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":593,"author":{"gitId":"MichelleLiang0116"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":594,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":595,"author":{"gitId":"MichelleLiang0116"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":596,"author":{"gitId":"MichelleLiang0116"},"content":"     * Display Next Upcoming Deadline","lastModifiedDate":"2023-04-03"},{"lineNumber":597,"author":{"gitId":"MichelleLiang0116"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":598,"author":{"gitId":"MichelleLiang0116"},"content":"     * @param tasks the array list of all the tasks","lastModifiedDate":"2023-04-03"},{"lineNumber":599,"author":{"gitId":"MichelleLiang0116"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":600,"author":{"gitId":"MichelleLiang0116"},"content":"    static void displayNextUpcomingDeadline(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-04-03"},{"lineNumber":601,"author":{"gitId":"MichelleLiang0116"},"content":"        borderLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":602,"author":{"gitId":"MichelleLiang0116"},"content":"        System.out.println(\"\\t Here are your next upcoming event: \");","lastModifiedDate":"2023-04-03"},{"lineNumber":603,"author":{"gitId":"MichelleLiang0116"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-04-03"},{"lineNumber":604,"author":{"gitId":"MichelleLiang0116"},"content":"            if (tasks.get(i) instanceof Deadline \u0026\u0026 tasks.get(i).getStatusIcon() !\u003d \"X\") {","lastModifiedDate":"2023-04-03"},{"lineNumber":605,"author":{"gitId":"MichelleLiang0116"},"content":"                System.out.println(\"\\t\" + tasks.get(i));","lastModifiedDate":"2023-04-03"},{"lineNumber":606,"author":{"gitId":"MichelleLiang0116"},"content":"                break;","lastModifiedDate":"2023-04-03"},{"lineNumber":607,"author":{"gitId":"MichelleLiang0116"},"content":"            } else if (i \u003d\u003d tasks.size() - 1) {","lastModifiedDate":"2023-04-03"},{"lineNumber":608,"author":{"gitId":"MichelleLiang0116"},"content":"                System.out.println(\"\\t No upcoming deadline!\");","lastModifiedDate":"2023-04-03"},{"lineNumber":609,"author":{"gitId":"MichelleLiang0116"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":610,"author":{"gitId":"MichelleLiang0116"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":611,"author":{"gitId":"MichelleLiang0116"},"content":"        borderLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":612,"author":{"gitId":"MichelleLiang0116"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":613,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":614,"author":{"gitId":"MichelleLiang0116"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":615,"author":{"gitId":"MichelleLiang0116"},"content":"     * Display Next Upcoming Task","lastModifiedDate":"2023-04-03"},{"lineNumber":616,"author":{"gitId":"MichelleLiang0116"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":617,"author":{"gitId":"MichelleLiang0116"},"content":"     * @param tasks the array list of all the tasks","lastModifiedDate":"2023-04-03"},{"lineNumber":618,"author":{"gitId":"MichelleLiang0116"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":619,"author":{"gitId":"MichelleLiang0116"},"content":"    static void displayNextUpcomingTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-04-03"},{"lineNumber":620,"author":{"gitId":"MichelleLiang0116"},"content":"        borderLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":621,"author":{"gitId":"MichelleLiang0116"},"content":"        System.out.println(\"\\t Here are your next upcoming event: \");","lastModifiedDate":"2023-04-03"},{"lineNumber":622,"author":{"gitId":"MichelleLiang0116"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-04-03"},{"lineNumber":623,"author":{"gitId":"MichelleLiang0116"},"content":"            System.out.println(\"\\t no upcoming task\");","lastModifiedDate":"2023-04-03"},{"lineNumber":624,"author":{"gitId":"MichelleLiang0116"},"content":"        } else {","lastModifiedDate":"2023-04-03"},{"lineNumber":625,"author":{"gitId":"MichelleLiang0116"},"content":"            System.out.println(\"\\t\" + tasks.get(0));","lastModifiedDate":"2023-04-03"},{"lineNumber":626,"author":{"gitId":"MichelleLiang0116"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":627,"author":{"gitId":"MichelleLiang0116"},"content":"        borderLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":628,"author":{"gitId":"MichelleLiang0116"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":629,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":630,"author":{"gitId":"MichelleLiang0116"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":631,"author":{"gitId":"MichelleLiang0116"},"content":"     * Prints the border for opening or closing messages","lastModifiedDate":"2023-03-21"},{"lineNumber":632,"author":{"gitId":"MichelleLiang0116"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":633,"author":{"gitId":"jeraldgau"},"content":"    static void borderLine() {","lastModifiedDate":"2023-03-09"},{"lineNumber":634,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-03-09"},{"lineNumber":635,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":636,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":637,"author":{"gitId":"jeraldgau"},"content":"    private static void noMatchMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":638,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":639,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t There are no matching tasks in your list.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":640,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":641,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":642,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":643,"author":{"gitId":"jeraldgau"},"content":"    static void emptyCommandMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":644,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":645,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Please enter a non-empty command.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":646,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":647,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":648,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":649,"author":{"gitId":"thant"},"content":"    static boolean doubleCheck() {","lastModifiedDate":"2023-03-15"},{"lineNumber":650,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t THIS IS AN IRREVERSIBLE PROCESS. ARE YOU SURE? Y/N\");","lastModifiedDate":"2023-03-23"},{"lineNumber":651,"author":{"gitId":"thant"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-15"},{"lineNumber":652,"author":{"gitId":"thant"},"content":"        String line;","lastModifiedDate":"2023-03-15"},{"lineNumber":653,"author":{"gitId":"thant"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":654,"author":{"gitId":"miahjerry"},"content":"        line \u003d line.toUpperCase();","lastModifiedDate":"2023-04-03"},{"lineNumber":655,"author":{"gitId":"thant"},"content":"        return Objects.equals(line, \"Y\");","lastModifiedDate":"2023-03-15"},{"lineNumber":656,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":657,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":658,"author":{"gitId":"skyanzy"},"content":"    static void editTodoMessage() {","lastModifiedDate":"2023-03-30"},{"lineNumber":659,"author":{"gitId":"skyanzy"},"content":"        borderLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":660,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t Please enter a new Todo description:\");","lastModifiedDate":"2023-03-30"},{"lineNumber":661,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":662,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":663,"author":{"gitId":"skyanzy"},"content":"    static void editDeadlineMessage() {","lastModifiedDate":"2023-03-30"},{"lineNumber":664,"author":{"gitId":"skyanzy"},"content":"        borderLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":665,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t Please edit one of the following:\");","lastModifiedDate":"2023-03-30"},{"lineNumber":666,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t For non-recurring deadlines: /description or /deadline\");","lastModifiedDate":"2023-03-30"},{"lineNumber":667,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t For recurring deadlines: /description or /deadline or /day\");","lastModifiedDate":"2023-03-30"},{"lineNumber":668,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t Please follow the format: \");","lastModifiedDate":"2023-03-30"},{"lineNumber":669,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t /description \u003cnew_description\u003e or /deadline \u003cnew_deadline\u003e or /day \u003cNEW_DAY_OF_WEEK\u003e\");","lastModifiedDate":"2023-03-30"},{"lineNumber":670,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t e.g. /deadline 2023-06-30 1200 or /deadline 1200 (for recurring deadlines)\");","lastModifiedDate":"2023-03-30"},{"lineNumber":671,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":672,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":673,"author":{"gitId":"skyanzy"},"content":"    static void editEventMessage() {","lastModifiedDate":"2023-03-30"},{"lineNumber":674,"author":{"gitId":"skyanzy"},"content":"        borderLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":675,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t Please edit one of the following:\");","lastModifiedDate":"2023-03-30"},{"lineNumber":676,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t For non-recurring events: /description or /from or /to\");","lastModifiedDate":"2023-03-30"},{"lineNumber":677,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t For recurring deadlines: /description or /from or /to or /day\");","lastModifiedDate":"2023-03-30"},{"lineNumber":678,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t Please follow the format: \");","lastModifiedDate":"2023-03-30"},{"lineNumber":679,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t /description \u003cnew_description\u003e or /from \u003cnew_start_time\u003e or /day \u003cNEW_DAY_OF_WEEK\u003e\");","lastModifiedDate":"2023-03-30"},{"lineNumber":680,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t e.g. /from 2023-06-30 1200 or /from 1200 (for recurring events)\");","lastModifiedDate":"2023-03-30"},{"lineNumber":681,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":682,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":683,"author":{"gitId":"skyanzy"},"content":"    static void printEditedTask(Task task) {","lastModifiedDate":"2023-03-30"},{"lineNumber":684,"author":{"gitId":"skyanzy"},"content":"        borderLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":685,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t Quack!\");","lastModifiedDate":"2023-03-30"},{"lineNumber":686,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t I have changed your task to:\");","lastModifiedDate":"2023-03-30"},{"lineNumber":687,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t \" + task);","lastModifiedDate":"2023-03-30"},{"lineNumber":688,"author":{"gitId":"skyanzy"},"content":"        borderLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":689,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":690,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":691,"author":{"gitId":"skyanzy"},"content":"    static String askForEditMessage() {","lastModifiedDate":"2023-03-30"},{"lineNumber":692,"author":{"gitId":"skyanzy"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-30"},{"lineNumber":693,"author":{"gitId":"skyanzy"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":694,"author":{"gitId":"skyanzy"},"content":"        return line;","lastModifiedDate":"2023-03-30"},{"lineNumber":695,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":696,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":697,"author":{"gitId":"thant"},"content":"    static void help() {","lastModifiedDate":"2023-03-11"},{"lineNumber":698,"author":{"gitId":"thant"},"content":"        borderLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":699,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t   Quack! Here are the commands you can give me:\");","lastModifiedDate":"2023-03-30"},{"lineNumber":700,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t - list: I\u0027ll list out all the tasks you have recorded.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":701,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t - list \u003cnumber_of_days\u003e: I\u0027ll list out all the tasks in that number of days.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":702,"author":{"gitId":"MichelleLiang0116"},"content":"        System.out.println(\"\\t - list_classes: I\u0027ll list out the classes you have on your schedule.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":703,"author":{"gitId":"MichelleLiang0116"},"content":"        System.out.println(\"\\t - list_today: I\u0027ll list out all the classes, deadlines and events you have today.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":704,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t - priority_list: \" +","lastModifiedDate":"2023-03-28"},{"lineNumber":705,"author":{"gitId":"jeraldgau"},"content":"                \"I\u0027ll list out all the tasks you have recorded arranged by their priority.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":706,"author":{"gitId":"MichelleLiang0116"},"content":"        System.out.println(\"\\t - upcoming_class: I\u0027ll list out the next upcoming class.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":707,"author":{"gitId":"miahjerry"},"content":"        System.out.println(\"\\t - low_priority: I\u0027ll list out all the tasks you have that are low in priority.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":708,"author":{"gitId":"miahjerry"},"content":"        System.out.println(\"\\t - medium_priority: I\u0027ll list out all the tasks you have that are medium in priority.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":709,"author":{"gitId":"miahjerry"},"content":"        System.out.println(\"\\t - high_priority: I\u0027ll list out all the tasks you have that are high in priority.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":710,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t - clear: The list will be cleared. This is an IRREVERSIBLE process.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":711,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t - mark \u003ctask_number\u003e: I\u0027ll mark that task as done.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":712,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t - unmark \u003ctask_number\u003e: I\u0027ll mark that task as undone.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":713,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t - delete \u003ctask_number\u003e: I\u0027ll delete that task from your list.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":714,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t - remove /class \u003cclass_name\u003e /description \u003cdescription\u003e \" +","lastModifiedDate":"2023-03-30"},{"lineNumber":715,"author":{"gitId":"jeraldgau"},"content":"                \"/day \u003cDAY_OF_WEEK\u003e /from \u003cHHmm\u003e /to \u003cHHmm\u003e\");","lastModifiedDate":"2023-03-28"},{"lineNumber":716,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t   (/description can be followed by whitespace if the class has no description.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":717,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t   : I\u0027ll remove this class from your class schedule.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":718,"author":{"gitId":"miahjerry"},"content":"        System.out.println(\"\\t - add_notes \u003ctask_number\u003e: I\u0027ll add an additional note to that task!\");","lastModifiedDate":"2023-04-03"},{"lineNumber":719,"author":{"gitId":"miahjerry"},"content":"        System.out.println(\"\\t - delete_notes \u003ctask_number\u003e \u003cnote_number\u003e: I\u0027ll delete the note to that task!\");","lastModifiedDate":"2023-04-03"},{"lineNumber":720,"author":{"gitId":"miahjerry"},"content":"        System.out.println(\"\\t - edit_notes \u003ctask_number\u003e \u003cnote_number\u003e: I\u0027ll edit the note for that task!\");","lastModifiedDate":"2023-04-03"},{"lineNumber":721,"author":{"gitId":"miahjerry"},"content":"        System.out.println(\"\\t - view_notes \u003ctask_number\u003e: I\u0027ll print the additional notes for that task!\");","lastModifiedDate":"2023-03-31"},{"lineNumber":722,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t - purge: I\u0027ll delete all expired tasks from your list after a confirmation.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":723,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t - find \u003ckeyword\u003e: I\u0027ll find the tasks in your list that contain the keyword.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":724,"author":{"gitId":"miahjerry"},"content":"        System.out.println(\"\\t - The index of the item will also be displayed.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":725,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t - priority \u003ctask_number\u003e \u003c1/2/3\u003e: I\u0027ll set the priority of a given task as\");","lastModifiedDate":"2023-03-15"},{"lineNumber":726,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t                                   1:Low, 2:Medium and 3:High.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":727,"author":{"gitId":"miahjerry"},"content":"        System.out.println(\"\\t                                   Default: Low priority.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":728,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t - bye: I will shut down my program.\\n\");","lastModifiedDate":"2023-03-15"},{"lineNumber":729,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Here are the following ways to input tasks/classes:\");","lastModifiedDate":"2023-03-26"},{"lineNumber":730,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t Deadlines: \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2023-03-11"},{"lineNumber":731,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t            (eg. Eat bread /by 2023-03-15 2015)\");","lastModifiedDate":"2023-03-11"},{"lineNumber":732,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t Recurring deadlines: /re \u003cdescription\u003e /by \u003cHHmm\u003e /day \u003cDAY_OF_WEEK\u003e\");","lastModifiedDate":"2023-03-29"},{"lineNumber":733,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t            (eg. /re Eat bread /by 2015 /day MONDAY)\");","lastModifiedDate":"2023-03-29"},{"lineNumber":734,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t Events   : \u003cdescription\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2023-03-11"},{"lineNumber":735,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t            (eg. Meeting /from 2023-03-15 2015 /to 2023-03-15 2215)\");","lastModifiedDate":"2023-03-11"},{"lineNumber":736,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t Recurring events: /re \u003cdescription\u003e /from \u003cHHmm\u003e /to \u003cHHmm\u003e /day \u003cDAY_OF_WEEK\u003e\");","lastModifiedDate":"2023-03-29"},{"lineNumber":737,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t            (eg. /re Meeting /from 2015 /to 2215 /day MONDAY)\");","lastModifiedDate":"2023-03-29"},{"lineNumber":738,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t Todo     : /todo \u003cdescription\u003e\");","lastModifiedDate":"2023-04-06"},{"lineNumber":739,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t            (eg. /todo Water the plants)\");","lastModifiedDate":"2023-04-06"},{"lineNumber":740,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Classes  : \u003cdescription\u003e /class \u003cclass_name\u003e /day \u003cDAY_OF_WEEK\u003e \" +","lastModifiedDate":"2023-03-26"},{"lineNumber":741,"author":{"gitId":"jeraldgau"},"content":"                \"/from \u003cHHmm\u003e /to \u003cHHmm\u003e\");","lastModifiedDate":"2023-03-30"},{"lineNumber":742,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t            (eg. Bring laptop /class CS2113 /day TUESDAY /from 1100 /to 1200) \\n\");","lastModifiedDate":"2023-03-30"},{"lineNumber":743,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t How else may I assist you today, human?\");","lastModifiedDate":"2023-03-30"},{"lineNumber":744,"author":{"gitId":"thant"},"content":"        borderLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":745,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":746,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":747,"author":{"gitId":"jeraldgau"},"content":"    static void addedTaskMessage(Task currentTask) {","lastModifiedDate":"2023-03-09"},{"lineNumber":748,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":749,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Alright, I have added this task: \\n\\t\" + currentTask);","lastModifiedDate":"2023-03-28"},{"lineNumber":750,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t You now have \" + (Task.getTaskCount() + 1) + \" tasks in your list.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":751,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":752,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":753,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":754,"author":{"gitId":"jeraldgau"},"content":"    static void addedSchoolClassMessage(SchoolClass currentClass, PriorityQueue\u003cSchoolClass\u003e classes) {","lastModifiedDate":"2023-03-26"},{"lineNumber":755,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-26"},{"lineNumber":756,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Alright, I have added this class: \\n\\t\" + currentClass);","lastModifiedDate":"2023-03-28"},{"lineNumber":757,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t You now have \" + (classes.size()) + \" classes in your schedule.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":758,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-26"},{"lineNumber":759,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":760,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":761,"author":{"gitId":"jeraldgau"},"content":"    static void deleteTaskMessage(Task taskToDelete) {","lastModifiedDate":"2023-03-09"},{"lineNumber":762,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":763,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Understood. I have removed this task:\");","lastModifiedDate":"2023-03-09"},{"lineNumber":764,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t\" + taskToDelete);","lastModifiedDate":"2023-03-28"},{"lineNumber":765,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t You now have \" + Task.getTaskCount() + \" tasks in your list.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":766,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":767,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":768,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":769,"author":{"gitId":"jeraldgau"},"content":"    static void deleteClassMessage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":770,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-28"},{"lineNumber":771,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Class has been deleted successfully.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":772,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-28"},{"lineNumber":773,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":774,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":775,"author":{"gitId":"jeraldgau"},"content":"    static void unsuccessfulDeleteClassMessage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":776,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-28"},{"lineNumber":777,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Unsuccessful. No class has been deleted.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":778,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-28"},{"lineNumber":779,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":780,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":781,"author":{"gitId":"jeraldgau"},"content":"    static void refreshedMessage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":782,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-28"},{"lineNumber":783,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Your task list and class schedule have been refreshed!\");","lastModifiedDate":"2023-03-28"},{"lineNumber":784,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-28"},{"lineNumber":785,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":786,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":787,"author":{"gitId":"jeraldgau"},"content":"    static void exceedTaskNumberMessage(int taskNumber) {","lastModifiedDate":"2023-03-09"},{"lineNumber":788,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":789,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Task \" + taskNumber + \" does not exist.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":790,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":791,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":792,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":793,"author":{"gitId":"miahjerry"},"content":"    static void exceedNoteNumberMessage(int noteNumber) {","lastModifiedDate":"2023-03-30"},{"lineNumber":794,"author":{"gitId":"miahjerry"},"content":"        borderLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":795,"author":{"gitId":"miahjerry"},"content":"        System.out.println(\"\\t Note \" + noteNumber + \" does not exist for this task\");","lastModifiedDate":"2023-03-30"},{"lineNumber":796,"author":{"gitId":"miahjerry"},"content":"        borderLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":797,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":798,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":799,"author":{"gitId":"jeraldgau"},"content":"    static void todoErrorMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":800,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":801,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Error. Please enter a valid description.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":802,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":803,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":804,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":805,"author":{"gitId":"thant"},"content":"    static void unknownCommandMessage() {","lastModifiedDate":"2023-03-30"},{"lineNumber":806,"author":{"gitId":"thant"},"content":"        borderLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":807,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t Error. Please check that the command has been entered correctly.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":808,"author":{"gitId":"thant"},"content":"        borderLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":809,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":810,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":811,"author":{"gitId":"thant"},"content":"    static void expiredErrorMessage() {","lastModifiedDate":"2023-03-11"},{"lineNumber":812,"author":{"gitId":"thant"},"content":"        borderLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":813,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t Quack! I know humans wish to undo their past mistakes, \" +","lastModifiedDate":"2023-03-11"},{"lineNumber":814,"author":{"gitId":"thant"},"content":"                \"but the start date has already passed!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":815,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t Please try again!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":816,"author":{"gitId":"thant"},"content":"        borderLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":817,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":818,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":819,"author":{"gitId":"MichelleLiang0116"},"content":"    static void emptyDescriptionErrorMessage() {","lastModifiedDate":"2023-03-31"},{"lineNumber":820,"author":{"gitId":"skyanzy"},"content":"        borderLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":821,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t Error. Description cannot be empty\");","lastModifiedDate":"2023-03-30"},{"lineNumber":822,"author":{"gitId":"skyanzy"},"content":"        borderLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":823,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":824,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":825,"author":{"gitId":"thant"},"content":"    static void startAfterEndErrorMessage() {","lastModifiedDate":"2023-03-11"},{"lineNumber":826,"author":{"gitId":"thant"},"content":"        borderLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":827,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t Quack! Somehow this human has time travelled, \" +","lastModifiedDate":"2023-03-11"},{"lineNumber":828,"author":{"gitId":"thant"},"content":"                \"and the start date seems to be after the end date! \");","lastModifiedDate":"2023-03-11"},{"lineNumber":829,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t Please try again!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":830,"author":{"gitId":"thant"},"content":"        borderLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":831,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":832,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":833,"author":{"gitId":"jeraldgau"},"content":"    static void eventErrorMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":834,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":835,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Error. Please enter a valid description, start time and end time\");","lastModifiedDate":"2023-03-09"},{"lineNumber":836,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":837,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":838,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":839,"author":{"gitId":"jeraldgau"},"content":"    static void deadlineErrorMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":840,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":841,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Error. Please enter a valid description and deadline.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":842,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":843,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":844,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":845,"author":{"gitId":"jeraldgau"},"content":"    static void schoolClassErrorMessage() {","lastModifiedDate":"2023-03-15"},{"lineNumber":846,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":847,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Error. Please enter a valid class name, description, start time and end time\");","lastModifiedDate":"2023-03-15"},{"lineNumber":848,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":849,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":850,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":851,"author":{"gitId":"jeraldgau"},"content":"    static void invalidDayMessage() {","lastModifiedDate":"2023-03-26"},{"lineNumber":852,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-26"},{"lineNumber":853,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Error. Please enter a valid day of week in all capital letters (Eg. MONDAY).\");","lastModifiedDate":"2023-03-26"},{"lineNumber":854,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-26"},{"lineNumber":855,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":856,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":857,"author":{"gitId":"jeraldgau"},"content":"    static void emptyDayErrorMessage() {","lastModifiedDate":"2023-03-26"},{"lineNumber":858,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-26"},{"lineNumber":859,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Error. Please enter a day of week.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":860,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-26"},{"lineNumber":861,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":862,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":863,"author":{"gitId":"skyanzy"},"content":"    static void priorityErrorMessage() {","lastModifiedDate":"2023-04-04"},{"lineNumber":864,"author":{"gitId":"skyanzy"},"content":"        Ui.borderLine();","lastModifiedDate":"2023-04-04"},{"lineNumber":865,"author":{"gitId":"skyanzy"},"content":"        System.out.println(\"\\t Please enter a priority from 1 to 3!\");","lastModifiedDate":"2023-04-04"},{"lineNumber":866,"author":{"gitId":"skyanzy"},"content":"        Ui.borderLine();","lastModifiedDate":"2023-04-04"},{"lineNumber":867,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":868,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":869,"author":{"gitId":"jeraldgau"},"content":"    static void invalidRemoveClassMessage() {","lastModifiedDate":"2023-03-26"},{"lineNumber":870,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-26"},{"lineNumber":871,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Error. Please follow the correct format to remove classes.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":872,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-26"},{"lineNumber":873,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":874,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":875,"author":{"gitId":"jeraldgau"},"content":"    static void invalidDateTimeMessage() {","lastModifiedDate":"2023-03-15"},{"lineNumber":876,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":877,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Please check the inputted format human!\\n\" +","lastModifiedDate":"2023-03-15"},{"lineNumber":878,"author":{"gitId":"skyanzy"},"content":"                \"\\t Try typing \u0027help\u0027 if you are not sure what the correct format is!\\n\");","lastModifiedDate":"2023-04-04"},{"lineNumber":879,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Please try again!\");","lastModifiedDate":"2023-03-15"},{"lineNumber":880,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":881,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":882,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":883,"author":{"gitId":"MichelleLiang0116"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":884,"author":{"gitId":"MichelleLiang0116"},"content":"     * Prints the startup message, includes instructions on available commands","lastModifiedDate":"2023-03-21"},{"lineNumber":885,"author":{"gitId":"MichelleLiang0116"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":886,"author":{"gitId":"jeraldgau"},"content":"    static void greetingMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":887,"author":{"gitId":"miahjerry"},"content":"        printDuck();","lastModifiedDate":"2023-03-29"},{"lineNumber":888,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":889,"author":{"gitId":"miahjerry"},"content":"        printMotivationalQuote();","lastModifiedDate":"2023-04-02"},{"lineNumber":890,"author":{"gitId":"miahjerry"},"content":"        borderLine();","lastModifiedDate":"2023-03-29"},{"lineNumber":891,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t Quack! Nice to meet you human. As you can see,  I\u0027m a Duck.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":892,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t As a Duck, I can only understand simple commands. Quack. \" +","lastModifiedDate":"2023-03-30"},{"lineNumber":893,"author":{"gitId":"thant"},"content":"                \"Human speech is so confusing!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":894,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t That being said, I am a smart Duck. \" +","lastModifiedDate":"2023-03-30"},{"lineNumber":895,"author":{"gitId":"thant"},"content":"                \"If you wish to know what I understand, just enter \u0027help\u0027.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":896,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t How may I assist you today, human?\");","lastModifiedDate":"2023-03-30"},{"lineNumber":897,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":898,"author":{"gitId":"MichelleLiang0116"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":899,"author":{"gitId":"miahjerry"},"content":"    static void printNotes(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-03-29"},{"lineNumber":900,"author":{"gitId":"miahjerry"},"content":"        int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-29"},{"lineNumber":901,"author":{"gitId":"miahjerry"},"content":"        if (index \u003e tasks.size() || index \u003c\u003d 0) {","lastModifiedDate":"2023-04-03"},{"lineNumber":902,"author":{"gitId":"miahjerry"},"content":"            Ui.exceedTaskNumberMessage(index);","lastModifiedDate":"2023-04-03"},{"lineNumber":903,"author":{"gitId":"miahjerry"},"content":"        } else {","lastModifiedDate":"2023-04-03"},{"lineNumber":904,"author":{"gitId":"miahjerry"},"content":"            ArrayList\u003cString\u003e toBePrinted \u003d tasks.get(index - 1).getAdditionalNotes();","lastModifiedDate":"2023-03-29"},{"lineNumber":905,"author":{"gitId":"miahjerry"},"content":"            borderLine();","lastModifiedDate":"2023-03-31"},{"lineNumber":906,"author":{"gitId":"miahjerry"},"content":"            if (!toBePrinted.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":907,"author":{"gitId":"miahjerry"},"content":"                for (int i \u003d 0; i \u003c toBePrinted.size(); i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":908,"author":{"gitId":"miahjerry"},"content":"                    System.out.println(\"\\t Here are the notes for that task quack!\");","lastModifiedDate":"2023-04-03"},{"lineNumber":909,"author":{"gitId":"miahjerry"},"content":"                    System.out.println(tasks.get(index - 1).toString());","lastModifiedDate":"2023-04-03"},{"lineNumber":910,"author":{"gitId":"miahjerry"},"content":"                    System.out.println(\"\\t \\t\" + (i + 1) + \". \" + toBePrinted.get(i));","lastModifiedDate":"2023-04-01"},{"lineNumber":911,"author":{"gitId":"miahjerry"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":912,"author":{"gitId":"miahjerry"},"content":"            } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":913,"author":{"gitId":"miahjerry"},"content":"                System.out.println(\"\\t There are no notes for this task!\");","lastModifiedDate":"2023-03-31"},{"lineNumber":914,"author":{"gitId":"miahjerry"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":915,"author":{"gitId":"miahjerry"},"content":"            borderLine();","lastModifiedDate":"2023-03-29"},{"lineNumber":916,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":917,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":918,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":919,"author":{"gitId":"miahjerry"},"content":"    static void printList(ArrayList\u003cTask\u003e tasks, int index) {","lastModifiedDate":"2023-03-29"},{"lineNumber":920,"author":{"gitId":"miahjerry"},"content":"        ArrayList\u003cString\u003e toBePrinted \u003d tasks.get(index).getAdditionalNotes();","lastModifiedDate":"2023-03-29"},{"lineNumber":921,"author":{"gitId":"miahjerry"},"content":"        for (int j \u003d 0; j \u003c toBePrinted.size(); j++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":922,"author":{"gitId":"miahjerry"},"content":"            System.out.println(\"\\t\" + \"\\t - \" + (j + 1) + \". \" + toBePrinted.get(j));","lastModifiedDate":"2023-03-29"},{"lineNumber":923,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":924,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":925,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":926,"author":{"gitId":"MichelleLiang0116"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":927,"author":{"gitId":"MichelleLiang0116"},"content":"     * Prints the exiting message when closing the program","lastModifiedDate":"2023-03-21"},{"lineNumber":928,"author":{"gitId":"MichelleLiang0116"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":929,"author":{"gitId":"jeraldgau"},"content":"    static void exitMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":930,"author":{"gitId":"miahjerry"},"content":"        printDuck();","lastModifiedDate":"2023-03-29"},{"lineNumber":931,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":932,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-03-09"},{"lineNumber":933,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":934,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":935,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":936,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":937,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"thant":57,"jeraldgau":217,"MichelleLiang0116":313,"miahjerry":211,"skyanzy":139}},{"path":"src/main/java/seedu/duck/exception/EmptyDescriptionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skyanzy"},"content":"package seedu.duck.exception;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"skyanzy"},"content":"public class EmptyDescriptionException extends Exception{","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"skyanzy"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"skyanzy":4}},{"path":"src/main/java/seedu/duck/exception/IllegalDeadlineException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.exception;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class IllegalDeadlineException extends Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeraldgau":5}},{"path":"src/main/java/seedu/duck/exception/IllegalEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.exception;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class IllegalEventException extends Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeraldgau":5}},{"path":"src/main/java/seedu/duck/exception/IllegalSchoolClassException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.exception;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class IllegalSchoolClassException extends Exception{","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jeraldgau":4}},{"path":"src/main/java/seedu/duck/exception/IllegalTodoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.exception;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class IllegalTodoException extends Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeraldgau":5}},{"path":"src/main/java/seedu/duck/exception/expiredDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thant"},"content":"package seedu.duck.exception;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"thant"},"content":"public class expiredDateException extends Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"thant"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"thant":5}},{"path":"src/main/java/seedu/duck/exception/startAfterEndException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thant"},"content":"package seedu.duck.exception;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"thant"},"content":"public class startAfterEndException extends Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"thant"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"thant":5}},{"path":"src/main/java/seedu/duck/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"skyanzy"},"content":"    private String by;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"        super(description);","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"        by \u003d deadline;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"        by \u003d deadline;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"        return by;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"miahjerry"},"content":"        return super.toSaveString() + \" /by \" + getDeadline() + \" \u003cp\u003e\" + getPriorityIndex() + \" \u003cn\u003e\" + getSavedNotes() + System.lineSeparator();","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"thant"},"content":"        return \"\\t [D]\" + super.toString() + \" (by: \" + by + \")\" + \" (\" + getPriority() + \")\";","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"thant":1,"jeraldgau":25,"miahjerry":1,"skyanzy":1}},{"path":"src/main/java/seedu/duck/task/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class Event extends Task {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"skyanzy"},"content":"    private String start; // Start date/time","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"skyanzy"},"content":"    private String end;   // End date/time","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"        super(description);","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"    public String getStart() {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"        return start;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"    public void setStart(String start) {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"    public String getEnd() {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"        return end;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"    public void setEnd(String end) {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"        return super.toSaveString() + \" /from \" + getStart() + \" /to \" + getEnd() +","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"miahjerry"},"content":"                \" \u003cp\u003e\" + getPriorityIndex() + \" \u003cn\u003e\" + getSavedNotes()  + System.lineSeparator();","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"thant"},"content":"        return \"\\t [E]\" + super.toString() + \" (from: \" + start","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"                + \" to: \" + end + \")\" + \" (\" + getPriority() + \")\";","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"thant":1,"jeraldgau":36,"miahjerry":1,"skyanzy":2}},{"path":"src/main/java/seedu/duck/task/RecurringDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skyanzy"},"content":"package seedu.duck.task;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"skyanzy"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"skyanzy"},"content":"public class RecurringDeadline extends Deadline{","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"skyanzy"},"content":"    private DayOfWeek day;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"skyanzy"},"content":"    public RecurringDeadline(String description, String by, DayOfWeek day) {","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"skyanzy"},"content":"        super(description, by);","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"skyanzy"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"skyanzy"},"content":"    public DayOfWeek getDay() {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"skyanzy"},"content":"        return this.day;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"skyanzy"},"content":"    public void setDay(DayOfWeek day) {","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"skyanzy"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"skyanzy"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"skyanzy"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"skyanzy"},"content":"        return getDoneConditionString() + \" \" + getDescription() + \" /by \" + getDeadline() + \" \u003cp\u003e\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"skyanzy"},"content":"                getPriorityIndex() + \" /day \" + day + System.lineSeparator();","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"skyanzy"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"skyanzy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"skyanzy"},"content":"        return \"\\t [D]\" + \"[\" + getStatusIcon() + \"] \" + getDescription() + \" (by: \" + super.getDeadline() + \")\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"skyanzy"},"content":"                \" (every \" + day + \") (\" + getPriority() + \")\";","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"skyanzy"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"skyanzy":31}},{"path":"src/main/java/seedu/duck/task/RecurringEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skyanzy"},"content":"package seedu.duck.task;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"skyanzy"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"skyanzy"},"content":"public class RecurringEvent extends Event {","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"skyanzy"},"content":"    private DayOfWeek day;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"skyanzy"},"content":"    public RecurringEvent(String description, String start, String end, DayOfWeek day) {","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"skyanzy"},"content":"        super(description, start, end);","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"skyanzy"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"skyanzy"},"content":"    public DayOfWeek getDay() {","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"skyanzy"},"content":"        return this.day;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"skyanzy"},"content":"    public void setDay(DayOfWeek day) {","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"skyanzy"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"skyanzy"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"skyanzy"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"skyanzy"},"content":"        return getDoneConditionString() + \" \" + getDescription() + \" /from \" + getStart() + \" /to \" + getEnd() +","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"skyanzy"},"content":"                \" \u003cp\u003e\" + getPriorityIndex() + \" /day \" + day + System.lineSeparator();","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"skyanzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"skyanzy"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"skyanzy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"skyanzy"},"content":"        return \"\\t [E]\" + \"[\" + getStatusIcon() + \"] \" + getDescription() + \" (from: \" + super.getStart()","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"skyanzy"},"content":"                + \" to: \" + super.getEnd() + \")\" + \" (every \" + day + \") (\" + getPriority() + \")\";","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"skyanzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"skyanzy"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"skyanzy":32}},{"path":"src/main/java/seedu/duck/task/SchoolClass.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.task;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"public class SchoolClass extends Task implements Comparable\u003cSchoolClass\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"    private String className; // Name of class","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"    private DayOfWeek day; // Day of the week","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"    private String start; // Start date/time","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"    private String end;   // End date/time","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"    public SchoolClass(String className, String description, DayOfWeek day, String start, String end) {","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"        super(description);","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"        this.className \u003d className;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"    public String getClassName() {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"        return className;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"    public void setClassName(String className) {","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"        this.className \u003d className;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"    public DayOfWeek getDay() {","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"        return this.day;","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"    public String getStart() {","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"        return start;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"    public void setStart(String start) {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"    public String getEnd() {","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"jeraldgau"},"content":"        return end;","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"jeraldgau"},"content":"    public void setEnd(String end) {","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"jeraldgau"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"jeraldgau"},"content":"    public int compareTo(SchoolClass lesson) {","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"jeraldgau"},"content":"        if (lesson.day.compareTo(this.day) \u003d\u003d 0) {","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"jeraldgau"},"content":"            return this.start.compareTo(lesson.start);","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"jeraldgau"},"content":"            return this.day.compareTo(lesson.day);","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"jeraldgau"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"jeraldgau"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"jeraldgau"},"content":"            return true;","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"jeraldgau"},"content":"        if (obj \u003d\u003d null || obj.getClass() !\u003d this.getClass()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"jeraldgau"},"content":"            return false;","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"jeraldgau"},"content":"        SchoolClass lesson \u003d (SchoolClass) obj;","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"jeraldgau"},"content":"        return className.equals(lesson.getClassName()) \u0026\u0026 this.getDescription().equals(lesson.getDescription())","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"jeraldgau"},"content":"                \u0026\u0026 day.equals(lesson.getDay()) \u0026\u0026 start.equals(lesson.getStart()) \u0026\u0026 end.equals(lesson.getEnd());","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"jeraldgau"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"jeraldgau"},"content":"        return super.toSaveString() + \" /class \" + getClassName() + \" /day \" + getDay() + \" /from \"","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"jeraldgau"},"content":"                + getStart() + \" /to \"+ getEnd() + System.lineSeparator();","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"jeraldgau"},"content":"    public String toString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"jeraldgau"},"content":"        if (getDescription().isBlank()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"jeraldgau"},"content":"            return \"\\t [\" + day + \"]\" + \"[\" + getStatusIcon() + \"] \" + className + \" (from: \"","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"jeraldgau"},"content":"                    + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"jeraldgau"},"content":"        return \"\\t [\" + day + \"]\" + \"[\" + getStatusIcon() + \"] \" + className + \": \"","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"jeraldgau"},"content":"                + getDescription() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jeraldgau":84}},{"path":"src/main/java/seedu/duck/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"miahjerry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"public class Task {","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"thant"},"content":"    private static int taskCount;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"    private String description;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"thant"},"content":"    private int priority;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"miahjerry"},"content":"    private final ArrayList\u003cString\u003e additionalNotes \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-04-01"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"    public Task(String description) {","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"miahjerry"},"content":"        this.priority \u003d 1; //automatically set to low priority","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"thant"},"content":"    public void setPriority(String priority) {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"thant"},"content":"        this.priority \u003d Integer.parseInt(priority);","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"        return this.description;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"thant"},"content":"    public static void clearCount() {","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"        taskCount \u003d 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jeraldgau"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"jeraldgau"},"content":"        if(isDone) {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"jeraldgau"},"content":"            // Mark done task with X","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"jeraldgau"},"content":"            return \"X\";","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"jeraldgau"},"content":"        return \" \";","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"miahjerry"},"content":"    public String hasNotes(){","lastModifiedDate":"2023-04-01"},{"lineNumber":48,"author":{"gitId":"miahjerry"},"content":"        if (additionalNotes.isEmpty()){","lastModifiedDate":"2023-04-01"},{"lineNumber":49,"author":{"gitId":"miahjerry"},"content":"            return \"0\";","lastModifiedDate":"2023-04-01"},{"lineNumber":50,"author":{"gitId":"miahjerry"},"content":"        } else {","lastModifiedDate":"2023-04-01"},{"lineNumber":51,"author":{"gitId":"miahjerry"},"content":"            return \"1\";","lastModifiedDate":"2023-04-01"},{"lineNumber":52,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":53,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":54,"author":{"gitId":"miahjerry"},"content":"    public String getSavedNotes(){","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"miahjerry"},"content":"        String save \u003d \"\";","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"miahjerry"},"content":"        save +\u003d hasNotes();","lastModifiedDate":"2023-04-01"},{"lineNumber":57,"author":{"gitId":"miahjerry"},"content":"        for (int i \u003d 0; i \u003c additionalNotes.size(); i++){","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"miahjerry"},"content":"            save +\u003d additionalNotes.get(i);","lastModifiedDate":"2023-04-01"},{"lineNumber":59,"author":{"gitId":"miahjerry"},"content":"            if (!(i\u003d\u003dadditionalNotes.size()-1)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"miahjerry"},"content":"                save +\u003d \"@\";","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"miahjerry"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"miahjerry"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"miahjerry"},"content":"        return save;","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"miahjerry"},"content":"    public void addNotes(String noteToAdd){","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"miahjerry"},"content":"            this.additionalNotes.add(noteToAdd);","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"miahjerry"},"content":"    public ArrayList\u003cString\u003e getAdditionalNotes(){","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"miahjerry"},"content":"        return this.additionalNotes;","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"miahjerry"},"content":"    public String getNote(int index){","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"miahjerry"},"content":"        return this.additionalNotes.get(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"MichelleLiang0116"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"miahjerry"},"content":"    public void deleteNote(int indexToBeDeleted){","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"miahjerry"},"content":"        this.additionalNotes.remove(indexToBeDeleted-1);","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"miahjerry"},"content":"    public void editNote(int indexToBeEdited, String editedNote){","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"miahjerry"},"content":"        this.additionalNotes.set(indexToBeEdited,editedNote);","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"miahjerry"},"content":"    public int numberOfNotes(){","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"miahjerry"},"content":"        return this.additionalNotes.size();","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"thant"},"content":"    public String getPriority() {","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"thant"},"content":"        if (priority \u003d\u003d 1) {","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"thant"},"content":"            // Mark done task with X","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"thant"},"content":"            return \"Low priority.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"thant"},"content":"        } else if(priority \u003d\u003d 2) {","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"thant"},"content":"            // Mark done task with X","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"thant"},"content":"            return \"Medium priority.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"thant"},"content":"        } else if(priority \u003d\u003d 3) {","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"thant"},"content":"            // Mark done task with X","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"thant"},"content":"            return \"High priority.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"thant"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"thant"},"content":"        return \"No priority established.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"miahjerry"},"content":"    public int returnPriority(){","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"miahjerry"},"content":"        return this.priority;","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"miahjerry"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"miahjerry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"jeraldgau"},"content":"    public int getPriorityIndex() {","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"jeraldgau"},"content":"        return this.priority;","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"jeraldgau"},"content":"    public static void incrementCount() {","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"jeraldgau"},"content":"        taskCount++;","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"jeraldgau"},"content":"    public static void decrementCount() {","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"jeraldgau"},"content":"        taskCount--;","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"jeraldgau"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"jeraldgau"},"content":"        return taskCount;","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"jeraldgau"},"content":"    public String getDoneConditionString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"jeraldgau"},"content":"        if (isDone) {","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"jeraldgau"},"content":"            return \"1\";","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"jeraldgau"},"content":"        return \"0\";","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"jeraldgau"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"jeraldgau"},"content":"        return getDoneConditionString() + \" \" + getDescription();","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"jeraldgau"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"jeraldgau"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"thant":22,"jeraldgau":67,"miahjerry":47,"MichelleLiang0116":1}},{"path":"src/main/java/seedu/duck/task/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"        super(description);","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"miahjerry"},"content":"        return super.toSaveString() + \" \u003cp\u003e\" + getPriorityIndex() + \" \u003cn\u003e\" + getSavedNotes() + System.lineSeparator();","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"thant"},"content":"        return \"\\t [T]\" + super.toString() + \" (\" + getPriority() + \")\";","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"thant":1,"jeraldgau":16,"miahjerry":1}},{"path":"src/test/java/seedu/duck/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"public class ParserTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"    String[] words \u003d {\"remove\", \"keyword\"};","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"    public void testIsNumeric() {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"        assertTrue(Parser.isNumeric(\"2\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"        assertTrue(Parser.isNumeric(\"5\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"        assertFalse(Parser.isNumeric(\"letter\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"    public void testProcessKeywords() {","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"miahjerry"},"content":"        assertEquals(\"keyword\", Parser.processKeywords(words,1));","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"jeraldgau":23,"miahjerry":1}}]
