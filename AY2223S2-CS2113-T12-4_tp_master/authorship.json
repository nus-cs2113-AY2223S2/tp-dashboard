[{"path":".github/ISSUE_TEMPLATE/administrative-matters.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nichyjt"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"nichyjt"},"content":"name: Administrative Matters","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nichyjt"},"content":"about: Add chores that must be done","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"nichyjt"},"content":"title: \"[Task] Your Chore Name\"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"nichyjt"},"content":"labels: priority.Low, type.Task","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"nichyjt"},"content":"assignees: \u0027\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"nichyjt"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"nichyjt"},"content":"**Describe the Task**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"nichyjt"},"content":"A clear and concise description of what the Task/Chore is.  ","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"nichyjt"},"content":"e.g. Move testing code to new folder","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"nichyjt"},"content":"**To Reproduce**","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"nichyjt"},"content":"Steps to reproduce the behavior:","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"nichyjt"},"content":"1. Go to \u0027...\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"nichyjt"},"content":"2. Click on \u0027....\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"nichyjt"},"content":"3. Scroll down to \u0027....\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"nichyjt"},"content":"4. See error","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"nichyjt"},"content":"**Expected behavior**","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"nichyjt"},"content":"A clear and concise description of what you expected to happen.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"nichyjt"},"content":"**Screenshots**","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nichyjt"},"content":"If applicable, add screenshots to help explain your problem.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nichyjt"},"content":"**Desktop (please complete the following information):**","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"nichyjt"},"content":" - OS: [e.g. iOS]","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"nichyjt"},"content":" - Browser [e.g. chrome, safari]","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"nichyjt"},"content":" - Version [e.g. 22]","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"nichyjt"},"content":"**Additional context**","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"nichyjt"},"content":"Add any other context about the problem here.","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"nichyjt"},"content":"**Labels**","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"nichyjt"},"content":"Remember to tag the priority using the labels function.","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nichyjt":36}},{"path":".github/ISSUE_TEMPLATE/bug_report.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nichyjt"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"nichyjt"},"content":"name: Bug report","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nichyjt"},"content":"about: File a bug report for WellNUS++","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"nichyjt"},"content":"title: \"[Bug] Your Bug Name\"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"nichyjt"},"content":"labels: severity.Low, type.Bug","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"nichyjt"},"content":"assignees: \u0027\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"nichyjt"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"nichyjt"},"content":"**Describe the bug**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"nichyjt"},"content":"A clear and concise description of what the bug is.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"nichyjt"},"content":"**To Reproduce**","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"nichyjt"},"content":"Steps to reproduce the behavior:","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"nichyjt"},"content":"1. Go to \u0027...\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"nichyjt"},"content":"2. Click on \u0027....\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"nichyjt"},"content":"3. Scroll down to \u0027....\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"nichyjt"},"content":"4. See error","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"nichyjt"},"content":"**Expected behavior**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"nichyjt"},"content":"A clear and concise description of what you expected to happen.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"nichyjt"},"content":"**Screenshots**","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"nichyjt"},"content":"If applicable, add screenshots to help explain your problem.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nichyjt"},"content":"**Desktop (please complete the following information):**","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nichyjt"},"content":" - OS: [e.g. iOS]","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"nichyjt"},"content":" - Browser [e.g. chrome, safari]","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"nichyjt"},"content":" - Version [e.g. 22]","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"nichyjt"},"content":"**Additional context**","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"nichyjt"},"content":"Add any other context about the problem here.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"nichyjt"},"content":"**Severity**","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"nichyjt"},"content":"Remember to tag the severity of the bug and priority (if applicable) using the labels function.","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nichyjt":35}},{"path":".github/ISSUE_TEMPLATE/user-story-features.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nichyjt"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"nichyjt"},"content":"name: User Story Features","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nichyjt"},"content":"about: Anything related to adding features that involve user stories","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"nichyjt"},"content":"title: \"[User Story Feature] Your Feature\"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"nichyjt"},"content":"labels: priority.Low, type.Story","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"nichyjt"},"content":"assignees: \u0027\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"nichyjt"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"nichyjt"},"content":"**User Story**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"nichyjt"},"content":"What is the user story this feature aims to achieve?  ","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"nichyjt"},"content":"Describe it and label the issue accordingly.  ","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"nichyjt"},"content":"- Is it a \u0027Epic\u0027 -\u003e A big feature which can be broken down into smaller stories","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"nichyjt"},"content":"- Is it a \u0027Story\u0027 -\u003e A smaller feature","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"nichyjt"},"content":"- Is it an \u0027Enhancement\u0027 -\u003e An enhancement to an existing story","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"nichyjt"},"content":"**Is your feature request related to a problem? Please describe.**","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"nichyjt"},"content":"A clear and concise description of what the problem is. Ex. I\u0027m always frustrated when [...]","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"nichyjt"},"content":"**Describe the solution you\u0027d like**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"nichyjt"},"content":"A clear and concise description of what you want to happen.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"nichyjt"},"content":"**Describe alternatives you\u0027ve considered**","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"nichyjt"},"content":"A clear and concise description of any alternative solutions or features you\u0027ve considered.  Optional if it does not value-add to the issue.  ","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nichyjt"},"content":"**Additional context**","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nichyjt"},"content":"Add any other context or screenshots about the feature request here.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"nichyjt"},"content":"**Labels**","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"nichyjt"},"content":"Remember to label the feature with the appropriate `priority` and `type`.","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nichyjt":30}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"nichyjt"},"content":"    mainClass \u003d \"seedu.duke.WellNus\"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"nichyjt"},"content":"    archiveBaseName \u003d \"WellNus\"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"nichyjt":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"wenxin-c"},"content":"| Display                                             |           Name             |            Github Profile                  |             Portfolio              |","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"|-----------------------------------------------------|:--------------------------:|:-------------------------------------:     |:---------------------------------: |","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"wenxin-c"},"content":"| ![](./team/wenxin.jpg)                              |        Chen Wenxin         | [Github](https://github.com/wenxin-c)      | [Portfolio](docs/team/wenxin.md)   |","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"| ![](./team/WangHaoyang.png)                         |        Wang Haoyang        | [Github](https://github.com/haoyangw)      | [Portfolio](docs/team/haoyangw.md) |","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"wenxin-c"},"content":"| ![](./team/yongbin.png)                             |        Wang Yongbin        | [Github](https://github.com/YongbinWang)   | [Portfolio](docs/team/yongbin.md)  |","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"| ![](./team/bernard.jpg)                       |   Bernard Lesley Efendy    | [Github](https://github.com/BernardLesley) | [Portfolio](docs/team/bernard.md)  |","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"nichyjt"},"content":"| ![Yek Jin Teck, Nicholas](./team/nichyjt.jpg)       |   Yek Jin Teck, Nicholas   |  [Github](https://github.com/nichyjt)      | [Portfolio](docs/team/nichyjt.md)  |","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"wenxin-c":3,"BernardLesley":1,"haoyangw":2,"-":2,"nichyjt":1}},{"path":"docs/team/bernard.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"# John Doe - Project Portfolio Page","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"## Overview","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BernardLesley":5}},{"path":"docs/team/haoyangw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"# Wang Haoyang - Project Portfolio","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"## Overview","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"A developer from Team 4 of CS2113 Tutorial Group 12","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"haoyangw":6}},{"path":"docs/team/nichyjt.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nichyjt"},"content":"# Yek Jin Teck, Nicholas - Project Portfolio Page","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"nichyjt"},"content":"## Overview","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"nichyjt"},"content":"Hi, I\u0027m Nicholas.","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"nichyjt"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"nichyjt":6}},{"path":"docs/team/wenxin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wenxin-c"},"content":"# Wenxin - Project Portfolio Page","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"wenxin-c"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"wenxin-c"},"content":"## Overview","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"wenxin-c"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"wenxin-c"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"wenxin-c"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"wenxin-c":6}},{"path":"docs/team/yongbin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YongbinWang"},"content":"# Yongbin - Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"YongbinWang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"YongbinWang"},"content":"## Overview","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"YongbinWang"},"content":"Hi I am yongbin","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"YongbinWang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"YongbinWang"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"YongbinWang":6}},{"path":"src/main/java/seedu/duke/WellNus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenxin-c"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"wenxin-c"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"wenxin-c"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"wenxin-c"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"wenxin-c"},"content":"public class WellNus {","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"wenxin-c"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"wenxin-c"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"wenxin-c"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"wenxin-c"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"wenxin-c"},"content":"        String logo \u003d \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"wenxin-c"},"content":"                \",--.   ,--.       ,--.,--.,--.  ,--.,--. ,--. ,---.     |  |        |  |     \\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"wenxin-c"},"content":"                \"|  |   |  | ,---. |  ||  ||  ,\u0027.|  ||  | |  |\u0027   .-\u0027,---|  |---.,---|  |---. \\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"wenxin-c"},"content":"                \"|  |.\u0027.|  || .-. :|  ||  ||  |\u0027 \u0027  ||  | |  |`.  `-.\u0027---|  |---\u0027\u0027---|  |---\u0027 \\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"wenxin-c"},"content":"                \"|   ,\u0027.   |\\\\   --.|  ||  ||  | `   |\u0027  \u0027-\u0027  \u0027.-\u0027    |   |  |        |  |     \\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"wenxin-c"},"content":"                \"\u0027--\u0027   \u0027--\u0027 `----\u0027`--\u0027`--\u0027`--\u0027  `--\u0027 `-----\u0027 `-----\u0027    `--\u0027        `--\u0027     \\n\" ;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"wenxin-c"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"wenxin-c"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"wenxin-c"},"content":"        System.out.println(\"What is your name?\");","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"wenxin-c"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"wenxin-c"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"wenxin-c"},"content":"        System.out.println(\"Hello \" + in.nextLine());","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"wenxin-c"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"wenxin-c"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"wenxin-c":23}},{"path":"src/main/java/seedu/duke/command/BadCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nichyjt"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"nichyjt"},"content":"public class BadCommandException extends Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"nichyjt"},"content":"    public BadCommandException(String errorMessage) {","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"nichyjt"},"content":"        super(errorMessage);","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"nichyjt"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"nichyjt"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"nichyjt":7}},{"path":"src/main/java/seedu/duke/command/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nichyjt"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"nichyjt"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"nichyjt"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"nichyjt"},"content":" * A CommandParser processes user input from a defined format \u003cp\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"nichyjt"},"content":" * \u003cp\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"nichyjt"},"content":" * Each user input via console consists of: \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"nichyjt"},"content":" * \u003col\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"nichyjt"},"content":" * \u003cli\u003eCOMMANDS - A Argument and Payload pairs \u003c/li\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"nichyjt"},"content":" * \u003cli\u003eARGUMENTS - String representing the action/parameters of the command \u003c/li\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"nichyjt"},"content":" * \u003cli\u003ePAYLOADS - value of the action/parameters \u003c/li\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"nichyjt"},"content":" * \u003c/ol\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"nichyjt"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"nichyjt"},"content":" * In short, user input is a list of commands, each command containing arguments and payloads. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"nichyjt"},"content":" * Further, we define the FIRST command to be the MAIN command of any given user input. \u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"nichyjt"},"content":" * So, \u003ccode\u003e\"deadline work on CS2113 --by Sunday\"\u003c/code\u003e has \u003ccode\u003e\"deadline work on CS2113\"\u003c/code\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"nichyjt"},"content":" * as the main command \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"nichyjt"},"content":" * Each command (argument-payload pair) except for the main command MUST","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"nichyjt"},"content":" * be delimited by \u003ccode\u003e\" --\"\u003c/code\u003e (whitespace intentional)","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"nichyjt"},"content":" * \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"nichyjt"},"content":" * For example, a given user input: \u003ccode\u003e\"deadline work on CS2113 --by Sunday\"\u003c/code\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"nichyjt"},"content":" * \u003cli\u003eHas commands [\"deadline work on CS2113\", \"by Sunday\"]\u003c/li\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"nichyjt"},"content":" * \u003cli\u003eHas arguments [\"deadline\", \"by\"]\u003c/li\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"nichyjt"},"content":" * \u003cli\u003eHas payloads [\"work on CS2113\", [\"Sunday\"]\u003c/li\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"nichyjt"},"content":" * \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"nichyjt"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"nichyjt"},"content":"public class CommandParser {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"nichyjt"},"content":"    private static final String ARGUMENT_DELIMITER \u003d \" --\";","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"nichyjt"},"content":"    private static final String UNPADDED_DELIMITER \u003d \"--\";","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"nichyjt"},"content":"    private static final String PAYLOAD_DELIMITER \u003d \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"nichyjt"},"content":"    // Message string constants for errors and ui","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"nichyjt"},"content":"    private static final String ERROR_EMPTY_COMMAND \u003d \"Command is empty!\";","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"nichyjt"},"content":"    private static final String ERROR_EMPTY_ARGUMENT \u003d \"Command is missing an argument!\";","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"nichyjt"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"nichyjt"},"content":"     * Constructs an instance of CommandParser. \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"nichyjt"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"nichyjt"},"content":"     * CommandParser should be used to break down raw user input into","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"nichyjt"},"content":"     * logical \u003ccode\u003e[Argument,Payload]\u003c/code\u003e pairs","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"nichyjt"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"nichyjt"},"content":"    public CommandParser() {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"nichyjt"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"nichyjt"},"content":"    private String[] splitIntoCommands(String fullCommandString) throws BadCommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"nichyjt"},"content":"        // Perform a string length sanity check","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"nichyjt"},"content":"        fullCommandString \u003d fullCommandString.strip();","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"nichyjt"},"content":"        if (fullCommandString.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"nichyjt"},"content":"            throw new BadCommandException(ERROR_EMPTY_COMMAND);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"nichyjt"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"nichyjt"},"content":"        String[] rawCommands \u003d fullCommandString.split(ARGUMENT_DELIMITER, -1);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"nichyjt"},"content":"        // Adversarial user input check","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"nichyjt"},"content":"        // There are 2 possible adversarial inputs that should be checked for","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"nichyjt"},"content":"        // 1. Whitespace/Empty Arguments: `cmd payload -- payload1 -- `","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"nichyjt"},"content":"        //    Split renders it as [\"cmd payload\", \" payload1\", \"\"]","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"nichyjt"},"content":"        //    \" payload1\" will cause issues with rendering","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"nichyjt"},"content":"        //    So, check for empty commands and whitespace prefix","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"nichyjt"},"content":"        // 2. Missing main argument: `--argument payload`","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"nichyjt"},"content":"        //    Split renders this as [\"--argument payload\"]","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"nichyjt"},"content":"        //    So, check for \"--\" prefix","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"nichyjt"},"content":"        String[] cleanCommands \u003d new String[rawCommands.length];","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"nichyjt"},"content":"        for (int i \u003d 0; i \u003c rawCommands.length; ++i) {","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"nichyjt"},"content":"            String currentCommand \u003d rawCommands[i];","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"nichyjt"},"content":"            // Case 1 check","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"nichyjt"},"content":"            if (currentCommand.startsWith(\" \") || currentCommand.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"nichyjt"},"content":"                throw new BadCommandException(ERROR_EMPTY_ARGUMENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"nichyjt"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"nichyjt"},"content":"            // Strip command of whitespace to clean input","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"nichyjt"},"content":"            currentCommand \u003d currentCommand.strip();","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"nichyjt"},"content":"            // Case 2 check","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"nichyjt"},"content":"            if (currentCommand.startsWith(UNPADDED_DELIMITER)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"nichyjt"},"content":"                throw new BadCommandException(ERROR_EMPTY_COMMAND);","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"nichyjt"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"nichyjt"},"content":"            cleanCommands[i] \u003d currentCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"nichyjt"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"nichyjt"},"content":"        return cleanCommands;","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"nichyjt"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"nichyjt"},"content":"    private String getArgumentFromCommand(String commandString) throws BadCommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"nichyjt"},"content":"        String[] words \u003d commandString.split(PAYLOAD_DELIMITER);","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"nichyjt"},"content":"        // Bad input checks","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"nichyjt"},"content":"        if (words.length \u003d\u003d 0) {","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"nichyjt"},"content":"            throw new BadCommandException(ERROR_EMPTY_ARGUMENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"nichyjt"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"nichyjt"},"content":"        return words[0];","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"nichyjt"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"nichyjt"},"content":"    private String getPayloadFromCommand(String commandString) {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"nichyjt"},"content":"        String[] words \u003d commandString.split(PAYLOAD_DELIMITER);","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"nichyjt"},"content":"        String payload \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"nichyjt"},"content":"        for (int i \u003d 0; i \u003c words.length; ++i) {","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"nichyjt"},"content":"            payload \u003d payload.concat(words[i]);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"nichyjt"},"content":"            if (i !\u003d words.length - 1) {","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"nichyjt"},"content":"                payload \u003d payload.concat(PAYLOAD_DELIMITER);","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"nichyjt"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"nichyjt"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"nichyjt"},"content":"        // No checks for payload length is done as payload CAN be empty","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"nichyjt"},"content":"        return payload;","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"nichyjt"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"nichyjt"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"nichyjt"},"content":"     * Takes in raw user input and splits it into Argument-Payload pairs","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"nichyjt"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"nichyjt"},"content":"     * @param userInput Raw user input from stdin in string form","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"nichyjt"},"content":"     * @return HashMap mapping a Argument (key) to a Payload (value)","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"nichyjt"},"content":"     * @throws BadCommandException when command is empty or is problematic","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"nichyjt"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"nichyjt"},"content":"    public HashMap\u003cString, String\u003e parseUserInput(String userInput) throws BadCommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"nichyjt"},"content":"        if (userInput.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"nichyjt"},"content":"            throw new BadCommandException(ERROR_EMPTY_COMMAND);","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"nichyjt"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"nichyjt"},"content":"        HashMap\u003cString, String\u003e argumentPayload \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"nichyjt"},"content":"        String[] commands \u003d splitIntoCommands(userInput);","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"nichyjt"},"content":"        for (String command : commands) {","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"nichyjt"},"content":"            String argument \u003d getArgumentFromCommand(command);","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"nichyjt"},"content":"            String payload \u003d getPayloadFromCommand(command);","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"nichyjt"},"content":"            argumentPayload.put(argument, payload);","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"nichyjt"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"nichyjt"},"content":"        return argumentPayload;","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"nichyjt"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"nichyjt"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"nichyjt"},"content":"     * Takes in a string and returns the inferred \"Main Argument\"","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"nichyjt"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"nichyjt"},"content":"     * Practically, this is the \u003cb\u003eFirst\u003c/b\u003e argument of any command string.","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"nichyjt"},"content":"     * For example, \u003ccode\u003e\"hb add --name foobar\"\u003c/code\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"nichyjt"},"content":"     * Has main argument \"hb\"","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"nichyjt"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"nichyjt"},"content":"     * @param userInput Any string input representing a command","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"nichyjt"},"content":"     * @return the inferred Main Argument","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"nichyjt"},"content":"     * @throws BadCommandException when String is empty","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"nichyjt"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"nichyjt"},"content":"    public String getMainArgument(String userInput) throws BadCommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"nichyjt"},"content":"        userInput \u003d userInput.strip();","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"nichyjt"},"content":"        String[] parameters \u003d userInput.split(\" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"nichyjt"},"content":"        if (parameters.length \u003d\u003d 0) {","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"nichyjt"},"content":"            throw new BadCommandException(ERROR_EMPTY_COMMAND);","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"nichyjt"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"nichyjt"},"content":"        return parameters[0];","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"nichyjt"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"nichyjt"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"nichyjt":147}},{"path":"src/test/java/seedu/duke/command/CommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nichyjt"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"nichyjt"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"nichyjt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"nichyjt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"nichyjt"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"nichyjt"},"content":"public class CommandParserTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"nichyjt"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"nichyjt"},"content":"    public void parseUserInput_validInput() {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"nichyjt"},"content":"        // The following commands should be able to pass","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"nichyjt"},"content":"        String[] validCommandInputs \u003d {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"nichyjt"},"content":"            \"mainCommand\",","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"nichyjt"},"content":"            \"mainCommand payload\",","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"nichyjt"},"content":"            \"main --arg1 pay1\",","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"nichyjt"},"content":"            \"main --arg1 pay1 --arg2\",","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"nichyjt"},"content":"            \"main --arg1 pay1 --arg2 --arg3 pay3\",","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"nichyjt"},"content":"        };","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"nichyjt"},"content":"        // The following tests check if adversarial inputs are processed correctly","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"nichyjt"},"content":"        String[] validTrickyInputs \u003d {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"nichyjt"},"content":"            \"mainCommand pay--load\",","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"nichyjt"},"content":"            \"mainCommand --argument1 payload--\",","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"nichyjt"},"content":"            \"  mainCommand --arg--1 pay1 --arg2 pay2\",","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"nichyjt"},"content":"        };","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"nichyjt"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"nichyjt"},"content":"        for (String validCommand : validCommandInputs) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"nichyjt"},"content":"            try {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"nichyjt"},"content":"                parser.parseUserInput(validCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"nichyjt"},"content":"            } catch (BadCommandException exception) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"nichyjt"},"content":"                fail(\"CommandParser threw exception on valid input:\\n\" + exception);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"nichyjt"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"nichyjt"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"nichyjt"},"content":"        for (String validCommand : validTrickyInputs) {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"nichyjt"},"content":"            try {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"nichyjt"},"content":"                parser.parseUserInput(validCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"nichyjt"},"content":"            } catch (BadCommandException exception) {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"nichyjt"},"content":"                fail(\"CommandParser threw exception on valid input:\\n\" + exception);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"nichyjt"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"nichyjt"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"nichyjt"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"nichyjt"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"nichyjt"},"content":"    public void parseUserInput_emptyInput_exceptionThrown() {","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"nichyjt"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"nichyjt"},"content":"        // Test on empty user input","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"nichyjt"},"content":"        String command \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"nichyjt"},"content":"        Assertions.assertThrows(BadCommandException.class, () -\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"nichyjt"},"content":"            parser.parseUserInput(command);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"nichyjt"},"content":"        }, \"BadCommandException was expected for input:\\n\" + command);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"nichyjt"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"nichyjt"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"nichyjt"},"content":"    public void parseUserInput_emptyArgument_exceptionThrown() {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"nichyjt"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"nichyjt"},"content":"        // Test on empty argument","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"nichyjt"},"content":"        String commandEmptyArg \u003d \"mainCommand payload --\";","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"nichyjt"},"content":"        Assertions.assertThrows(BadCommandException.class, () -\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"nichyjt"},"content":"            parser.parseUserInput(commandEmptyArg);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"nichyjt"},"content":"        }, \"BadCommandException was expected for input:\\n\" + commandEmptyArg);","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"nichyjt"},"content":"        // Test on empty argument with padding","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"nichyjt"},"content":"        String commandEmptyArgPadded \u003d \"mainCommand payload -- \";","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"nichyjt"},"content":"        Assertions.assertThrows(BadCommandException.class, () -\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"nichyjt"},"content":"            parser.parseUserInput(commandEmptyArgPadded);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"nichyjt"},"content":"        }, \"BadCommandException was expected for input:\\n\" + commandEmptyArgPadded);","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"nichyjt"},"content":"        // Test on empty argument, payload exists","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"nichyjt"},"content":"        String emptyCmdWithPayload \u003d \"mainCommand payload -- payload1\";","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"nichyjt"},"content":"        Assertions.assertThrows(BadCommandException.class, () -\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"nichyjt"},"content":"            parser.parseUserInput(emptyCmdWithPayload);","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"nichyjt"},"content":"        }, \"BadCommandException was expected for input:\\n\" + emptyCmdWithPayload);","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"nichyjt"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"nichyjt"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"nichyjt"},"content":"    public void parseUserInput_noMainArgument_exceptionThrown() {","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"nichyjt"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"nichyjt"},"content":"        // Test on empty user input without padding","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"nichyjt"},"content":"        String command \u003d \"--arg1 payload\";","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"nichyjt"},"content":"        Assertions.assertThrows(BadCommandException.class, () -\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"nichyjt"},"content":"            parser.parseUserInput(command);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"nichyjt"},"content":"        }, \"BadCommandException was expected for input:\\n\" + command);","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"nichyjt"},"content":"        // Test on empty user input with padding","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"nichyjt"},"content":"        String commandPadded \u003d \" --arg1 payload\";","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"nichyjt"},"content":"        Assertions.assertThrows(BadCommandException.class, () -\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"nichyjt"},"content":"            parser.parseUserInput(commandPadded);","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"nichyjt"},"content":"        }, \"BadCommandException was expected for input:\\n\" + commandPadded);","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"nichyjt"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"nichyjt"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"nichyjt"},"content":"    public void getMainArgumentTest() {","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"nichyjt"},"content":"        CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"nichyjt"},"content":"        String target \u003d \"mainCommand\";","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"nichyjt"},"content":"        String command \u003d \"mainCommand payload --argument payload1\";","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"nichyjt"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"nichyjt"},"content":"            String result1 \u003d parser.getMainArgument(command);","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"nichyjt"},"content":"            assertEquals(target, result1);","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"nichyjt"},"content":"        } catch (BadCommandException exception) {","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"nichyjt"},"content":"            fail(exception.getMessage());","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"nichyjt"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"nichyjt"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"nichyjt"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"nichyjt"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"nichyjt":107}}]
