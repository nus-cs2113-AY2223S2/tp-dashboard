[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"    mainClass \u003d \"seedu.badMaths.BadMaths\"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"    archiveBaseName \u003d \"badMaths\"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"khooyourun":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |     Name     | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"--------|:------------:|:--------------:|:---------:","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wilson Lee Jun Wei | [Github](https://github.com/WilsonLee2000) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Khoo You Run     |       [Github](https://github.com/)        | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |      Hui Yu Cong     |       [Github](https://github.com/)        | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |      John Roe      |       [Github](https://github.com/)        | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zeng Ziqiu | [Github](https://github.com/ZiqiuZeng) | [Portfolio](docs/team/AboutUs.md)","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"khooyourun":2,"-":4,"ZiqiuZeng":1,"WilsonLee2000":2,"YC-Michael":2}},{"path":"src/main/java/seedu/badMaths/BadMaths.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"public class BadMaths {","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"        System.out.println(\"Input math question please.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"        while (true) {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"            Parser parser \u003d new Parser(userInput);","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"            String command \u003d parser.getCommand();","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"            String toDo \u003d parser.getToDo();","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"            Command inputCommand \u003d new Command(command, toDo);","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"            inputCommand.executeCommand();","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"            if (userInput.equals(\"Bye\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"khooyourun":26}},{"path":"src/main/java/seedu/badMaths/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Takes in function and command","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" * Identifies the function called and executes the appropriate function class","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":" *","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":" * @param command","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":" * @param toDo","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"public class Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"    protected String command;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    protected String toDo;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    public Command(String command, String toDo) {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"    public String getCommand() {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"        return command;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"    public void executeCommand() {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"        switch (command) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"        case \"Bye\":","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"Goodbye!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"        case \"Graph\":","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"            TrigoGraph trigoGraph \u003d new TrigoGraph(toDo);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"            trigoGraph.startGraphAnalysis();","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"khooyourun":38}},{"path":"src/main/java/seedu/badMaths/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Takes in user input and splits it into 2 parts","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" * First part is the function name","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":" * Second part is the todo to be executed in that function","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":" * Returns the two parts using get methods","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":" *","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":" * @param userInput","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"public class Parser {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    protected String userInput;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    public Parser(String userInput) {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    public String getCommand() {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        if (userInput.contains(\".\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"            return userInput.substring(0, userInput.indexOf(\".\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"            return userInput;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"    public String getToDo() {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        if (!userInput.equals(\"bye\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"            return userInput.substring(userInput.indexOf(\".\") + 2);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"            return \"nothing to do\";","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"khooyourun":36}},{"path":"src/main/java/seedu/badMaths/TrigoGraph.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"public class TrigoGraph {","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"    private String trigoEqn;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"    public TrigoGraph(String trigoEqn) {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"        this.trigoEqn \u003d trigoEqn;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"    public void startGraphAnalysis() {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"        splitAmplitude();","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"    public void splitAmplitude() {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"            Double amplitude;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"            String[] amplitudeAndEqn \u003d trigoEqn.split(\"\\\\*\", 2);","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"            amplitude \u003d Double.parseDouble(amplitudeAndEqn[0]);","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"            System.out.println(\"This is the amplitude: \" + amplitude);","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"            splitTrigoAndVerticalShift(amplitudeAndEqn[1]);","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"            System.out.println(\"Please enter the format as required: \");","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"    public void splitTrigoAndVerticalShift(String trigoAndVerticalShift) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"            String[] TrigoAndVerticalShift \u003d trigoAndVerticalShift.split(\"\\\\)\", 2);","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"            if (TrigoAndVerticalShift[1].trim().contains(\"+\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"                double positiveVShift \u003d Double.parseDouble(TrigoAndVerticalShift[1].substring(1)); //+5","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"                System.out.println(\"This is the vertical shift: \" + positiveVShift);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"            } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"                double negativeShift \u003d Double.parseDouble(TrigoAndVerticalShift[1]);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"                System.out.println(\"This is the vertical shift: \" + negativeShift);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"            splitTrigoIntoPhasors(TrigoAndVerticalShift[0]);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"            System.out.println(\"Please enter the format as required: \");","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"    public void splitTrigoIntoPhasors(String trigo) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"        int startPosOfPhase \u003d trigo.indexOf(\"(\") + 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"        int endPosOfPhase \u003d trigo.length();","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"        String phase \u003d trigo.substring(startPosOfPhase, endPosOfPhase);","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"        splitPhasorsIntoFreq(phase);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"    public void splitPhasorsIntoFreq(String phasors) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"        String[] freqAndShift \u003d phasors.split(\"\\\\+\", 2);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"        String freqWithX \u003d freqAndShift[0];","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"        String[] freqComponents \u003d freqWithX.split(\"\\\\*\", 3);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"        Double freq;","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"        if (trigoEqn.contains(\"pi\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"            freq \u003d Double.parseDouble(freqComponents[0]) / 2;","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"            freq \u003d Double.parseDouble(freqComponents[0]) / (2 * Math.PI);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"The Freq (HZ) is: \" + freq);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"The phase shift is: \" + freqAndShift[1]);","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"khooyourun":5,"YC-Michael":59}},{"path":"src/test/java/seedu/badMaths/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"khooyourun":1,"-":11}},{"path":"src/test/java/seedu/badMaths/TrigoGraphTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"class TrigoGraphTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"    void splitAmplitude_oneSplit_expectTwoParts() {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"        String equation \u003d \"2*sin(2*pi*x+1)+3\";","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"        String separator \u003d \"\\\\*\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"        String [] amplitudeAndEqn \u003d equation.split(\"\\\\*\",2);","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(2,amplitudeAndEqn.length);","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"    void splitAmplitude_noAmplitude_expectException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"        String equation \u003d \"sin(2*pi*x+1)+3\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"        String separator \u003d \"\\\\*\";","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"        String[] amplitudeAndEqn \u003d equation.split(\"\\\\*\", 2);","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"        assertThrows(NumberFormatException.class,()-\u003eDouble.parseDouble(amplitudeAndEqn[0]));","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"    void splitTrigoAndVerticalShift_doubleDigitsVShift_expectSameOutput() {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"        String equation_Pos \u003d \"sin(2*pi*x+1)+36\";","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"        double answer \u003d 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"        String[] TrigoAndVerticalShift \u003d equation_Pos.split(\"\\\\)\", 2);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"        if (TrigoAndVerticalShift[1].trim().contains(\"+\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"            answer \u003d Double.parseDouble(TrigoAndVerticalShift[1].substring(1).trim());","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(36,answer);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"    void splitTrigoIntoPhasors_startEndPosPhase_expectPhase() {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"        String trigo \u003d \"sin(2*pi*x+1\";","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"        int startPosOfPhase \u003d trigo.indexOf(\"(\") + 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"        int endPosOfPhase \u003d trigo.length();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"        String phase \u003d trigo.substring(startPosOfPhase,endPosOfPhase);","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"        assertEquals(\"2*pi*x+1\", phase);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"    void splitPhasorsIntoFreq_phasors_expectFreqAndShift() {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"        String phasors \u003d \"2*pi*x+1\";","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"        String [] freqAndShift \u003d phasors.split(\"\\\\+\",2);","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"        String freqWithX \u003d freqAndShift[0];","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"        String [] freqComponents \u003d freqWithX.split(\"\\\\*\",3);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"        Double freq;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"        if(phasors.contains(\"pi\")){","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"            freq \u003d Double.parseDouble(freqComponents[0])/2;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"        }else{","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"            freq \u003d Double.parseDouble(freqComponents[0])/(2*Math.PI);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"        assertEquals(1.0, freq);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"        assertEquals(\"1\", freqAndShift[1]);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"khooyourun":23,"YC-Michael":35}}]
