[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"    testImplementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"        options {","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"            jvmArgs \u0027-Djava.awt.headless\u003dtrue\u0027","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"    mainClass \u003d \"seedu.badmaths.BadMaths\"","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"    archiveBaseName \u003d \"badmaths\"","lastModifiedDate":"2023-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"run {","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"ZiqiuZeng"},"content":"jar {","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"    manifest {","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"        attributes \u0027Main-Class\u0027: \u0027seedu.badmaths.BadMaths\u0027","lastModifiedDate":"2023-04-01"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"    duplicatesStrategy \u003d \u0027exclude\u0027 // or \u0027fail\u0027, \u0027warn\u0027, \u0027preserve\u0027","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"    from sourceSets.main.output","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"ZiqiuZeng"},"content":"    from(sourceSets.main.resources) {","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"        include \u0027**/*.txt\u0027","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"khooyourun":4,"-":44,"ZiqiuZeng":12,"YC-Michael":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |        Name        | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"--------|:------------------:|:--------------:|:---------:","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wilson Lee Jun Wei | [Github](https://github.com/WilsonLee2000) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Khoo You Run    |       [Github](https://github.com/)        | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Hui Yu Cong     |       [Github](https://github.com/)        | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |      John Roe      |       [Github](https://github.com/)        | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |     Zeng Ziqiu     | [Github](https://github.com/ZiqiuZeng) | [Portfolio](docs/team/AboutUs.md)","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Seungjun Lee    | [Github](https://github.com/0nandon) | [Portfolio](docs/team/AboutUs.md)","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"0nandon":2,"khooyourun":1,"-":4,"ZiqiuZeng":1,"WilsonLee2000":1,"YC-Michael":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"This developer guide will help you to get started with our product, BadMaths! ","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"BadMaths is an integrated study tool that performs Mathematical Operations and contains","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"various features for note-taking.","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"## Table of Contents","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"* [Developer Guide](#developer-guide)","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"  * [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"  * [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"  * [Design \u0026 implementation](#design--implementation)","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    * [Handling Of User Input](#handling-of-user-input)","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"    * [Solving Quadratic Equations](#solving-quadratic-equations)","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    * [Notes](#notes)","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    * [Storage](#storage)","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    * [Store class:](#store-class-)","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"    * [List class:](#list-class-)","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    * [Delete class:](#delete-class-)","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"    * [CommandHistory class:](#commandhistory-class-)","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    * [Command class:](#command-class-)","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"    * [Ui class:](#ui-class-)","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    * [NotePriority class:](#notepriority-class-)","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"    * [Help](#help)","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    * [Graph](#graph)","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"    * [Matrix](#matrix)","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"  * [Product Scope](#product-scope)","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"  * [User Stories](#user-stories)","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"  * [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"  * [Glossary](#glossary)","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"  * [Instructions for manual testing](#instructions-for-manual-testing)","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"## Design \u0026 implementation","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"The Architecture Diagram below showcases the high level design of BadMaths:","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"\u003csummary\u003eArchitecture Diagram\u003c/summary\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"\u003cdiv markdown\u003d\"1\"\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"![img.png](Architecture_diagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"### Handling Of User Input","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"\u003csummary\u003eClass Diagram for handling of User Input\u003c/summary\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"\u003cdiv markdown\u003d\"1\"\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"![img_1.png](ClassDiagrams/BadMaths_class_diagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"The BadMaths class first reads the User\u0027s input and separates it into 2 parts, `command` and `toDo`. It does this by calling","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"the Parser class via `getCommand()` and `getToDo()`. BadMaths then checks whether `command` is valid using `commandChecker()`.","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"khooyourun"},"content":"If it is not valid, the Ui class would be called upon to notify the User as such. If it is valid, `command` and `toDo` would be","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"khooyourun"},"content":"passed into the Command class and the method `executeCommand()` would run the corresponding code.","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"khooyourun"},"content":"### Solving Quadratic Equations","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"khooyourun"},"content":"The Quadratic equation solver allows user to find the value of `x` in a simple quadratic equation.","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"khooyourun"},"content":"The function is started when `solveQuadratic()` is called in the Command class.","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"khooyourun"},"content":"Class Diagram:","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"khooyourun"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"khooyourun"},"content":"\u003csummary\u003eClass Diagram for Quadratic\u003c/summary\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":76,"author":{"gitId":"khooyourun"},"content":"\u003cdiv markdown\u003d\"1\"\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"khooyourun"},"content":"![img.png](ClassDiagrams/Quadratic_class_diagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"khooyourun"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"khooyourun"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":82,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":83,"author":{"gitId":"khooyourun"},"content":"Below is an  example of how it would be called.","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"khooyourun"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"khooyourun"},"content":"Quadratic 2x^2 + 3x + 1","lastModifiedDate":"2023-04-09"},{"lineNumber":86,"author":{"gitId":"khooyourun"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"khooyourun"},"content":"Step 1. Parser class would split the user input into 2 parts, command and toDo. Command would be `Quadratic`,","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"khooyourun"},"content":"thus `executeCommand` in the Command class would trigger `quadraticSolver`. `toDo` would be `2x^2 + 3x + 1`.","lastModifiedDate":"2023-04-01"},{"lineNumber":89,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"khooyourun"},"content":"Step 2. The general formula of quadratic equations is `ax^2 + bx + c`, thus `findA`, `findB`, `findC` would be called from QuadraticParser","lastModifiedDate":"2023-04-05"},{"lineNumber":91,"author":{"gitId":"khooyourun"},"content":"which extends from Quadratic. These methods would identify a, b and c from toDo.","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"khooyourun"},"content":"- `findA` takes in `toDo` and uses substring function to isolate a from the rest of the equation. It would thus return a as","lastModifiedDate":"2023-04-01"},{"lineNumber":93,"author":{"gitId":"khooyourun"},"content":"a `Double` data type.","lastModifiedDate":"2023-04-01"},{"lineNumber":94,"author":{"gitId":"khooyourun"},"content":"- `findB` takes in `toDo` and calls `findSignOfB` and `findStringOfB` to identify the sign (+/-) and the number B as a `string`","lastModifiedDate":"2023-04-05"},{"lineNumber":95,"author":{"gitId":"khooyourun"},"content":"This is done using substrings based on the index of the characters. `findB` then converts it into a `double` data type.","lastModifiedDate":"2023-04-05"},{"lineNumber":96,"author":{"gitId":"khooyourun"},"content":"- `findC` takes in `toDo` and calls `findSignOfC` and `findStringOfC` to identify the sign (+/-) and the number C as a `string`","lastModifiedDate":"2023-04-05"},{"lineNumber":97,"author":{"gitId":"khooyourun"},"content":"This is done using substrings based on the index of the characters, `findC` then converts it into a `double` data type.","lastModifiedDate":"2023-04-05"},{"lineNumber":98,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"khooyourun"},"content":"Step 3. To solve the quadratic equation, `quadraticFormula(a,b,c)` is called with a, b and c as parameters. ","lastModifiedDate":"2023-04-01"},{"lineNumber":100,"author":{"gitId":"khooyourun"},"content":"- The parameters are put into the equation `x \u003d (-b±√(b²-4ac))/(2a)`. The output would be an ArrayList of Doubles that contains 2 values which ","lastModifiedDate":"2023-04-01"},{"lineNumber":101,"author":{"gitId":"khooyourun"},"content":"are the possible values of x. ","lastModifiedDate":"2023-04-01"},{"lineNumber":102,"author":{"gitId":"khooyourun"},"content":"- There is a possibility that the x values are imaginary, in this case, the ArrayList would simply store them as Nan values.","lastModifiedDate":"2023-04-01"},{"lineNumber":103,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":104,"author":{"gitId":"khooyourun"},"content":"Step 4. minMaxPointFinder() is called to calculate the coordinates of the minimum or maximum point of the quadratic equation.","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"khooyourun"},"content":"- The x-coordinate of the vertex is equal to `-b/2a`.","lastModifiedDate":"2023-04-05"},{"lineNumber":106,"author":{"gitId":"khooyourun"},"content":"- The y-coordinate of the vertex can thus be found by substituting the x-coordinate value into the equation given by `toDo`","lastModifiedDate":"2023-04-05"},{"lineNumber":107,"author":{"gitId":"khooyourun"},"content":"- The method then returns a string displaying the coordinates in the form of `(x,y)`.","lastModifiedDate":"2023-04-05"},{"lineNumber":108,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":109,"author":{"gitId":"khooyourun"},"content":"Step 5. Then, `printAnswer` is called which would call upon the `UI` class\u0027s method: `printQuadraticAnswer(ArrayList\u003cDouble\u003e)`.","lastModifiedDate":"2023-04-05"},{"lineNumber":110,"author":{"gitId":"khooyourun"},"content":"- If the ArrayList contains NaN values, it would print `x is imaginary.`","lastModifiedDate":"2023-04-01"},{"lineNumber":111,"author":{"gitId":"khooyourun"},"content":"- If the ArrayList contains Double data types, then it would print `x1 \u003d 1st Answer` and `x2 \u003d 2nd Answer`.","lastModifiedDate":"2023-04-01"},{"lineNumber":112,"author":{"gitId":"khooyourun"},"content":"- If `a` is negative which means there is a maximum point, the appropriate message would be printed. Else it would print the message for","lastModifiedDate":"2023-04-05"},{"lineNumber":113,"author":{"gitId":"khooyourun"},"content":"minimum point.","lastModifiedDate":"2023-04-05"},{"lineNumber":114,"author":{"gitId":"khooyourun"},"content":"- The coordinates of the vertex would then be printed.","lastModifiedDate":"2023-04-05"},{"lineNumber":115,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"khooyourun"},"content":"Step 5. If any exceptions are caught in the above steps, `printQuadraticFormulaError` would be called from UI to show an error message","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"khooyourun"},"content":"to the user.","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"WilsonLee2000"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"WilsonLee2000"},"content":"\u003csummary\u003eSequence Diagram for solving Quadratic Equations\u003c/summary\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"WilsonLee2000"},"content":"\u003cdiv markdown\u003d\"1\"\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":122,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"YC-Michael"},"content":"![img_3.png](SequenceDiagrams/img_3.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"WilsonLee2000"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"WilsonLee2000"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":128,"author":{"gitId":"WilsonLee2000"},"content":"### Notes","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"WilsonLee2000"},"content":"The Notes feature allows users to input their notes for note-taking purposes","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"WilsonLee2000"},"content":"and to keep track of their notes through various functionalities provided by BadMaths.","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"WilsonLee2000"},"content":"This feature is implemented by storing the notes input from users into ","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"WilsonLee2000"},"content":"the `data/notes.txt` file, and users are able to keep track","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"WilsonLee2000"},"content":"of their notes by reading the content from the `data/notes.txt file/`.","lastModifiedDate":"2023-04-07"},{"lineNumber":135,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"ZiqiuZeng"},"content":"#### Note Class:","lastModifiedDate":"2023-04-05"},{"lineNumber":137,"author":{"gitId":"WilsonLee2000"},"content":"The Note class represents a note item, which includes information about the note, ","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"WilsonLee2000"},"content":"its priority level, its review count, and whether the note has been marked as completed or not.","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":140,"author":{"gitId":"ZiqiuZeng"},"content":"##### Class Structure:","lastModifiedDate":"2023-04-05"},{"lineNumber":141,"author":{"gitId":"ZiqiuZeng"},"content":"The Note class is defined with the following instance variables:","lastModifiedDate":"2023-04-05"},{"lineNumber":142,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":143,"author":{"gitId":"ZiqiuZeng"},"content":"`text` (String): the note information","lastModifiedDate":"2023-04-05"},{"lineNumber":144,"author":{"gitId":"WilsonLee2000"},"content":"`reviewCount` (int): the number of times the note has been reviewed","lastModifiedDate":"2023-04-07"},{"lineNumber":145,"author":{"gitId":"WilsonLee2000"},"content":"`isDone` (boolean): whether the note is marked as complete or incomplete","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"WilsonLee2000"},"content":"`priority` (NotePriority.Priority): the priority level of the note","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":148,"author":{"gitId":"ZiqiuZeng"},"content":"The class contains the following methods:","lastModifiedDate":"2023-04-05"},{"lineNumber":149,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":150,"author":{"gitId":"ZiqiuZeng"},"content":"`Note`: constructor that initializes the instance variables with the given parameters","lastModifiedDate":"2023-04-05"},{"lineNumber":151,"author":{"gitId":"ZiqiuZeng"},"content":"`getText`: returns the note\u0027s text","lastModifiedDate":"2023-04-05"},{"lineNumber":152,"author":{"gitId":"ZiqiuZeng"},"content":"`setText`: sets the note\u0027s text to the given value","lastModifiedDate":"2023-04-05"},{"lineNumber":153,"author":{"gitId":"ZiqiuZeng"},"content":"`getReviewCount`: returns the number of times the note has been reviewed","lastModifiedDate":"2023-04-05"},{"lineNumber":154,"author":{"gitId":"ZiqiuZeng"},"content":"`incrementReviewCount`: increments the review count by 1","lastModifiedDate":"2023-04-05"},{"lineNumber":155,"author":{"gitId":"ZiqiuZeng"},"content":"`getIsDone`: returns whether the note is marked as done or not","lastModifiedDate":"2023-04-05"},{"lineNumber":156,"author":{"gitId":"ZiqiuZeng"},"content":"`getIsDoneIcon`: returns a string representation of the completion status (\"Y\" for done, \"N\" for not done)","lastModifiedDate":"2023-04-05"},{"lineNumber":157,"author":{"gitId":"ZiqiuZeng"},"content":"`markAsDone`: marks the note as done","lastModifiedDate":"2023-04-05"},{"lineNumber":158,"author":{"gitId":"ZiqiuZeng"},"content":"`markAsNotDone`: marks the note as not done","lastModifiedDate":"2023-04-05"},{"lineNumber":159,"author":{"gitId":"ZiqiuZeng"},"content":"`getPriority`: returns the priority of the note","lastModifiedDate":"2023-04-05"},{"lineNumber":160,"author":{"gitId":"ZiqiuZeng"},"content":"`setPriority`: sets the priority of the note to the given value","lastModifiedDate":"2023-04-05"},{"lineNumber":161,"author":{"gitId":"ZiqiuZeng"},"content":"`setReviewCount`: sets the review count to the given value","lastModifiedDate":"2023-04-05"},{"lineNumber":162,"author":{"gitId":"ZiqiuZeng"},"content":"`toString`: returns a string representation of the note in the format `[priority][completion status][review count]text`.","lastModifiedDate":"2023-04-05"},{"lineNumber":163,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":164,"author":{"gitId":"WilsonLee2000"},"content":"#### Notes Text:","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"WilsonLee2000"},"content":"The `notes.txt` file is a text file that contains the list of Notes stored by users using `BadMaths`.","lastModifiedDate":"2023-04-07"},{"lineNumber":166,"author":{"gitId":"WilsonLee2000"},"content":"It is located in the `data` directory of the project.","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"WilsonLee2000"},"content":"The purpose of this file is to allow users to keep a list of their notes stored ","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"WilsonLee2000"},"content":"and to display their notes item stored as and when is needed for their educational purposes.","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"ZiqiuZeng"},"content":"##### Format:","lastModifiedDate":"2023-04-05"},{"lineNumber":171,"author":{"gitId":"ZiqiuZeng"},"content":"The `notes.txt` file format consists of four fields separated by a tab character `\\t`: priority, status, count, and text. ","lastModifiedDate":"2023-04-05"},{"lineNumber":172,"author":{"gitId":"ZiqiuZeng"},"content":"These fields provide information about each note in the file.","lastModifiedDate":"2023-04-05"},{"lineNumber":173,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":174,"author":{"gitId":"ZiqiuZeng"},"content":"###### Priority:","lastModifiedDate":"2023-04-05"},{"lineNumber":175,"author":{"gitId":"ZiqiuZeng"},"content":"The priority field indicates the importance level of a certain note. It can have one of the three values: `HIGH`, `MEDIUM`, or `LOW`. ","lastModifiedDate":"2023-04-05"},{"lineNumber":176,"author":{"gitId":"ZiqiuZeng"},"content":"This field helps users quickly identify notes that require more attention.","lastModifiedDate":"2023-04-05"},{"lineNumber":177,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":178,"author":{"gitId":"ZiqiuZeng"},"content":"###### Status:","lastModifiedDate":"2023-04-05"},{"lineNumber":179,"author":{"gitId":"ZiqiuZeng"},"content":"The status field indicates the current state of the note. It can have one of two values: `done`, denoted by `Y`, or `pending`, denoted by `N`.","lastModifiedDate":"2023-04-05"},{"lineNumber":180,"author":{"gitId":"ZiqiuZeng"},"content":"If a note has been completed, the status field should be set to `done`. If a note is still in progress, the status field should be set to `pending`.","lastModifiedDate":"2023-04-05"},{"lineNumber":181,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":182,"author":{"gitId":"ZiqiuZeng"},"content":"###### Count:","lastModifiedDate":"2023-04-05"},{"lineNumber":183,"author":{"gitId":"ZiqiuZeng"},"content":"The count field indicates the number of times the note has been reviewed. Each time a note is reviewed, the count field is incremented by one. ","lastModifiedDate":"2023-04-05"},{"lineNumber":184,"author":{"gitId":"ZiqiuZeng"},"content":"This allows the user to keep track of how many times a note has been reviewed.","lastModifiedDate":"2023-04-05"},{"lineNumber":185,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":186,"author":{"gitId":"ZiqiuZeng"},"content":"###### Text:","lastModifiedDate":"2023-04-05"},{"lineNumber":187,"author":{"gitId":"ZiqiuZeng"},"content":"The text field contains the actual content of the note. This can be any text-based information provide by the user.","lastModifiedDate":"2023-04-05"},{"lineNumber":188,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":189,"author":{"gitId":"WilsonLee2000"},"content":"###### Example of information displayed in `notes.txt`:","lastModifiedDate":"2023-04-07"},{"lineNumber":190,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":191,"author":{"gitId":"ZiqiuZeng"},"content":"````","lastModifiedDate":"2023-04-05"},{"lineNumber":192,"author":{"gitId":"WilsonLee2000"},"content":"HIGH  Y  1  Note_Item_1","lastModifiedDate":"2023-04-07"},{"lineNumber":193,"author":{"gitId":"WilsonLee2000"},"content":"MEDIUM   N  2  Note_Item_2","lastModifiedDate":"2023-04-07"},{"lineNumber":194,"author":{"gitId":"WilsonLee2000"},"content":"LOW   Y  3  Note_Item_3","lastModifiedDate":"2023-04-07"},{"lineNumber":195,"author":{"gitId":"ZiqiuZeng"},"content":"````","lastModifiedDate":"2023-04-05"},{"lineNumber":196,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":197,"author":{"gitId":"ZiqiuZeng"},"content":"### Storage","lastModifiedDate":"2023-04-05"},{"lineNumber":198,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":199,"author":{"gitId":"ZiqiuZeng"},"content":"#### NotesFileParser Class","lastModifiedDate":"2023-04-05"},{"lineNumber":200,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":201,"author":{"gitId":"ZiqiuZeng"},"content":"The `NotesFileParser` class is responsible for loading notes from a file and returning them as an `ArrayList` of `Note` objects. ","lastModifiedDate":"2023-04-05"},{"lineNumber":202,"author":{"gitId":"ZiqiuZeng"},"content":"It contains a single public static method `loadFile()` which takes the file path as a parameter and returns an `ArrayList\u003cNote\u003e`.","lastModifiedDate":"2023-04-05"},{"lineNumber":203,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":204,"author":{"gitId":"ZiqiuZeng"},"content":"Step 1. The method starts by creating a new `ArrayList` of `Note` objects named `notes` that will contain the notes read from the file.","lastModifiedDate":"2023-04-05"},{"lineNumber":205,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":206,"author":{"gitId":"ZiqiuZeng"},"content":"Step 2. The `loadFile()` method then opens the file specified by the path parameter using a `Scanner` object and reads each ","lastModifiedDate":"2023-04-05"},{"lineNumber":207,"author":{"gitId":"ZiqiuZeng"},"content":"line of the file in a loop using the `hasNextLine` and `nextLine` methods of the `Scanner` object.","lastModifiedDate":"2023-04-05"},{"lineNumber":208,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":209,"author":{"gitId":"ZiqiuZeng"},"content":"Step 3. For each line of the file, the method splits the line into four parts using the `split` method with a tab `\\t` as the separator. ","lastModifiedDate":"2023-04-05"},{"lineNumber":210,"author":{"gitId":"ZiqiuZeng"},"content":"This creates an array of four elements, each containing one part of the line. If the length of the resulting array is not `4`, ","lastModifiedDate":"2023-04-05"},{"lineNumber":211,"author":{"gitId":"ZiqiuZeng"},"content":"the method throws an `InvalidFormatException`.","lastModifiedDate":"2023-04-05"},{"lineNumber":212,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":213,"author":{"gitId":"ZiqiuZeng"},"content":"Step 4. If the length of the resulting array is `4`, the method continues to parse the four parts of the line.","lastModifiedDate":"2023-04-05"},{"lineNumber":214,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":215,"author":{"gitId":"ZiqiuZeng"},"content":"a. The first part represents the `priority` of the note, and it is read as a string. The method checks if the string is one of the valid priority values (`LOW`, `MEDIUM`, `HIGH`), ","lastModifiedDate":"2023-04-05"},{"lineNumber":216,"author":{"gitId":"ZiqiuZeng"},"content":"and if not, it throws an `InvalidFormatException`. If the string is valid, the method converts it to a `NotePriority.Priority` enum value.","lastModifiedDate":"2023-04-05"},{"lineNumber":217,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":218,"author":{"gitId":"ZiqiuZeng"},"content":"b. The second part represents the `status` of the note (whether it is done or not), and it is read as a string. The method checks if the string is one of the valid status values (`Y`, `N`), ","lastModifiedDate":"2023-04-05"},{"lineNumber":219,"author":{"gitId":"ZiqiuZeng"},"content":"and if not, it throws an `InvalidFormatException`. If the string is valid, the method converts it to a `boolean` value (true if the string is `Y`, false otherwise).","lastModifiedDate":"2023-04-05"},{"lineNumber":220,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":221,"author":{"gitId":"ZiqiuZeng"},"content":"c. The third part represents the `review count` of the note, and it is read as a string. The method tries to parse the string as an integer using the `Integer.parseInt` method. ","lastModifiedDate":"2023-04-05"},{"lineNumber":222,"author":{"gitId":"ZiqiuZeng"},"content":"If the string cannot be parsed as an integer, the method throws an `InvalidFormatException`. If the string is valid, the method stores the integer value in a variable named `reviewCount`.","lastModifiedDate":"2023-04-05"},{"lineNumber":223,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":224,"author":{"gitId":"ZiqiuZeng"},"content":"d. The fourth part represents the `text` of the note, and it is read as a string.","lastModifiedDate":"2023-04-05"},{"lineNumber":225,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":226,"author":{"gitId":"ZiqiuZeng"},"content":"Step 5. If the four parts of the line are valid, the method creates a new `Note` object with `text` and `priority`, ","lastModifiedDate":"2023-04-05"},{"lineNumber":227,"author":{"gitId":"ZiqiuZeng"},"content":"updates its `status` and `review count` respectively with parsed values, and adds the `notes` ArrayList.","lastModifiedDate":"2023-04-05"},{"lineNumber":228,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":229,"author":{"gitId":"ZiqiuZeng"},"content":"Step 6. After all lines of the file have been processed successfully, the method returns the `notes` ArrayList containing all the notes read from the specific file.","lastModifiedDate":"2023-04-05"},{"lineNumber":230,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":231,"author":{"gitId":"ZiqiuZeng"},"content":"Step 7. If `InvalidFormatException` is caught during the reading and parsing process, the method handles it by enquiring the user whether to reset the file or not (`y` or `n`). ","lastModifiedDate":"2023-04-05"},{"lineNumber":232,"author":{"gitId":"ZiqiuZeng"},"content":"If the user chooses to reset the file (`y`), the method clears the file contents using a `PrintWriter` object and prints a success message. ","lastModifiedDate":"2023-04-05"},{"lineNumber":233,"author":{"gitId":"ZiqiuZeng"},"content":"If the user chooses not to reset the file (`n`), the method prints a message informing the user that the program will exit in 10 seconds and schedules a timer task to exit the program after the timeout. ","lastModifiedDate":"2023-04-05"},{"lineNumber":234,"author":{"gitId":"ZiqiuZeng"},"content":"If the user enters an invalid input, the method prompts the user again until a valid input is entered.","lastModifiedDate":"2023-04-05"},{"lineNumber":235,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":236,"author":{"gitId":"ZiqiuZeng"},"content":"#### NotesFileWriter Class","lastModifiedDate":"2023-04-05"},{"lineNumber":237,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":238,"author":{"gitId":"ZiqiuZeng"},"content":"The `NotesFileWriter` contains a single public static method called `saveFile`, which takes in two arguments: ","lastModifiedDate":"2023-04-05"},{"lineNumber":239,"author":{"gitId":"ZiqiuZeng"},"content":"a `String` representing the path to the file to be written, and an `ArrayList` of `Note` objects that will be written to the file.","lastModifiedDate":"2023-04-05"},{"lineNumber":240,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":241,"author":{"gitId":"ZiqiuZeng"},"content":"Step 1. The method starts by creating a `File` object representing the file to be written based on the provided path.","lastModifiedDate":"2023-04-05"},{"lineNumber":242,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":243,"author":{"gitId":"ZiqiuZeng"},"content":"Step 2. The method check whether the file exists or not. If the file does not exist, the method creates the file and its parent directory when necessary.","lastModifiedDate":"2023-04-05"},{"lineNumber":244,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":245,"author":{"gitId":"ZiqiuZeng"},"content":"Step 3. The method creates a `FileWriter` object and passes the file path to it.","lastModifiedDate":"2023-04-05"},{"lineNumber":246,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":247,"author":{"gitId":"ZiqiuZeng"},"content":"Step 4. The `fileContent` method of `NotesFileContentManager` class is called. ","lastModifiedDate":"2023-04-05"},{"lineNumber":248,"author":{"gitId":"ZiqiuZeng"},"content":"It takes in the `ArrayList` of `Note` objects and returns a `String` representing the contents need to be written to the file. ","lastModifiedDate":"2023-04-05"},{"lineNumber":249,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":250,"author":{"gitId":"ZiqiuZeng"},"content":"Step 5. The `String` returned from `fileContent` is then written to the file using the `write` method of the `FileWriter` object.","lastModifiedDate":"2023-04-05"},{"lineNumber":251,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":252,"author":{"gitId":"ZiqiuZeng"},"content":"Step 6. The `FileWriter` is closed using `close` method.","lastModifiedDate":"2023-04-05"},{"lineNumber":253,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":254,"author":{"gitId":"ZiqiuZeng"},"content":"#### NotesFileContentManager Class","lastModifiedDate":"2023-04-05"},{"lineNumber":255,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":256,"author":{"gitId":"ZiqiuZeng"},"content":"The `NotesFileContentManager` class contains a static method `fileContent` that takes an `ArrayList` of `Note` objects and returns a formatted string that can be written to a file.","lastModifiedDate":"2023-04-05"},{"lineNumber":257,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":258,"author":{"gitId":"ZiqiuZeng"},"content":"Step 1. The method starts by creating a `StringBuilder` object named `content` to accumulate the formatted string.","lastModifiedDate":"2023-04-05"},{"lineNumber":259,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":260,"author":{"gitId":"ZiqiuZeng"},"content":"Step 2. The method then loops through each `Note` object in the input `ArrayList` using a for-each loop:","lastModifiedDate":"2023-04-05"},{"lineNumber":261,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":262,"author":{"gitId":"ZiqiuZeng"},"content":"Step 3. For each `Note` object, the method extracts the `priority`, `status`, `review count`, and `text`, ","lastModifiedDate":"2023-04-05"},{"lineNumber":263,"author":{"gitId":"ZiqiuZeng"},"content":"and appends them to the content string in the expected format: `priority` `\\t` `stauts` `\\t` `review count` `\\t` `text`","lastModifiedDate":"2023-04-05"},{"lineNumber":264,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":265,"author":{"gitId":"ZiqiuZeng"},"content":"Step 4. The `StringBuilder` object is converted to a string using the `toString` method and returned by the `f`ileContent` method:","lastModifiedDate":"2023-04-05"},{"lineNumber":266,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":267,"author":{"gitId":"ZiqiuZeng"},"content":"#### NotesFileCleaner Class","lastModifiedDate":"2023-04-05"},{"lineNumber":268,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":269,"author":{"gitId":"ZiqiuZeng"},"content":"The `NotesFileWriter` class contains a single public static method called `clearFile`. ","lastModifiedDate":"2023-04-05"},{"lineNumber":270,"author":{"gitId":"ZiqiuZeng"},"content":"Its purpose is to clear the content of a file located at a specified path. ","lastModifiedDate":"2023-04-05"},{"lineNumber":271,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":272,"author":{"gitId":"ZiqiuZeng"},"content":"Step 1. The method takes a string parameter that represents the path to the file that needs to be cleared.","lastModifiedDate":"2023-04-05"},{"lineNumber":273,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":274,"author":{"gitId":"ZiqiuZeng"},"content":"Step 2. A new `FileWriter` object is created using the specified path.","lastModifiedDate":"2023-04-05"},{"lineNumber":275,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":276,"author":{"gitId":"ZiqiuZeng"},"content":"Step 3. The `write` method of the `FileWriter` object is called with an empty string as the argument. This clears the content of the file.","lastModifiedDate":"2023-04-05"},{"lineNumber":277,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":278,"author":{"gitId":"WilsonLee2000"},"content":"### Store class:","lastModifiedDate":"2023-04-07"},{"lineNumber":279,"author":{"gitId":"WilsonLee2000"},"content":"The `Store` class takes in inputs from users and store these notes into the","lastModifiedDate":"2023-04-07"},{"lineNumber":280,"author":{"gitId":"WilsonLee2000"},"content":"`notes.txt` file. It consists of a static boolean method that detects invalid `todo` input entered by users","lastModifiedDate":"2023-04-07"},{"lineNumber":281,"author":{"gitId":"WilsonLee2000"},"content":"and a public method that stores notes to the notes list.","lastModifiedDate":"2023-04-07"},{"lineNumber":282,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":283,"author":{"gitId":"WilsonLee2000"},"content":"Step 1. The `Store` class takes in two variables `notes` and `todo`, and constructs a new `Store` instance","lastModifiedDate":"2023-04-07"},{"lineNumber":284,"author":{"gitId":"WilsonLee2000"},"content":"using the two variables.","lastModifiedDate":"2023-04-07"},{"lineNumber":285,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":286,"author":{"gitId":"WilsonLee2000"},"content":"Step 2. The `isInvalidTodo` static boolean method will check for the validity of the `todo` string input.","lastModifiedDate":"2023-04-07"},{"lineNumber":287,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":288,"author":{"gitId":"WilsonLee2000"},"content":"Step 3. The `storeNotes` public method will then store the note item input by users into the notes list.","lastModifiedDate":"2023-04-07"},{"lineNumber":289,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":290,"author":{"gitId":"WilsonLee2000"},"content":"### List class:","lastModifiedDate":"2023-04-07"},{"lineNumber":291,"author":{"gitId":"WilsonLee2000"},"content":"The `List` class takes in inputs from users and list either all the notes stored in notes list or specific notes","lastModifiedDate":"2023-04-07"},{"lineNumber":292,"author":{"gitId":"WilsonLee2000"},"content":"based on the index that users have input to BadMaths.","lastModifiedDate":"2023-04-07"},{"lineNumber":293,"author":{"gitId":"WilsonLee2000"},"content":"It consists of a few public boolean method that detects invalid `todo` input entered by users,","lastModifiedDate":"2023-04-07"},{"lineNumber":294,"author":{"gitId":"WilsonLee2000"},"content":"detects if `todo` provided is not an integer, and detects if `todo` provided is an invalid index.","lastModifiedDate":"2023-04-07"},{"lineNumber":295,"author":{"gitId":"WilsonLee2000"},"content":"It also consists of a public method that list notes stored in notes list.","lastModifiedDate":"2023-04-07"},{"lineNumber":296,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":297,"author":{"gitId":"WilsonLee2000"},"content":"Step 1. The `List` class takes in two variables `notes` and `todo`, and constructs a new `List` instance","lastModifiedDate":"2023-04-07"},{"lineNumber":298,"author":{"gitId":"WilsonLee2000"},"content":"using the two variables.","lastModifiedDate":"2023-04-07"},{"lineNumber":299,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":300,"author":{"gitId":"WilsonLee2000"},"content":"Step 2. The `isInvalidTodo`, `isInvalidIndex` and `isAnInt` boolean method will check for the validity of the `todo` string input.","lastModifiedDate":"2023-04-07"},{"lineNumber":301,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":302,"author":{"gitId":"WilsonLee2000"},"content":"Step 3. The `listNotes` public method will then list either all the notes stored in notes list or specific notes","lastModifiedDate":"2023-04-07"},{"lineNumber":303,"author":{"gitId":"WilsonLee2000"},"content":"based on the index that users have input to BadMaths.","lastModifiedDate":"2023-04-07"},{"lineNumber":304,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":305,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":306,"author":{"gitId":"WilsonLee2000"},"content":"### Delete class:","lastModifiedDate":"2023-04-07"},{"lineNumber":307,"author":{"gitId":"WilsonLee2000"},"content":"The `Delete` class takes in inputs from users and deletes the respective specific notes in the notes list","lastModifiedDate":"2023-04-07"},{"lineNumber":308,"author":{"gitId":"WilsonLee2000"},"content":"based on the index that users have input to BadMaths.","lastModifiedDate":"2023-04-07"},{"lineNumber":309,"author":{"gitId":"WilsonLee2000"},"content":"It consists of two static boolean methods that detects whether `todo` provided by users","lastModifiedDate":"2023-04-07"},{"lineNumber":310,"author":{"gitId":"WilsonLee2000"},"content":"is not an integer, and detects whether `todo` provided is an invalid index.","lastModifiedDate":"2023-04-07"},{"lineNumber":311,"author":{"gitId":"WilsonLee2000"},"content":"It also consists of a public method that deletes notes stored in notes list.","lastModifiedDate":"2023-04-07"},{"lineNumber":312,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":313,"author":{"gitId":"WilsonLee2000"},"content":"Step 1. The `Delete` class takes in two variables `notes` and `todo`, and constructs a new `Delete`","lastModifiedDate":"2023-04-07"},{"lineNumber":314,"author":{"gitId":"WilsonLee2000"},"content":"instance using the two variables.","lastModifiedDate":"2023-04-07"},{"lineNumber":315,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":316,"author":{"gitId":"WilsonLee2000"},"content":"Step 2. The `isInvalidIndex` and `isAnInt` static boolean methods will check for the validity of the `todo` string input.","lastModifiedDate":"2023-04-07"},{"lineNumber":317,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":318,"author":{"gitId":"WilsonLee2000"},"content":"Step 3. The `deleteNotes` public method will then delete the respective specific notes in the notes list","lastModifiedDate":"2023-04-07"},{"lineNumber":319,"author":{"gitId":"WilsonLee2000"},"content":"based on the index that users have input to BadMaths.","lastModifiedDate":"2023-04-07"},{"lineNumber":320,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":321,"author":{"gitId":"WilsonLee2000"},"content":"### CommandHistory class:","lastModifiedDate":"2023-04-07"},{"lineNumber":322,"author":{"gitId":"WilsonLee2000"},"content":"The `CommandHistory` class stores a list of all inputs entered by users during the current programme run session.","lastModifiedDate":"2023-04-07"},{"lineNumber":323,"author":{"gitId":"WilsonLee2000"},"content":"It consists of only a two public class methods, `storeCommand` and `displayHistory`. ","lastModifiedDate":"2023-04-07"},{"lineNumber":324,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":325,"author":{"gitId":"WilsonLee2000"},"content":"Step 1. The `CommandHistory` class takes in only one variable `historyCommand`, ","lastModifiedDate":"2023-04-07"},{"lineNumber":326,"author":{"gitId":"WilsonLee2000"},"content":"and constructs a new `CommandHistory` instance using that one variable.","lastModifiedDate":"2023-04-07"},{"lineNumber":327,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":328,"author":{"gitId":"WilsonLee2000"},"content":"Step 2. The `storeCommand` public method adds the input command given by users into the ","lastModifiedDate":"2023-04-07"},{"lineNumber":329,"author":{"gitId":"WilsonLee2000"},"content":"`historyCommand` ArrayList.","lastModifiedDate":"2023-04-07"},{"lineNumber":330,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":331,"author":{"gitId":"WilsonLee2000"},"content":"Step 3. The `displayHistory` public method outputs a list of past commands entered by users during","lastModifiedDate":"2023-04-07"},{"lineNumber":332,"author":{"gitId":"WilsonLee2000"},"content":"the current programme run.","lastModifiedDate":"2023-04-07"},{"lineNumber":333,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":334,"author":{"gitId":"ZiqiuZeng"},"content":"### Command class:","lastModifiedDate":"2023-04-05"},{"lineNumber":335,"author":{"gitId":"WilsonLee2000"},"content":"The `Command` class takes in inputs from users","lastModifiedDate":"2023-04-08"},{"lineNumber":336,"author":{"gitId":"WilsonLee2000"},"content":"and executes relevant functions based on the inputs of the users. It consists of ","lastModifiedDate":"2023-04-08"},{"lineNumber":337,"author":{"gitId":"WilsonLee2000"},"content":"public methods such as `isInvalidTodo` and `executeCommand`.","lastModifiedDate":"2023-04-08"},{"lineNumber":338,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":339,"author":{"gitId":"WilsonLee2000"},"content":"Step 1. The `Command` class takes in a `command` and a `toDo` item and","lastModifiedDate":"2023-04-08"},{"lineNumber":340,"author":{"gitId":"WilsonLee2000"},"content":"based on both of these inputs, the `Command` class then identifies the relevant functions","lastModifiedDate":"2023-03-30"},{"lineNumber":341,"author":{"gitId":"WilsonLee2000"},"content":"to be executed.","lastModifiedDate":"2023-03-30"},{"lineNumber":342,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":343,"author":{"gitId":"WilsonLee2000"},"content":"Step 2. The `executeCommand` method does the executing of the relevant functions depending on the `command` that","lastModifiedDate":"2023-03-30"},{"lineNumber":344,"author":{"gitId":"WilsonLee2000"},"content":"was being input by users. There are several functionalities provided in the `executeCommand` for users, including but","lastModifiedDate":"2023-04-07"},{"lineNumber":345,"author":{"gitId":"WilsonLee2000"},"content":"not limited to the Storing and Deleting of Notes, Marking and Unmarking of notes items as completed or incomplete, and","lastModifiedDate":"2023-03-30"},{"lineNumber":346,"author":{"gitId":"WilsonLee2000"},"content":"the searching for notes through keywords or priorities of the notes. ","lastModifiedDate":"2023-04-07"},{"lineNumber":347,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":348,"author":{"gitId":"ZiqiuZeng"},"content":"### Ui class:","lastModifiedDate":"2023-04-05"},{"lineNumber":349,"author":{"gitId":"WilsonLee2000"},"content":"The `Ui` class consists of several static methods which are used","lastModifiedDate":"2023-04-07"},{"lineNumber":350,"author":{"gitId":"WilsonLee2000"},"content":"to print user interface messages when users are performing the","lastModifiedDate":"2023-04-07"},{"lineNumber":351,"author":{"gitId":"WilsonLee2000"},"content":"operations of BadMaths such as the notes and calculation operations and functionalities.","lastModifiedDate":"2023-03-30"},{"lineNumber":352,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":353,"author":{"gitId":"WilsonLee2000"},"content":"The methods that are in the Ui class are as follows:","lastModifiedDate":"2023-03-30"},{"lineNumber":354,"author":{"gitId":"WilsonLee2000"},"content":"`printIncorrectFormatEntered()`: prints out a warning message to alert the ","lastModifiedDate":"2023-03-30"},{"lineNumber":355,"author":{"gitId":"WilsonLee2000"},"content":"user that an incorrect command format for badMaths has been entered.","lastModifiedDate":"2023-03-30"},{"lineNumber":356,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":357,"author":{"gitId":"WilsonLee2000"},"content":"`printNegativeAmplitudeEntered()`: prints out a warning message to alert that the user has input a negative amplitude.","lastModifiedDate":"2023-03-30"},{"lineNumber":358,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":359,"author":{"gitId":"WilsonLee2000"},"content":"`printAmplitude(double amplitude)`: prints out the amplitude of the Mathematical function provided by the user.","lastModifiedDate":"2023-03-30"},{"lineNumber":360,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":361,"author":{"gitId":"WilsonLee2000"},"content":"`printPhase(double phase)`: prints out the phase angle of the Mathematical function provided by the user.","lastModifiedDate":"2023-03-30"},{"lineNumber":362,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":363,"author":{"gitId":"WilsonLee2000"},"content":"`printVerticalShift(double verticalShift)`: prints out the vertical shift of the Mathematical function provided by the user.","lastModifiedDate":"2023-03-30"},{"lineNumber":364,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":365,"author":{"gitId":"WilsonLee2000"},"content":"`printFrequency(Double freq)`: prints out the frequency of the Mathematical function provided by the user.","lastModifiedDate":"2023-03-30"},{"lineNumber":366,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":367,"author":{"gitId":"WilsonLee2000"},"content":"`printMark(String text)`: prints out a message indicating that a note has been marked as done by the user.","lastModifiedDate":"2023-03-30"},{"lineNumber":368,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":369,"author":{"gitId":"WilsonLee2000"},"content":"`printUnmark(String text)`: prints out a message indicating that a note has been unmarked as incomplete by the user.","lastModifiedDate":"2023-03-30"},{"lineNumber":370,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":371,"author":{"gitId":"WilsonLee2000"},"content":"`printAddNote(String text, int size)`: prints out a message indicating that a note has been added by the user","lastModifiedDate":"2023-03-30"},{"lineNumber":372,"author":{"gitId":"WilsonLee2000"},"content":"and displays to the user the total current number of notes stored in the list.","lastModifiedDate":"2023-03-30"},{"lineNumber":373,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":374,"author":{"gitId":"WilsonLee2000"},"content":"`printDelete(String text, int size)`: prints out a message indicating that a note has been removed by the user","lastModifiedDate":"2023-03-30"},{"lineNumber":375,"author":{"gitId":"WilsonLee2000"},"content":"and displays to the user the total current number of notes stored in the list.","lastModifiedDate":"2023-03-30"},{"lineNumber":376,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":377,"author":{"gitId":"WilsonLee2000"},"content":"`printNotes(ArrayList\u003cNote\u003e notes)`: prints out all the notes currently stored in the list by the user.","lastModifiedDate":"2023-03-30"},{"lineNumber":378,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":379,"author":{"gitId":"WilsonLee2000"},"content":"`printSpecificNote(int index, ArrayList\u003cNote\u003e notes)`: prints out a specific note in the list based on ","lastModifiedDate":"2023-03-30"},{"lineNumber":380,"author":{"gitId":"WilsonLee2000"},"content":"its index provided by user.","lastModifiedDate":"2023-03-30"},{"lineNumber":381,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":382,"author":{"gitId":"WilsonLee2000"},"content":"`printFindNotes(ArrayList\u003cNote\u003e notes)`: prints out all the notes in the list","lastModifiedDate":"2023-03-30"},{"lineNumber":383,"author":{"gitId":"WilsonLee2000"},"content":"that matches the keyword provided by the user.","lastModifiedDate":"2023-03-30"},{"lineNumber":384,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":385,"author":{"gitId":"WilsonLee2000"},"content":"`printPriority(int index, ArrayList\u003cNote\u003e notes)`: prints out a message indicating to the user that the ","lastModifiedDate":"2023-03-30"},{"lineNumber":386,"author":{"gitId":"WilsonLee2000"},"content":"priority of a note item has been changed based on the user\u0027s preference.","lastModifiedDate":"2023-03-30"},{"lineNumber":387,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":388,"author":{"gitId":"WilsonLee2000"},"content":"`printNotesByReviewCount(ArrayList\u003cNote\u003e notes)`: prints out all the notes sorted based on the number of","lastModifiedDate":"2023-03-30"},{"lineNumber":389,"author":{"gitId":"WilsonLee2000"},"content":"review counts for each note item in a list format.","lastModifiedDate":"2023-03-30"},{"lineNumber":390,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":391,"author":{"gitId":"WilsonLee2000"},"content":"`printNotesByPriority(ArrayList\u003cNote\u003e notes)`: prints out all the notes sorted based on the","lastModifiedDate":"2023-03-30"},{"lineNumber":392,"author":{"gitId":"WilsonLee2000"},"content":"priority (high, medium, low) of the note items in a list format.","lastModifiedDate":"2023-03-30"},{"lineNumber":393,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":394,"author":{"gitId":"ZiqiuZeng"},"content":"### NotePriority class:","lastModifiedDate":"2023-04-05"},{"lineNumber":395,"author":{"gitId":"WilsonLee2000"},"content":"The `NotePriority` class is utilised to set the priority level (LOW, MEDIUM, HIGH)","lastModifiedDate":"2023-03-30"},{"lineNumber":396,"author":{"gitId":"WilsonLee2000"},"content":"of the notes stored in the Notes List by users.","lastModifiedDate":"2023-03-30"},{"lineNumber":397,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":398,"author":{"gitId":"WilsonLee2000"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":399,"author":{"gitId":"WilsonLee2000"},"content":"\u003csummary\u003eSequence Diagram for Store\u003c/summary\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":400,"author":{"gitId":"WilsonLee2000"},"content":"\u003cdiv markdown\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":401,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":402,"author":{"gitId":"WilsonLee2000"},"content":"![img_4.png](img_4.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":403,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":404,"author":{"gitId":"WilsonLee2000"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":405,"author":{"gitId":"WilsonLee2000"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":406,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":407,"author":{"gitId":"ZiqiuZeng"},"content":"### Help","lastModifiedDate":"2023-03-23"},{"lineNumber":408,"author":{"gitId":"ZiqiuZeng"},"content":"The Help feature allows users to view possible options by calling `Help.` which reads the content stored in the HelpManual.txt.","lastModifiedDate":"2023-03-23"},{"lineNumber":409,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":410,"author":{"gitId":"ZiqiuZeng"},"content":"The feature implemented involves reading the content from HelpManual.txt file and logging the result of read operation using the Java Logging API.","lastModifiedDate":"2023-03-23"},{"lineNumber":411,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":412,"author":{"gitId":"ZiqiuZeng"},"content":"#### HelpManual text:","lastModifiedDate":"2023-03-23"},{"lineNumber":413,"author":{"gitId":"WilsonLee2000"},"content":"`HelpManual.txt` is a text file that contains the help manual for BadMaths. It is located in the `src/main/resources` directory of the project.","lastModifiedDate":"2023-04-07"},{"lineNumber":414,"author":{"gitId":"WilsonLee2000"},"content":"The purpose of this file is to provide users with helpful instructions on how to operate BadMaths.","lastModifiedDate":"2023-04-07"},{"lineNumber":415,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":416,"author":{"gitId":"ZiqiuZeng"},"content":"#### HelpManual class:","lastModifiedDate":"2023-03-23"},{"lineNumber":417,"author":{"gitId":"ZiqiuZeng"},"content":"Step 1. Define the HelpManual class: The HelpManual class is defined as a public class with two static fields: filePath and logFilePath. ","lastModifiedDate":"2023-03-23"},{"lineNumber":418,"author":{"gitId":"ZiqiuZeng"},"content":"These fields contain the file path of the HelpManual.txt file and the name of the log file, respectively.","lastModifiedDate":"2023-03-23"},{"lineNumber":419,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":420,"author":{"gitId":"ZiqiuZeng"},"content":"Step 2. Setting up the Logger: The Logger is set up in the HelpManual class using the Java Logging API. ","lastModifiedDate":"2023-03-23"},{"lineNumber":421,"author":{"gitId":"ZiqiuZeng"},"content":"The `setUpLogger()` method resets the LogManager, sets the logger\u0027s level to ALL, and creates a log file if it does not already exist. ","lastModifiedDate":"2023-03-23"},{"lineNumber":422,"author":{"gitId":"ZiqiuZeng"},"content":"This method is called before the `readHelpManual()` method to ensure that the logger is properly configured.","lastModifiedDate":"2023-03-23"},{"lineNumber":423,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":424,"author":{"gitId":"ZiqiuZeng"},"content":"Step 3. Reading the file:","lastModifiedDate":"2023-03-23"},{"lineNumber":425,"author":{"gitId":"ZiqiuZeng"},"content":"The `readHelpManual()` method is implemented to read the content from the HelpManual.txt file.","lastModifiedDate":"2023-03-23"},{"lineNumber":426,"author":{"gitId":"ZiqiuZeng"},"content":"It first calls the setUpLogger() method to configure the logger. Then it obtains an InputStream object that reads the content from the ","lastModifiedDate":"2023-03-23"},{"lineNumber":427,"author":{"gitId":"ZiqiuZeng"},"content":"file using the `getResourceAsStream()` method. Before reading the file, the `readHelpManual()` method asserts that the input stream is not null to ensure that the file exists and is readable.","lastModifiedDate":"2023-03-23"},{"lineNumber":428,"author":{"gitId":"ZiqiuZeng"},"content":"The file is then read line by line using a BufferedReader object, and each line is appended to a StringBuilder object. Otherwise,","lastModifiedDate":"2023-03-23"},{"lineNumber":429,"author":{"gitId":"ZiqiuZeng"},"content":"the `getResourceAsStream()` method will return a null value, and an `AssertionError` will be thrown.","lastModifiedDate":"2023-03-23"},{"lineNumber":430,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":431,"author":{"gitId":"ZiqiuZeng"},"content":"Step 4. Logging the result: After reading the file, the `readHelpManual()` method closes the BufferedReader and InputStream ","lastModifiedDate":"2023-03-23"},{"lineNumber":432,"author":{"gitId":"ZiqiuZeng"},"content":"objects and logs the success or failure of the read operation using the logger. If the read operation is successful, a message","lastModifiedDate":"2023-03-23"},{"lineNumber":433,"author":{"gitId":"ZiqiuZeng"},"content":"is logged to the console and log file indicating that the HelpManual file was successfully read. If an exception occurs during","lastModifiedDate":"2023-03-23"},{"lineNumber":434,"author":{"gitId":"ZiqiuZeng"},"content":"the read operation, an error message is logged to the console and log file.","lastModifiedDate":"2023-03-23"},{"lineNumber":435,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":436,"author":{"gitId":"YC-Michael"},"content":"### Graph","lastModifiedDate":"2023-03-22"},{"lineNumber":437,"author":{"gitId":"YC-Michael"},"content":"The Graph feature allows users to analyse basic Trigonometry signals by calling `startGraphAnalysis()` which","lastModifiedDate":"2023-03-22"},{"lineNumber":438,"author":{"gitId":"YC-Michael"},"content":"creates a new instance of `TrigoGraphAnalyser` named `analyser`.","lastModifiedDate":"2023-03-22"},{"lineNumber":439,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":440,"author":{"gitId":"YC-Michael"},"content":"Below is an example usage scenario and how the `Graph` feature behaves at each step.","lastModifiedDate":"2023-03-22"},{"lineNumber":441,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":442,"author":{"gitId":"YC-Michael"},"content":"When user enters an input:","lastModifiedDate":"2023-03-22"},{"lineNumber":443,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":444,"author":{"gitId":"YC-Michael"},"content":"Graph. 2*sin(2*x+5)-1","lastModifiedDate":"2023-03-22"},{"lineNumber":445,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":446,"author":{"gitId":"YC-Michael"},"content":"#### Parser class, Command class:","lastModifiedDate":"2023-03-22"},{"lineNumber":447,"author":{"gitId":"YC-Michael"},"content":"Step 1. Parser class will split the input into `Graph.` and `2*sin(2*x+5)-1`, which are `command` and `toDo` respectively.","lastModifiedDate":"2023-03-22"},{"lineNumber":448,"author":{"gitId":"YC-Michael"},"content":"The command class creates a new instance of `TrigoGraph` and pass in `toDo` as a parameter for the constructor. It","lastModifiedDate":"2023-03-22"},{"lineNumber":449,"author":{"gitId":"YC-Michael"},"content":"then executes `trigoGraph.startGraphAnalysis()`based on `command` using switch-case statements.","lastModifiedDate":"2023-03-22"},{"lineNumber":450,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":451,"author":{"gitId":"YC-Michael"},"content":"#### TrigoGraph class:","lastModifiedDate":"2023-03-22"},{"lineNumber":452,"author":{"gitId":"WilsonLee2000"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":453,"author":{"gitId":"WilsonLee2000"},"content":"\u003csummary\u003eSequence Diagram for TrigoGraph class\u003c/summary\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":454,"author":{"gitId":"WilsonLee2000"},"content":"\u003cdiv markdown\u003d\"1\"\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":455,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":456,"author":{"gitId":"YC-Michael"},"content":"![img_8.png](SequenceDiagrams/Graph_Sequence.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":457,"author":{"gitId":"YC-Michael"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":458,"author":{"gitId":"YC-Michael"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":459,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":460,"author":{"gitId":"YC-Michael"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":461,"author":{"gitId":"YC-Michael"},"content":"\u003csummary\u003eClass Diagram for TrigoGraph class\u003c/summary\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":462,"author":{"gitId":"YC-Michael"},"content":"\u003cdiv markdown\u003d\"1\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":463,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":464,"author":{"gitId":"YC-Michael"},"content":"![img_1.png](ClassDiagrams/graph_class_diagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":465,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":466,"author":{"gitId":"WilsonLee2000"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":467,"author":{"gitId":"WilsonLee2000"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":468,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":469,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":470,"author":{"gitId":"YC-Michael"},"content":"Step 2. Constructor for the TrigoGraph class takes in `2*sin(2*x+5)-1` and assigns it to `trigoEqn` of type String. When `startGraphAnalysis()`","lastModifiedDate":"2023-03-22"},{"lineNumber":471,"author":{"gitId":"YC-Michael"},"content":"is called from the command class, a new instance of `TrigoGraphAnalyser` called `analyser` is created in TrigoGraph, which accepts `trigoEqn`","lastModifiedDate":"2023-03-22"},{"lineNumber":472,"author":{"gitId":"YC-Michael"},"content":"as the parameter.","lastModifiedDate":"2023-03-22"},{"lineNumber":473,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":474,"author":{"gitId":"YC-Michael"},"content":"Step 3. When `analyser.canStartAnalyser()` is true, it will print out the amplitude, frequency, phase and vertical shift","lastModifiedDate":"2023-03-22"},{"lineNumber":475,"author":{"gitId":"YC-Michael"},"content":"to the user using the Ui class. Each of the method calls to the Ui class requires an input of type double which can","lastModifiedDate":"2023-03-23"},{"lineNumber":476,"author":{"gitId":"YC-Michael"},"content":"be achieved by calling `analyser.getAmplitude()`, `analyser.getFreq()` and so on.","lastModifiedDate":"2023-03-22"},{"lineNumber":477,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":478,"author":{"gitId":"YC-Michael"},"content":"#### TrigoGraphAnalyser class:","lastModifiedDate":"2023-03-22"},{"lineNumber":479,"author":{"gitId":"YC-Michael"},"content":"Step 4. In the `canStartAnalyser()` method, the trigo equation is split into various parts, and there","lastModifiedDate":"2023-03-22"},{"lineNumber":480,"author":{"gitId":"YC-Michael"},"content":"is a method call to create `setUpLogger()` to log exceptions when user enters","lastModifiedDate":"2023-03-22"},{"lineNumber":481,"author":{"gitId":"YC-Michael"},"content":"invalid trigo equation. `canStartAnalyser()` returns false if an exception is reached, else it returns true.","lastModifiedDate":"2023-03-22"},{"lineNumber":482,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":483,"author":{"gitId":"YC-Michael"},"content":"Step 5. `canStartAnalyser()` calls `splitAmplitudeFromTrigoEqn()`. This method will split","lastModifiedDate":"2023-03-22"},{"lineNumber":484,"author":{"gitId":"YC-Michael"},"content":"the input into `2` and `sin(2*x+5)-1` using `*` as the regex. ","lastModifiedDate":"2023-03-22"},{"lineNumber":485,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":486,"author":{"gitId":"YC-Michael"},"content":"Step 6. 2 tests are ran within `splitAmplitudeFromTrigoEqn()` to check for negative amplitude and multiple asterisk. ","lastModifiedDate":"2023-03-22"},{"lineNumber":487,"author":{"gitId":"YC-Michael"},"content":"In this case, both checks will return false.","lastModifiedDate":"2023-03-22"},{"lineNumber":488,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":489,"author":{"gitId":"YC-Michael"},"content":"Step 7. The separated String is passed into `String[] amplitudeAndEqn`. The string is then passed into `findAmplitude` ","lastModifiedDate":"2023-03-22"},{"lineNumber":490,"author":{"gitId":"YC-Michael"},"content":"to determine the amplitude. In `findAmplitude(eqn)`, `isAmplitudeEqualsToOne(eqn[0])` will check if the input string ","lastModifiedDate":"2023-03-22"},{"lineNumber":491,"author":{"gitId":"YC-Michael"},"content":"starts with `cos`, `sin` or `tan`, where `eqn[0]` is `2` and `eqn[1]` is `sin(2*x+5)-1`. ","lastModifiedDate":"2023-03-22"},{"lineNumber":492,"author":{"gitId":"YC-Michael"},"content":"If this is true, 1.0 will be assigned to `amplitude`. Else, string `2` will be converted to double `2.0` and assigned to ","lastModifiedDate":"2023-03-22"},{"lineNumber":493,"author":{"gitId":"YC-Michael"},"content":"`amplitude`.","lastModifiedDate":"2023-03-22"},{"lineNumber":494,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":495,"author":{"gitId":"YC-Michael"},"content":"Step 8. After finding `amplitude`, `canStartAnalyser()` calls `splitTrigoAndVerticalShift(amplitudeAndEqn[1])`, where","lastModifiedDate":"2023-03-22"},{"lineNumber":496,"author":{"gitId":"YC-Michael"},"content":"`amplitudeAndEqn[1]` is `sin(2*x+5)-1`. `splitTrigoAndVerticalShift` splits `sin(2*x+5)-1` into `sin(2*x+5` and `-1`","lastModifiedDate":"2023-03-22"},{"lineNumber":497,"author":{"gitId":"YC-Michael"},"content":"based on `)` and returns the separated string to `trigoAndVerticalShift`.","lastModifiedDate":"2023-03-22"},{"lineNumber":498,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":499,"author":{"gitId":"YC-Michael"},"content":"Step 9. `canStartAnalyser()` calls `findVerticalShift()` which takes in `sin(2*x+5` and `-1` as a string [] parameter. ","lastModifiedDate":"2023-03-22"},{"lineNumber":500,"author":{"gitId":"YC-Michael"},"content":"In `findVerticalShift()`, method call to `isVerticalShiftZero(-1)` is false and thus, ","lastModifiedDate":"2023-03-22"},{"lineNumber":501,"author":{"gitId":"YC-Michael"},"content":"`-1` is converted to double `-1.0` and assigned to `vertricalShift`.","lastModifiedDate":"2023-03-22"},{"lineNumber":502,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":503,"author":{"gitId":"YC-Michael"},"content":"Step 10. In `canStartAnalyser()`, string `trigo` is assigned `sin(2*x+5`. ","lastModifiedDate":"2023-03-22"},{"lineNumber":504,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":505,"author":{"gitId":"YC-Michael"},"content":"Step 11. `canStartAnalyser()` calls `splitTrigoIntoPhasors()` and takes in `trigo` as the parameter. In `splitTrigoIntoPhasors()`, ","lastModifiedDate":"2023-03-22"},{"lineNumber":506,"author":{"gitId":"YC-Michael"},"content":"`startPosOfPhase` is 4 while `endPosOfPhase` is 9. A new String variable `phase` is assigned the substring of trigo from ","lastModifiedDate":"2023-03-22"},{"lineNumber":507,"author":{"gitId":"YC-Michael"},"content":"4 to 9, resulting in `2*x+5`. `splitPhasorsIntoFreq()` is called and it accepts string `2*x+5` as input.","lastModifiedDate":"2023-03-22"},{"lineNumber":508,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":509,"author":{"gitId":"YC-Michael"},"content":"Step 12. In `splitPhasorsIntoFreq()`, `findFreqForPlus()` is called which takes in string `2*x+5` as input. ","lastModifiedDate":"2023-03-22"},{"lineNumber":510,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":511,"author":{"gitId":"YC-Michael"},"content":"Step 13. In `findFreqForPlus()`, `2*x+5` is split into `2*x` and `5` using the split function with `+` as the regex. ","lastModifiedDate":"2023-03-22"},{"lineNumber":512,"author":{"gitId":"YC-Michael"},"content":"`findPhase()` which accepts `5` and a boolean `false` as parameters, and `findFreq()` which accepts `2*x` and a boolean `false` are called.","lastModifiedDate":"2023-03-22"},{"lineNumber":513,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":514,"author":{"gitId":"YC-Michael"},"content":"Step 14. In `findPhase()`, `phase` is assigned the double of `5` and in `findFreq()`, `2*x` is substring into `2` and converted ","lastModifiedDate":"2023-03-23"},{"lineNumber":515,"author":{"gitId":"YC-Michael"},"content":"to double `2.0`. `Freq` is assigned the double value of `2.0 / (2 * Math.PI)`.","lastModifiedDate":"2023-03-22"},{"lineNumber":516,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":517,"author":{"gitId":"YC-Michael"},"content":"Step 15. Finally, `canStartAnalyser()` reaches the end and returns true.","lastModifiedDate":"2023-03-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":519,"author":{"gitId":"YC-Michael"},"content":"#### TrigoGraphVisualiser class:","lastModifiedDate":"2023-03-23"},{"lineNumber":520,"author":{"gitId":"YC-Michael"},"content":"Step 16. The `TrigoGraphVisualiser` extends JPanel and overrides the `paintComponent()` method in JComponent. ","lastModifiedDate":"2023-03-23"},{"lineNumber":521,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":522,"author":{"gitId":"YC-Michael"},"content":"Step 17. A new instance of `TrigoGraphVisualiser` is created in `startGraphAnalysis` to assign corresponding values to the amplitude, phase, frequency, ","lastModifiedDate":"2023-03-23"},{"lineNumber":523,"author":{"gitId":"YC-Michael"},"content":"vertical shift, and the trigonometric function in `TrigoGraphVisualiser`. Next, `startVisualiser()` is called to create the frame ","lastModifiedDate":"2023-03-23"},{"lineNumber":524,"author":{"gitId":"YC-Michael"},"content":"for the graph.","lastModifiedDate":"2023-03-23"},{"lineNumber":525,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":526,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":527,"author":{"gitId":"YC-Michael"},"content":"Step 18. The frame is set half of the screen size using `setSize()` and `getScreenSize()`. ","lastModifiedDate":"2023-03-23"},{"lineNumber":528,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":529,"author":{"gitId":"YC-Michael"},"content":"Step 19. When the frame is created, `paintComponent` will be called. It sets up the scale factors which will scale the values","lastModifiedDate":"2023-03-23"},{"lineNumber":530,"author":{"gitId":"YC-Michael"},"content":"generated by the trigo function to that of the frame. It the sets up the x and y axis using `g.drawLine()`.","lastModifiedDate":"2023-03-23"},{"lineNumber":531,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":532,"author":{"gitId":"YC-Michael"},"content":"Step 20. Using the switch-case statements. `drawSinCurve()` will be executed and amplitudes will be labelled on the axis. ","lastModifiedDate":"2023-03-23"},{"lineNumber":533,"author":{"gitId":"YC-Michael"},"content":"The for loop will run from `xMin` to `xMax`, which are the negative frequency and positive frequency for one period respectively.","lastModifiedDate":"2023-03-23"},{"lineNumber":534,"author":{"gitId":"YC-Michael"},"content":"After getting the y value from the output of the sin equation, both *x* and *y* are scaled to *xPixel* and *yPixel* respectively. A horizontal line is drawn at every pixel, which","lastModifiedDate":"2023-03-30"},{"lineNumber":535,"author":{"gitId":"YC-Michael"},"content":"eventually forms the sine graph.","lastModifiedDate":"2023-03-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":537,"author":{"gitId":"WilsonLee2000"},"content":"//{Describe the design and implementation of the product. ","lastModifiedDate":"2023-03-22"},{"lineNumber":538,"author":{"gitId":"WilsonLee2000"},"content":"//Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2023-03-22"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":540,"author":{"gitId":"0nandon"},"content":"### Matrix","lastModifiedDate":"2023-03-24"},{"lineNumber":541,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":542,"author":{"gitId":"0nandon"},"content":"The Matrix feature supports various basic matrix calculations below:","lastModifiedDate":"2023-03-24"},{"lineNumber":543,"author":{"gitId":"0nandon"},"content":"* Matrix multiplication","lastModifiedDate":"2023-03-24"},{"lineNumber":544,"author":{"gitId":"0nandon"},"content":"* Matrix element wise product","lastModifiedDate":"2023-03-24"},{"lineNumber":545,"author":{"gitId":"0nandon"},"content":"* Matrix addition","lastModifiedDate":"2023-03-24"},{"lineNumber":546,"author":{"gitId":"0nandon"},"content":"* Matrix subtraction","lastModifiedDate":"2023-03-24"},{"lineNumber":547,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":548,"author":{"gitId":"0nandon"},"content":"With calling `calculator.run()`, BadMaths parses the user\u0027s input and conducts the given command.","lastModifiedDate":"2023-03-24"},{"lineNumber":549,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":550,"author":{"gitId":"0nandon"},"content":"If you want to see the overall flow of the Matrix part, click the toggle button below:","lastModifiedDate":"2023-03-30"},{"lineNumber":551,"author":{"gitId":"0nandon"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":552,"author":{"gitId":"0nandon"},"content":"\u003csummary\u003eSee the Sequence Diagram\u003c/summary\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":553,"author":{"gitId":"0nandon"},"content":"\u003cdiv markdown\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":554,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":555,"author":{"gitId":"YC-Michael"},"content":"![img.png](SequenceDiagrams/MatrixDG.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":556,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":557,"author":{"gitId":"0nandon"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":558,"author":{"gitId":"0nandon"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":559,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":560,"author":{"gitId":"0nandon"},"content":"Below is an example usage scenario and how the `Matrix` feature behaves at each step.","lastModifiedDate":"2023-03-24"},{"lineNumber":561,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":562,"author":{"gitId":"0nandon"},"content":"When user enters an input:","lastModifiedDate":"2023-03-24"},{"lineNumber":563,"author":{"gitId":"0nandon"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":564,"author":{"gitId":"0nandon"},"content":"Matrix [1,2;3,4] .* [5,6;7,8]","lastModifiedDate":"2023-04-06"},{"lineNumber":565,"author":{"gitId":"0nandon"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":566,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":567,"author":{"gitId":"0nandon"},"content":"#### Calculator class","lastModifiedDate":"2023-03-24"},{"lineNumber":568,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":569,"author":{"gitId":"0nandon"},"content":"step 1. `run()` function in `Calculator.class` firstly get `toDo` as the argument which is `[1,2;3,4] .* [5,6;7,8]` in the above example.","lastModifiedDate":"2023-03-24"},{"lineNumber":570,"author":{"gitId":"0nandon"},"content":"This `run()` function sequentially parses this string, executes the command and shows the result matrix to users.","lastModifiedDate":"2023-03-24"},{"lineNumber":571,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":572,"author":{"gitId":"0nandon"},"content":"#### Parser class","lastModifiedDate":"2023-03-24"},{"lineNumber":573,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":574,"author":{"gitId":"0nandon"},"content":"step 2. Firstly, `run()` function pass the `toDo` string to `parse()` function defined in `Parser.class`. ","lastModifiedDate":"2023-03-24"},{"lineNumber":575,"author":{"gitId":"0nandon"},"content":"This `parse()` function firstly identifies the type of the operator of this command with referring `toDo` string. ","lastModifiedDate":"2023-03-24"},{"lineNumber":576,"author":{"gitId":"0nandon"},"content":"And then, it divides the cases with this identified type with using `switch` statement.","lastModifiedDate":"2023-03-24"},{"lineNumber":577,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":578,"author":{"gitId":"0nandon"},"content":"#### Execute class","lastModifiedDate":"2023-03-24"},{"lineNumber":579,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":580,"author":{"gitId":"0nandon"},"content":"step 3. According to each case divided by operator types in the previous step, ","lastModifiedDate":"2023-03-24"},{"lineNumber":581,"author":{"gitId":"0nandon"},"content":"`parse()` function calls corresponding function defined in `Execute.class` for conducting calculation. ","lastModifiedDate":"2023-03-24"},{"lineNumber":582,"author":{"gitId":"0nandon"},"content":"In the case of the above example, `parse()` function calls `executeMul()` defined in `Execute.class` since the type of the ","lastModifiedDate":"2023-03-24"},{"lineNumber":583,"author":{"gitId":"0nandon"},"content":"operator is matrix multiplication. Finally, it passes the `toDo` string to `executeMul()` function as the argument.","lastModifiedDate":"2023-03-24"},{"lineNumber":584,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":585,"author":{"gitId":"0nandon"},"content":"step4. `executeMul()` function firstly extracts two operands from `toDo` string. And pass these two operands to `executeTranspose()` ","lastModifiedDate":"2023-03-24"},{"lineNumber":586,"author":{"gitId":"0nandon"},"content":"in `Execute.class` respectively. ","lastModifiedDate":"2023-03-24"},{"lineNumber":587,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":588,"author":{"gitId":"0nandon"},"content":"step 5. In this `executeTranspose()` function, function checks whether there is transpose mark in the given operand, and parses this","lastModifiedDate":"2023-03-24"},{"lineNumber":589,"author":{"gitId":"0nandon"},"content":"operand which is string type into `Tensor2D` type so that this operand could be internally calculated. In this parsing phase, ","lastModifiedDate":"2023-03-24"},{"lineNumber":590,"author":{"gitId":"0nandon"},"content":"`parseMatrix()` function defined in `Parser.class` is used. This function finally outputs this `Tensor2D` type operand to ","lastModifiedDate":"2023-03-24"},{"lineNumber":591,"author":{"gitId":"0nandon"},"content":"`executeMatrix()` function.","lastModifiedDate":"2023-03-24"},{"lineNumber":592,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":593,"author":{"gitId":"0nandon"},"content":"step 6. Regarding these two operands with `Tensor2D` type, `executeMul` function calls `mul()` function defined in `calculate.class`.","lastModifiedDate":"2023-03-24"},{"lineNumber":594,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":595,"author":{"gitId":"0nandon"},"content":"#### Calculate class","lastModifiedDate":"2023-03-24"},{"lineNumber":596,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":597,"author":{"gitId":"0nandon"},"content":"step 7. `mul()` function defined in `Calculate.class` internally conducts matrix multiplication with nested for-loop ","lastModifiedDate":"2023-03-24"},{"lineNumber":598,"author":{"gitId":"0nandon"},"content":"and outputs the result which is `Tensor2D` type.","lastModifiedDate":"2023-03-24"},{"lineNumber":599,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":600,"author":{"gitId":"0nandon"},"content":"step 8. This result is sequentially returned to `executeMul()`, `parse()` and `run()` function. Finally in the `run()` function,","lastModifiedDate":"2023-03-24"},{"lineNumber":601,"author":{"gitId":"0nandon"},"content":"the result is printed in terminal.","lastModifiedDate":"2023-03-24"},{"lineNumber":602,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":604,"author":{"gitId":"WilsonLee2000"},"content":"## Product Scope","lastModifiedDate":"2023-03-22"},{"lineNumber":605,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":606,"author":{"gitId":"WilsonLee2000"},"content":"Mathematics students who are studying and practicing Mathematical topics on Matrices, Quadratic Equations ","lastModifiedDate":"2023-04-07"},{"lineNumber":607,"author":{"gitId":"WilsonLee2000"},"content":"or Sinusoidal Signals.","lastModifiedDate":"2023-04-07"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":609,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":611,"author":{"gitId":"YC-Michael"},"content":"Students can access mathematical tools like matrix calculator, quadratic equation solver, and trigonometry graph analyser","lastModifiedDate":"2023-03-30"},{"lineNumber":612,"author":{"gitId":"WilsonLee2000"},"content":"quickly when studying. Concurrently, students are also able to make use of the Notes function in BadMaths","lastModifiedDate":"2023-04-07"},{"lineNumber":613,"author":{"gitId":"WilsonLee2000"},"content":"to do note-taking and to keep track of their notes through the use of various Notes features in BadMaths.","lastModifiedDate":"2023-04-07"},{"lineNumber":614,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":615,"author":{"gitId":"YC-Michael"},"content":"This integrated mathematical tool aims to help users solve their mathematical doubts or clarifications quickly which saves time, as they do not","lastModifiedDate":"2023-03-30"},{"lineNumber":616,"author":{"gitId":"YC-Michael"},"content":"have to search for different tools online.","lastModifiedDate":"2023-03-30"},{"lineNumber":617,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":619,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":621,"author":{"gitId":"-"},"content":"| Version | As a ...                                | I want to ...                         | So that I can ...                                                                      |","lastModifiedDate":"2020-05-24"},{"lineNumber":622,"author":{"gitId":"khooyourun"},"content":"|---------|-----------------------------------------|---------------------------------------|----------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-01"},{"lineNumber":623,"author":{"gitId":"khooyourun"},"content":"| v1.0    | student studying Linear Algebra         | be able to check my answers for Matrix multiplications | ensure that the method I am using for manual calculations is correct                   |","lastModifiedDate":"2023-04-01"},{"lineNumber":624,"author":{"gitId":"khooyourun"},"content":"| v1.0    | student overwhelmed by math information | be able to store custom notes         | refer to them whenever I want to refresh my memory                                     |","lastModifiedDate":"2023-04-01"},{"lineNumber":625,"author":{"gitId":"khooyourun"},"content":"| v1.0    | student studying Signals and Systems    | be able to find the characteristics of trigo graphs easily | save time when doing my tutorials and not have to worry about the tedious calculations |","lastModifiedDate":"2023-04-01"},{"lineNumber":626,"author":{"gitId":"khooyourun"},"content":"| v2.0    | secondary school maths student          | be able to solve quadratic equations  | complete my homework as fast as possible and as correcetly as possible                 |","lastModifiedDate":"2023-04-01"},{"lineNumber":627,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":629,"author":{"gitId":"YC-Michael"},"content":"* Notes can be ported when program starts on a new device.","lastModifiedDate":"2023-03-30"},{"lineNumber":630,"author":{"gitId":"YC-Michael"},"content":"* The program should terminate and print an error message when it takes to long to process user inputs.","lastModifiedDate":"2023-03-30"},{"lineNumber":631,"author":{"gitId":"YC-Michael"},"content":"* The program should be straightforward and concise; No doubts on how to use the program.","lastModifiedDate":"2023-03-30"},{"lineNumber":632,"author":{"gitId":"YC-Michael"},"content":"* Capabilities of the program are made known to the users.","lastModifiedDate":"2023-03-30"},{"lineNumber":633,"author":{"gitId":"YC-Michael"},"content":"* Program is to implement features related to studying and maths only. E.g. A step tracker that tracks number of steps","lastModifiedDate":"2023-03-30"},{"lineNumber":634,"author":{"gitId":"YC-Michael"},"content":"walked is out of scope.","lastModifiedDate":"2023-03-30"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":636,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":638,"author":{"gitId":"YC-Michael"},"content":"* *x* - input to the trigonometric function, sin(freqInHz* *x*+phase).","lastModifiedDate":"2023-03-30"},{"lineNumber":639,"author":{"gitId":"YC-Michael"},"content":"* *y* - output of the trigonometric function above.","lastModifiedDate":"2023-03-30"},{"lineNumber":640,"author":{"gitId":"YC-Michael"},"content":"* *xPixel* - *x* value is scaled to position of the x position of the screen.","lastModifiedDate":"2023-03-30"},{"lineNumber":641,"author":{"gitId":"YC-Michael"},"content":"* *yPixel* - *y* value is scaled to position of the y position of the screen.","lastModifiedDate":"2023-03-30"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":643,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":645,"author":{"gitId":"khooyourun"},"content":"- Download the latest release of BadMaths [here](https://github.com/AY2223S2-CS2113-F10-2/tp/releases).","lastModifiedDate":"2023-04-01"},{"lineNumber":646,"author":{"gitId":"khooyourun"},"content":"- Save the java file to a new folder.","lastModifiedDate":"2023-04-01"},{"lineNumber":647,"author":{"gitId":"khooyourun"},"content":"- Open command prompt by typing `cmd` in the Windows search bar.","lastModifiedDate":"2023-04-01"},{"lineNumber":648,"author":{"gitId":"khooyourun"},"content":"- Navigate to the folder via `cd \"folder path\"`. (eg. `cd C:\\Users\\your_name\\Desktop\\BadMaths`).","lastModifiedDate":"2023-04-01"},{"lineNumber":649,"author":{"gitId":"khooyourun"},"content":"- Type `java -jar BadMaths.jar` to run BadMaths.","lastModifiedDate":"2023-04-04"},{"lineNumber":650,"author":{"gitId":"khooyourun"},"content":"- Follow the [User Guide](https://github.com/AY2223S2-CS2113-F10-2/tp/blob/master/docs/UserGuide.md) to begin testing.","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"0nandon":62,"khooyourun":117,"-":26,"ZiqiuZeng":157,"WilsonLee2000":180,"YC-Michael":108}},{"path":"docs/Team/0nandon.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"# 🧑🏻‍💻 Seungjun Lee, Project Portfolio Page","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"## 🤖 Project BadMaths","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"BadMaths is a study tool focusing on mathematical help and note-taking. It supports","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"a number of mathematical functions, including trigonemetric graphs, quadratic equations, and matrix calculations.","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"If you are more interested, refer the links below:","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"* [User Guide](https://ay2223s2-cs2113-f10-2.github.io/tp/UserGuide.html)","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"* [Code](https://github.com/AY2223S2-CS2113-F10-2/tp)","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"## 👊🏻 Summary of Contributions","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"### Code contributed","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"My code contribution can be mainly separated with two parts:","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"* source code for the matrix calculation","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"* JUnit test codes for the matrix calculation","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"You can see the file structure that I contributed below:","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"From the folder `src/main/java/seedu/badmaths/matrix`","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"├── matrix","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"│   ├── Calculate.java","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"│   ├── Calculator.java","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"│   ├── Execute.java","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"│   ├── Parser.java","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"│   ├── Shape.java","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"│   ├── Tensor.java","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"│   ├── Tensor2D.java","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"│   ├── Ui.java","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"│   └── exception","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"│       ├── ExceptionChecker.java","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"│       ├── ExceptionPrinter.java","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"│       ├── ShapeMismatchException.java","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"│       └── UnknownOperatorException.java","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"0nandon"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"0nandon"},"content":"From the folder `src/test/java/seedu/badmaths/matrix`","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"0nandon"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"0nandon"},"content":"├── matrix","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"0nandon"},"content":"│   ├── CalculateTest.java","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"0nandon"},"content":"│   ├── ExecuteTest.java","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"0nandon"},"content":"│   └── ParserTest.java","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"0nandon"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"0nandon"},"content":"If you want to see my code contributions more specifically, click [here](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003d0nandon\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByAuthors\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003d0nandon\u0026tabRepo\u003dAY2223S2-CS2113-F10-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse).","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"0nandon"},"content":"### Features added","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"0nandon"},"content":"- Added a feature to support various matrix calculation. This allows users to input matrix equation and BadMaths","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"0nandon"},"content":"  would be able to output the answer. BadMaths supports four operations below:","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"0nandon"},"content":"  * Matrix multiplication","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"0nandon"},"content":"  * Matrix element wise product","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"0nandon"},"content":"  * Matrix addition","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"0nandon"},"content":"  * Matrix subtraction","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"0nandon"},"content":"### Enhancements added","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"0nandon"},"content":"- Added JUnit tests for the below file:","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"0nandon"},"content":"  * `src/test/java/seedu/badmaths/matrix/CalculateTest.java`","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"0nandon"},"content":"  * `src/test/java/seedu/badmaths/matrix/Execute.java`","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"0nandon"},"content":"  * `src/test/java/seedu/badmaths/matrix/parse.java`","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"0nandon"},"content":"- Improve code more defensive with handling various possible exceptions:","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"0nandon"},"content":"  * `src/main/java/seedu/badmaths/matrix/exception/ShapeMismatchException.java`","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"0nandon"},"content":"    \u003e This exception is called when the shape of the two matrices don\u0027t match to be calculated.","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"0nandon"},"content":"  * `src/main/java/seedu/badmaths/matrix/exception/UnknownOperatorException.java`","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"0nandon"},"content":"    \u003e This exception is called when the user enters the unsupported operator.","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"0nandon"},"content":"- Refined the code to be more OOP with following [code standard](https://se-education.org/guides/conventions/java/basic.html).","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"0nandon"},"content":"- Added comments with `JavaDoc` style for the readability.","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"0nandon"},"content":"- Added `logging`, `assert` statement for making debugging more easily.","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"0nandon"},"content":"### Contributions to the UG","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"0nandon"},"content":"- Contributed the section explaining the usage of the Matrix calculation.","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"0nandon"},"content":"- Added various examples for the matrix calculation and expected output.","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"0nandon"},"content":"- Refined the whole contents of the UG for the readability.","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"0nandon"},"content":"### Contributions to the DG","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"0nandon"},"content":"- Contributed to the section detailing the functionality of the matrix calculation.","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"0nandon"},"content":"- Created a sequence diagram to further explain how matrix calculation is conducted.","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"0nandon"},"content":"- Refined the whole contents of the DG for the readability.","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"0nandon"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"0nandon"},"content":"- Contributed to brainstorming of ideas and feature generation.","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"0nandon"},"content":"- Tracked v1.0, v2.0 milestones.","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"0nandon"},"content":"- Provided basic coding advice and code quality checking assistance to group members.","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"0nandon"},"content":"- Reviewed Pull Requests with assistance before merging them into the master branch on Github.","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"0nandon":90}},{"path":"docs/Team/khooyourun.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"# Khoo You Run - Project Portfolio Page","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"## Project BadMaths","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"BadMaths is a study tool focusing on mathematical help and note-taking. Provides features to aid in solving questions","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"revolving around matrices, quadratic equations, and trigonometric graphs.","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"## Summary of Contributions","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"### Code contributed","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"[Here are my code contributions](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dkhooyourun\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dkhooyourun\u0026tabRepo\u003dAY2223S2-CS2113-F10-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"### General functionalities implemented","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"- Created and implemented the initial `BadMaths` class, `Command` class and `Parser` class that helped to facilitate the general","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"flow of the program. BadMaths class took in user input, Parser class made sense of the user input and Command class executed","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"the desired features. All the included features in BadMaths depend and run on these 3 classes.","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"### Features added","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"- Added a feature to solve quadratic equations. This allows users to input any quadratic equation and BadMaths would be ","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"able to output the answer. If the answer is imaginary, BadMaths would tell the user as such. BadMaths would also find the","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"minimum or maximum point of the quadratic graph.","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"### Enhancements added","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"- Added JUnit Tests to `Quadratic`, `QuadraticParser` and `Parser`.","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"- Made the code more OOP and improved readability.","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"- Enhanced code defence by protecting it against bugs and possible exceptions.","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"### Contributions to the UG","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"- Contributed the Table of Contents for easy access to various sections of the UG.","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"- Contributed the section explaining the usage of the Quadratic solver feature.","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"- Contributed to the FAQ section.","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"### Contributions to the DG","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"- Created the Architecture Diagram.","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"- Contributed to the section detailing the handling of User Input.","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"- Contributed to the section detailing the functionality of the Quadratic solver.","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"- Created a sequence diagram to further explain how Quadratic Solver works.","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"- Added User Stories.","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"- Added instructions for manual testing.","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"### Contributions to team-based tasks / Review contributions","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"- Contributed to brainstorming of ideas and feature generation.","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"- Tracked v1.0, v2.0 milestones.","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"- Helped group members with code quality checking and general coding advice.","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"- Helped to review Pull Requests before merging into master branch on Github.","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"khooyourun":51}},{"path":"docs/Team/wilsonlee2000.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"# Wilson Lee Jun Wei (Project Portfolio Page)","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"## About Me","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"Hello there!","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"I am a second year student studying Computer Engineering, with a minor in Interactive Media Development at the National University Of Singapore.","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"If you have any enquiries, feel free to reach out to me at wilsonleejunwei@u.nus.edu ","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"## Product Overview - BadMaths","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"BadMaths is a Mathematical Study Tool that aims to help users to perform Mathematical Operations ","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"effectively and efficiently and contains various functionalities for note-taking.","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"## Summary of Contributions","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"### 1) Code Contributed:","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"Click [here](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003dWilsonLee2000\u0026zR\u003dAY2223S2-CS2113-F10-2%2Ftp%5Bmaster%5D\u0026zACS\u003d147.97863924050634\u0026zS\u003d2023-02-17\u0026zFS\u003d\u0026zU\u003d2023-04-06\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"to view my codes contributed for this project.","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"### 2) Enhancements Implemented:","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"* Implemented `Store` Function for notes taking.","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"* Implemented `List` Function for displaying items stored in notes.","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"* Implemented `Delete` Function for removing items stored in notes.","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"* Implemented `History` Function for displaying a list of all commands input by users","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"* Refactoring codes as classes (more OOP).","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"* Implemented JUnit Tests for `Store`, `List`, `Delete` and `CommandHistory`.","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"* Made improvements towards `HelpManual.txt`.","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"### 3) UserGuide Contributions:","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"* Contributed to overall formatting of UserGuide","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"* Contributed to documentation for `Store`, `List`, `Delete`, `Clear`, `Mark`, `Unmark`,","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"`FindMark`, `FindUnmark`, `FindInfo`, `FindPrior`, `History`, `Help`, `Bye`.","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"* Contributed to Command Summary for `Notes` and `General`","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"### 4) DeveloperGuide Contributions:","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"* Added Introduction","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"* Added Table of Contents ","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"* Added Sequence Diagram for `Store`","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"* Added design \u0026 implementation details for `Store` class","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"* Added design \u0026 implementation details for `Delete` class","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"* Added design \u0026 implementation details for `Command` class","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"* Added design \u0026 implementation details for `List` class","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"* Added design \u0026 implementation details for `CommandHistory` class","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"* Added design \u0026 implementation details for `Ui` class","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"* Added design \u0026 implementation details for `notes.txt` file","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"### 5) Review/Mentoring Contributions:","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"* Link to PRs reviewed [here](https://github.com/AY2223S2-CS2113-F10-2/tp/pulls?q\u003dis%3Apr+reviewed-by%3AWilsonLee2000)","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"WilsonLee2000":45}},{"path":"docs/Team/yc-michael.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"# Hui Yu Cong - project Portfolio Page","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"## Overview of product: BadMaths","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"BadMaths is an integrated study tool that performs Mathematical Operations and contains ","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"various features for note-taking.","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"## Summary of Contributions","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"### Code contributed","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"[My code contributions](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dYC-Michael\u0026tabRepo\u003dAY2223S2-CS2113-F10-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"### Enhancements implemented","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"- Created the Ui class to print outputs to the user","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"- Added a feature that analyses basic trigonometry signals","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"- Enhance the stated feature by visualising it using JFrame","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"- Make the code more OOP and bug free","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"- Added JUnit tests for TrigoGraph, TrigoGraphAnalyser and TrigoGraphVisualiser ","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"### Contributions to the UG","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"- Contributed to `Feature 1: Graph Analyser and Visualiser`","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"- Contributed to Graph portion of `Command Summary`","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"### Contributions to the DG","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"- Contributed to `Graph` ","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"- Added UML diagrams for `TrigoGraph class`","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"### Contributions to team-based tasks / Review contributions","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"- Created team organisation and tracked the progress of milestones v1.0, v2.0 and v2.1","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"- Provided ideas for extra features (Review Count to track the number of times a user has viewed that particular note)","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"- Assisted members in debugging their code offline","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"- [PRs reviewed](https://github.com/AY2223S2-CS2113-F10-2/tp/pulls?q\u003dis%3Apr+reviewed-by%3AYC-Michael)","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"YC-Michael":36}},{"path":"docs/Team/ziqiuzeng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"# ZENG ZIQIU\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"##Project: BadMaths","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"BadMaths is an integrated study tool that performs Mathematical Operations and contains various features for note-taking.","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"- New Feature: Added the ability to mark/unmark note","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"- New Feature: Added the ability to determine whether the note document is corrupted","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"- Enhancements:","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"  - Added JUnit Tests for `NotesFileParser`, `NotesFileWriter`, `NotesFileContentManager` and `NotesFileCleaner`","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"  - Refactor method","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"  - Make the code more OOP","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"- Code Contributed: [RepoSense Link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dziqiuzeng\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"- Documentation:","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"  - User Guide:","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"    - Added documentation for the features `Mark` and `Unmark`","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"    - Added documentation for the feature `Help`","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"  - Developer\u0027s Guide:","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"    - Added structure details of the `Note` class","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"    - Added format details of the `Note.txt` file","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"    - Added implementation details of the `Help` feature","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"    - Added implementation details of the `NotesFileParser` class","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"    - Added implementation details of the `NotesFileWriter` class","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"    - Added implementation details of the `NotesFileContentManager` class","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"    - Added implementation details of the `NotesFileCleaner` class","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"  ","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"- Project Management","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"    - Managed Releases [v2.0](https://github.com/AY2223S2-CS2113-F10-2/tp/releases/tag/v2.0)","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"- Community","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"  - [PR reviewed](https://github.com/AY2223S2-CS2113-F10-2/tp/issues?q\u003dreviewed-by%3AZiqiuZeng)","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":39}},{"path":"docs/UmlFiles/MatrixDG.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"@startuml","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"Command -\u003e Calculator : run()","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"activate Calculator","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"Calculator --\u003e Ui : Ui()","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"Ui --\u003e Calculator","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"Calculator --\u003e Parser : Parser()","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"activate Parser","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"Parser --\u003e Calculator","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"deactivate Parser","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"Calculator -\u003e Parser : parse(toDo)","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"activate Parser","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"Parser --\u003e Execute : Execute()","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"activate Execute","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"Execute --\u003e Parser","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"deactivate Execute","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"alt ADD","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"    Parser -\u003e Execute : executeAdd(command)","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"    activate Execute","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"    Execute --\u003e Calculate : Calculate()","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"    activate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"    Calculate --\u003e Execute","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"    deactivate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Execute : executeTranspose(operator[0])","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Execute : executeTranspose(operator[1])","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Calculate : add(t1, t2)","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"0nandon"},"content":"    activate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"0nandon"},"content":"    Calculate -\u003e Execute : result","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"0nandon"},"content":"    deactivate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Parser : result","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"0nandon"},"content":"    deactivate Execute","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"0nandon"},"content":"else SUB","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"0nandon"},"content":"    Parser -\u003e Execute : executeSub(command)","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"0nandon"},"content":"    activate Execute","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"0nandon"},"content":"    Execute --\u003e Calculate : Calculate()","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"0nandon"},"content":"    activate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"0nandon"},"content":"    Calculate --\u003e Execute","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"0nandon"},"content":"    deactivate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Execute : executeTranspose(operator[0])","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Execute : executeTranspose(operator[1])","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Calculate : sub(t1, t2)","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"0nandon"},"content":"    activate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"0nandon"},"content":"    Calculate -\u003e Execute : result","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"0nandon"},"content":"    deactivate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Parser : result","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"0nandon"},"content":"    deactivate Execute","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"0nandon"},"content":"else MUL","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"0nandon"},"content":"    Parser -\u003e Execute : executeMul()","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"0nandon"},"content":"    activate Execute","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"0nandon"},"content":"    Execute --\u003e Calculate : Calculate()","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"0nandon"},"content":"    activate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"0nandon"},"content":"    Calculate --\u003e Execute","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"0nandon"},"content":"    deactivate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Execute : executeTranspose(operator[0])","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Execute : executeTranspose(operator[1])","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Calculate : mul(t1, t2)","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"0nandon"},"content":"    activate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"0nandon"},"content":"    Calculate -\u003e Execute : result","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"0nandon"},"content":"    deactivate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Parser : result","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"0nandon"},"content":"    deactivate Execute","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"0nandon"},"content":"else DOT","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"0nandon"},"content":"    Parser -\u003e Execute : executeDot()","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"0nandon"},"content":"    activate Execute","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"0nandon"},"content":"    Execute --\u003e Calculate : Calculate()","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"0nandon"},"content":"    activate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"0nandon"},"content":"    Calculate --\u003e Execute","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"0nandon"},"content":"    deactivate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Execute : executeTranspose(operator[0])","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Execute : executeTranspose(operator[1])","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Calculate : dot(t1, t2)","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"0nandon"},"content":"    activate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"0nandon"},"content":"    Calculate -\u003e Execute : result","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"0nandon"},"content":"    deactivate Calculate","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"0nandon"},"content":"    Execute -\u003e Parser : result","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"0nandon"},"content":"    deactivate Execute","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"0nandon"},"content":"end","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"0nandon"},"content":"Parser -\u003e Calculator : result","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"0nandon"},"content":"Calculator -\u003e Ui : printResult(result)","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"0nandon"},"content":"deactivate Calculator","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"0nandon"},"content":"activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"0nandon"},"content":"deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"0nandon"},"content":"@enduml","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"0nandon":111}},{"path":"docs/UmlFiles/Note.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"autonumber","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"title Sequence Diagram for Store","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"actor User","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"User -\u003e Store **: Store(notes, toDo)","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"User -\u003e Store:storeNotes()","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"activate Store","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"alt isInvalidTodo(toDo) is \"Invalid todo\"","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"    Store -\u003e Ui : Ui.printIncorrectFormatEntered()","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"    activate Ui","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"    deactivate Ui","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"    else","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"    Store -\u003e notes: notes.add(toDo)","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"    activate notes","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"    deactivate notes","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"    Store -\u003e Ui: Ui.printAddNote(toDo, notes.getSize());","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"    activate Ui","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"    deactivate Ui","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"    Store -\u003e NotesFileWriter: NotesFileWriter.saveFile(filePath, notes.getAll())","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"    activate NotesFileWriter","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"    deactivate NotesFileWriter","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"    end","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Store","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"WilsonLee2000":32}},{"path":"docs/UmlFiles/Notes.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"//@@author WilsonLee2000","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"title Sequence Diagram for Notes Functionalities","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"actor User","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"User -\u003e BadMaths : main()","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"activate BadMaths","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"BadMaths -\u003e NotesList: NotesList(Storage.loadFile(path))","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"NotesList -\u003e Storage : loadFile(String path)","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"activate Storage","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Storage","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"activate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"NotesList --\u003e BadMaths","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"deactivate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"BadMaths -\u003e Parser : Parser(userInput)","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"activate Parser","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"Parser --\u003e BadMaths : getCommand()","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"Parser --\u003e BadMaths : getToDo()","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Parser","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"alt inputCommand is null","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"activate Command","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"    BadMaths -\u003e Command : Command(command, toDo);","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"    else inputCommand is not null","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"    BadMaths -\u003e Command : setCommand(command)","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"    BadMaths -\u003e Command : setToDo(toDo)","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"    end","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"BadMaths -\u003e Command : executeCommand(notes)","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e TrigoGraph : TrigoGraph(toDo)","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"activate TrigoGraph","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"deactivate TrigoGraph","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Calculator : Calculator(toDo)","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"activate Calculator","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Calculator","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Quadratic : Quadratic(toDo)","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"activate Quadratic","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Quadratic","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"alt \"Bye\"","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"else \"Graph\"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e TrigoGraph : startGraphAnalysis()","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"activate TrigoGraph","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"deactivate TrigoGraph","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"else \"Store\"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e NotesList : add(toDo)","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"activate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"WilsonLee2000"},"content":"deactivate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Ui : printAddNote(toDo, notes.getsize())","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"WilsonLee2000"},"content":"activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"WilsonLee2000"},"content":"else \"List\"","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"WilsonLee2000"},"content":"alt isInvalid(toDo)","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Ui : printNotes(notes.getAll())","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"WilsonLee2000"},"content":"activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"WilsonLee2000"},"content":"else","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e NotesList : review(index)","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"WilsonLee2000"},"content":"activate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"WilsonLee2000"},"content":"NotesList -\u003e Notes : incrementReviewCount()","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"WilsonLee2000"},"content":"activate Notes","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Notes","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"WilsonLee2000"},"content":"deactivate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Ui : printSpecificNote(index, notes.getAll())","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"WilsonLee2000"},"content":"activate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"WilsonLee2000"},"content":"end","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"WilsonLee2000"},"content":"else \"Delete\"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Ui : printDelete(notes.getText(deleteIndex), notes.getSize())","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"WilsonLee2000"},"content":"activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e NotesList : remove(deleteIndex)","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"WilsonLee2000"},"content":"activate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"WilsonLee2000"},"content":"deactivate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"WilsonLee2000"},"content":"else \"Mark\"","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e NotesList : markAsDone(markIndex)","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"WilsonLee2000"},"content":"activate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"WilsonLee2000"},"content":"NotesList -\u003e Note : markAsDone()","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"WilsonLee2000"},"content":"activate Note","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Note","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"WilsonLee2000"},"content":"deactivate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Ui : printMark(notes.getText(markIndex))","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"WilsonLee2000"},"content":"activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"WilsonLee2000"},"content":"else \"Unmark\"","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e NotesList : markAsUndone(unmarkIndex)","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"WilsonLee2000"},"content":"activate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"WilsonLee2000"},"content":"NotesList -\u003e Note : markAsNotDone();","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"WilsonLee2000"},"content":"activate Note","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Note","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"WilsonLee2000"},"content":"deactivate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Ui : printUnmark(notes.getText(unmarkIndex))","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"WilsonLee2000"},"content":"activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"WilsonLee2000"},"content":"else \"Low\"","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e NotesList : setPriority(lowIndex, NotePriority.Priority.LOW)","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"WilsonLee2000"},"content":"activate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"WilsonLee2000"},"content":"NotesList -\u003e Note : setPriority(priority)","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"WilsonLee2000"},"content":"activate Note","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Note","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"WilsonLee2000"},"content":"deactivate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Ui : printPriority(lowIndex, notes.getAll())","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"WilsonLee2000"},"content":"activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"WilsonLee2000"},"content":"else \"Medium\"","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e NotesList : setPriority(mediumIndex, NotePriority.Priority.MEDIUM)","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"WilsonLee2000"},"content":"activate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"WilsonLee2000"},"content":"deactivate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Ui : printPriority(mediumIndex, notes.getAll())","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"WilsonLee2000"},"content":"activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"WilsonLee2000"},"content":"else \"High\"","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e NotesList : setPriority(highIndex, NotePriority.Priority.HIGH)","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"WilsonLee2000"},"content":"activate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"WilsonLee2000"},"content":"deactivate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Ui : printPriority(highIndex, notes.getAll())","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"WilsonLee2000"},"content":"activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"WilsonLee2000"},"content":"else \"FindInfo\"","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Ui : printFindNotes(notes.relevantInfo(keyword))","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"WilsonLee2000"},"content":"activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"WilsonLee2000"},"content":"else \"FindPrior\"","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Ui : printFindNotes(notes.relevantPriority(priorityStr)","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"WilsonLee2000"},"content":"activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"WilsonLee2000"},"content":"else \"FindMark\"","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Ui : printFindNotes(notes.relevantMarked())","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"WilsonLee2000"},"content":"activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"WilsonLee2000"},"content":"else \"FindUnmark\"","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Ui : printFindNotes(notes.relevantUnmarked())","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"WilsonLee2000"},"content":"activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"WilsonLee2000"},"content":"else \"Rank\"","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"WilsonLee2000"},"content":"alt toDo \u003d\u003d \"Review Count\"","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"WilsonLee2000"},"content":"  Command -\u003e NotesList : rankByReviewCount(","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"WilsonLee2000"},"content":"  activate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"WilsonLee2000"},"content":"  deactivate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"WilsonLee2000"},"content":"  Command -\u003e Ui : printNotesByReviewCount(notes.getAll())","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"WilsonLee2000"},"content":"  activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"WilsonLee2000"},"content":"  deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"WilsonLee2000"},"content":"  else toDo \u003d\u003d \"Priority\"","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"WilsonLee2000"},"content":"  Command -\u003e NotesList : rankByPriority()","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"WilsonLee2000"},"content":"  activate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"WilsonLee2000"},"content":"  deactivate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"WilsonLee2000"},"content":"  Command -\u003e Ui : printNotesByPriority(notes.getAll()","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"WilsonLee2000"},"content":"  activate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"WilsonLee2000"},"content":"  deactivate Ui","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"WilsonLee2000"},"content":"end","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"WilsonLee2000"},"content":"else \"Clear\"","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e NotesList : reset()","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"WilsonLee2000"},"content":"activate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"WilsonLee2000"},"content":"deactivate NotesList","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"WilsonLee2000"},"content":"else \"Help\"","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e HelpManual : readHelpManual()","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"WilsonLee2000"},"content":"activate HelpManual","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"WilsonLee2000"},"content":"deactivate HelpManual","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"WilsonLee2000"},"content":"else \"Matrix\"","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Calculator : run(toDo)","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"WilsonLee2000"},"content":"activate Calculator","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Calculator","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"WilsonLee2000"},"content":"else \"Quadratic\"","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"WilsonLee2000"},"content":"Command -\u003e Quadratic : solveQuadratic()","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"WilsonLee2000"},"content":"activate Quadratic","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Quadratic","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"WilsonLee2000"},"content":"end","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Command","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"WilsonLee2000"},"content":"deactivate BadMaths","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"WilsonLee2000"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"WilsonLee2000":172}},{"path":"docs/UmlFiles/QuadraticClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"class Quadratic {","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"    + toDo: String","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"    + quadraticFormula(): ArrayList\u003cdouble\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"    + minMaxPointFinder(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"    + printAnswer()","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"    + solveQuadratic()","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"class QuadraticParser {","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    + findA(): double","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"    + findSignOfB(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    + findStringOfB(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"    + findB(): double","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    + findSignOfC(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    + findStringOfC(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    + findC(): double","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"class Ui {","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"    + printQuadraticFormatError()","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    + printQuadraticAnswer()","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"Quadratic \u003c|-- QuadraticParser","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"Ui \u003c-- Quadratic","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"khooyourun":29}},{"path":"docs/UmlFiles/QuadraticSolver.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"@startuml","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"activate Command","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"Command -\u003e Quadratic: quadratic.solveQuadratic()","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"activate Quadratic","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"Quadratic -\u003e QuadraticParser","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"activate QuadraticParser","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"activate UI","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"QuadraticParser -\u003e QuadraticParser : findA()","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"activate QuadraticParser #FFBBBB","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"deactivate QuadraticParser","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"QuadraticParser -\u003e QuadraticParser : findB()","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"activate QuadraticParser #FFBBBB","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"deactivate QuadraticParser","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"QuadraticParser -\u003e QuadraticParser : findC()","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"activate QuadraticParser #FFBBBB","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"deactivate QuadraticParser","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"QuadraticParser --\u003e Quadratic","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"deactivate QuadraticParser","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"Quadratic -\u003e Quadratic: quadraticFormula()","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"activate Quadratic #FFBBBB","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"deactivate Quadratic","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"Quadratic -\u003e Quadratic: minMaxPointFinder()","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"activate Quadratic #FFBBBB","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"deactivate Quadratic","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"Quadratic -\u003e Quadratic: printAnswer()","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"activate Quadratic #FFBBBB","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"Quadratic -\u003e UI: Ui.printQuadraticAnswer()","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"activate UI #FFBBBB","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"UI --\u003e Quadratic","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"deactivate UI","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"deactivate Quadratic","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"opt Exceptions","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"Quadratic -\u003e UI: printQuadraticFormatError()","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"activate UI #FFBBBB","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"UI --\u003e Quadratic","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"deactivate UI","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"end opt","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"Quadratic --\u003e Command","lastModifiedDate":"2023-04-01"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"deactivate Quadratic","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"@enduml","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"khooyourun":42}},{"path":"docs/UmlFiles/TrigoGraph.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"[-\u003eTrigoGraph: startGraphAnalysis()","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"activate TrigoGraph","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph-\u003e TrigoGraphAnalyser**:TrigoGraphAnalyser(trigoEqn)","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"activate TrigoGraphAnalyser","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"TrigoGraphAnalyser --\u003e TrigoGraph","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"deactivate TrigoGraphAnalyser","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"opt analyser.canStartAnalyser","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph -\u003e TrigoGraph :getGraphDetails(analyser)","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"activate TrigoGraph","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph -\u003e TrigoGraphAnalyser: getAmplitude()","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"activate TrigoGraphAnalyser","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"deactivate TrigoGraphAnalyser","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph -\u003e TrigoGraphAnalyser: getFreq()","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"activate TrigoGraphAnalyser","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"deactivate TrigoGraphAnalyser","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph -\u003e TrigoGraphAnalyser: getPhase()","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"activate TrigoGraphAnalyser","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"deactivate TrigoGraphAnalyser","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph -\u003e TrigoGraphAnalyser: getVerticalShift()","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"activate TrigoGraphAnalyser","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"deactivate TrigoGraphAnalyser","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph -\u003e TrigoGraphAnalyser: getTrigonometry()","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"activate TrigoGraphAnalyser","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"deactivate TrigoGraphAnalyser","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph -\u003e TrigoGraph","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"deactivate TrigoGraph","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph -\u003e TrigoGraph: printGraphDetails()","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"activate TrigoGraph","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph -\u003e Ui: printAmplitude(amplitude)","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"activate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"deactivate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph -\u003e Ui: printFrequency(frequency)","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"activate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"deactivate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph -\u003e Ui: printPhase(phase)","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"activate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"deactivate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph -\u003e Ui: printVerticalShift(verticalShift)","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"activate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"deactivate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph -\u003e TrigoGraph","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"deactivate TrigoGraph","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph -\u003e TrigoGraphVisualiser**: TrigoGraphVisualiser(amplitude,phase,frequency,verticalShift,trig)","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"activate TrigoGraphVisualiser","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"TrigoGraphVisualiser --\u003e\u003e TrigoGraph","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"deactivate TrigoGraphVisualiser","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph -\u003e TrigoGraphVisualiser: startVisualiser()","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"YC-Michael"},"content":"activate TrigoGraphVisualiser","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"YC-Michael"},"content":"deactivate TrigoGraphVisualiser","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"YC-Michael"},"content":"end opt","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"YC-Michael"},"content":"deactivate TrigoGraph","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"YC-Michael"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"YC-Michael":75}},{"path":"docs/UmlFiles/UserInputHandlingClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"class BadMaths {","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"    + commandChecker()","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"    + main()","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"class Parser {","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"    # userInput: String","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"    + getCommand(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    + getToDo(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"class Ui {","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    + printIncorrectFormatEntered()","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    + printWelcomeMessage()","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"class Command {","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"    # command: String","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    # toDo: String","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"    + setCommand()","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    + setToDo()","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"    + executeCommand()","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"Parser \u003c-- BadMaths","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"Command \"1\" \u003c-- BadMaths","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"Ui \"1\" \u003c-- BadMaths","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"khooyourun":33}},{"path":"docs/UmlFiles/graph_class_diagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"@startuml","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"class TrigoGraph {","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"    - trigoEqn: String","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"    - amplitude: double","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"    - frequency: double","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"    - phase: double","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"    - verticalShift: double","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    - trig: String","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"    + TrigoGraph: void(trigoEqn)","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"    + startGraphAnalysis: void()","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"    + getGraphDetails: void(analyser)","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"    + printGraphDetails: void()","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"class TrigoGraphAnalyser {","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    - trigoEqn: String","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"    - amplitude: double","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"    - freq: double","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"    - phase: double","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"    - verticalShift: double","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"    - trig: String","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"    + canStartAnalyser: boolean()","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"class TrigoGraphVisualiser {","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"    - amplitude: double","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"    - freqInHz: double","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"    - phase: double","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"    - verticalShift: double","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"    - trig: String","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"    + startVisualiser: void()","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"    # paintComponent: void(g)","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"class Ui {","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"    + printIncorrectFormatEntered: void()","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"    + printAmplitude: void(amplitude: double)","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"    + printFrequency: void(frequency: double)","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"class JFrame","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"abstract Graphics","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph ..\u003e Ui","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph --\u003e \"visualiser 0..1\"TrigoGraphVisualiser","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"TrigoGraph --\u003e \"analyser 0..1\"TrigoGraphAnalyser","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"TrigoGraphVisualiser --\u003e JFrame","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"TrigoGraphVisualiser ..\u003e Graphics","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"@enduml","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"YC-Michael":51}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"# GitHub User Guide for BadMaths ➕➖✖️➗","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"## Table of Contents:","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"* [GitHub User Guide for BadMaths ➕➖✖️➗](#github-user-guide-for-badmaths-)","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"  * [Table of Contents:](#table-of-contents-)","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"  * [Introduction 🧮](#introduction-)","lastModifiedDate":"2023-04-01"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"  * [Quick Start](#quick-start)","lastModifiedDate":"2023-04-01"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"  * [Features](#features)","lastModifiedDate":"2023-04-01"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"    * [1) Graph Analyser and Visualiser: `Graph`](#1--graph-analyser-and-visualiser--graph)","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"    * [2) Matrix Calculation: `Matrix`](#2--matrix-calculation--matrix)","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    * [3) Store Notes: `Store`](#3--store-notes--store)","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"    * [4) Display All Notes: `List`](#4--display-all-notes--list)","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    * [5) Display A Specific Note: `List \u003cindex\u003e`](#5--display-a-specific-note--list-index)","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"    * [6) Delete Notes: `Delete \u003cindex\u003e`](#6--delete-notes--delete-index)","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    * [7) Clear All Notes Stored In Notes List `Clear`](#7--clear-all-notes-stored-in-notes-list-clear)","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    * [8) Mark Notes: `Mark`](#8--mark-notes--mark)","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    * [9) Unmark Notes: `Unmark`](#9--unmark-notes--unmark)","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"    * [10) List All Items Marked As Completed: `FindMark`](#10--list-all-items-marked-as-completed--findmark)","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    * [11) List All Notes That Are Not Marked As Completed: `FindUnmark`](#11--list-all-notes-that-are-not-marked-as-completed--findunmark)","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"    * [12) Find Notes Using Keyword: `FindInfo`](#12--find-notes-using-keyword--findinfo)","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    * [13) Prioritize A Note](#13--prioritize-a-note)","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"    * [14) Display All Notes Based On All Priority Types:](#14--display-all-notes-based-on-all-priority-types-)","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    * [15) Display All Notes Of A Certain Priority Type: `FindPrior`](#15--display-all-notes-of-a-certain-priority-type--findprior)","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"    * [16) Solving Quadratic Equations: `Quadratic`](#16--solving-quadratic-equations--quadratic)","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    * [17) Command History `History`](#17--command-history-history)","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"    * [18) Help Manual `Help`](#18--help-manual-help)","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"    * [19) Exit BadMaths `Bye`](#19--exit-badmaths-bye)","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"  * [FAQ](#faq)","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"  * [Command Summary](#command-summary)","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"## Introduction 🧮","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"Hello! Welcome to BadMaths! BadMaths is an integrated study tool that performs Mathematical Operations and contains","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"various features for note-taking.","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"To help you get started, our team has put together this user guide to guide you on","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"the steps to operate BadMaths for your study woes.","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"Before you start using BadMaths, make sure you have the following ready!","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"2. Down the latest version of `BadMaths` from [here](https://github.com/AY2223S2-CS2113-F10-2/tp.git).","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"### 1) Graph Analyser and Visualiser: `Graph`","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"This feature accepts a trigonometry equation (Sinusoidal signal) and outputs the amplitude, frequency, phase, and vertical shift.","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"It also displays the image of the corresponding graph. ","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"Format: `Graph [Amplitude]*[Trigo]([Frequency]*x[sign][PhaseShift])[sign][VerticalShift]`","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"* `Amplitude` can be any positive number. E.g. `15.5`, `4`, `0`","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"* `Trigo` can be sin, cos or tan. ","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"* `Frequency` can be any positive integer (more than 0). E.g. `100`","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"  * When entering frequency, one can include 𝜋 by typing `2*pi*x` instead of `6.283*x`","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"* `PhaseShift`, `VerticalShift` can be any positive number. E.g. `15.1`, `4`, `0`,`1`","lastModifiedDate":"2023-04-03"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"* `sign` can be + or - .","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"* `[` and `]` are not needed when entering the input.","lastModifiedDate":"2023-04-01"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"* Some form of elimination is possible: ","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"  * When `Amplitude` is 1, `1*cos(1*x)` can be shortened to `cos(1*x)`","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"YC-Michael"},"content":"  * When `PhaseShift` or `verticalShift` is 0, `[sign][PhaseShift]` or `[sign][VerticalShift]` are not needed.","lastModifiedDate":"2023-04-03"},{"lineNumber":67,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"YC-Michael"},"content":"**Note: Accuracy of graph drawn is up to 4 digits (Thousand place) for numerical inputs. E.g. `9999`.**","lastModifiedDate":"2023-04-01"},{"lineNumber":69,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":70,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":71,"author":{"gitId":"YC-Michael"},"content":"Example input 1:","lastModifiedDate":"2023-04-03"},{"lineNumber":72,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"YC-Michael"},"content":"Graph 2985*sin(5999*x+2665)-8678","lastModifiedDate":"2023-04-01"},{"lineNumber":74,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-04-01"},{"lineNumber":75,"author":{"gitId":"YC-Michael"},"content":"Example output 1:","lastModifiedDate":"2023-04-03"},{"lineNumber":76,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"YC-Michael"},"content":"This is the amplitude: 2985.0","lastModifiedDate":"2023-04-03"},{"lineNumber":78,"author":{"gitId":"YC-Michael"},"content":"This is the freq (Hz): 954.7705036082801","lastModifiedDate":"2023-04-03"},{"lineNumber":79,"author":{"gitId":"YC-Michael"},"content":"This is the phase: 2665.0","lastModifiedDate":"2023-04-03"},{"lineNumber":80,"author":{"gitId":"YC-Michael"},"content":"This is the vertical shift: -8678.0","lastModifiedDate":"2023-04-03"},{"lineNumber":81,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-04-03"},{"lineNumber":82,"author":{"gitId":"YC-Michael"},"content":"![img_4.png](ImagesForUserGuide/Graph_eg_output_1.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":84,"author":{"gitId":"YC-Michael"},"content":"Example input 2:","lastModifiedDate":"2023-04-03"},{"lineNumber":85,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-04-01"},{"lineNumber":86,"author":{"gitId":"YC-Michael"},"content":"Graph 2*sin(5*pi*x-2)+5.6","lastModifiedDate":"2023-04-01"},{"lineNumber":87,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"YC-Michael"},"content":"Example output 2:","lastModifiedDate":"2023-04-03"},{"lineNumber":89,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-04-03"},{"lineNumber":90,"author":{"gitId":"YC-Michael"},"content":"This is the amplitude: 2.0","lastModifiedDate":"2023-04-03"},{"lineNumber":91,"author":{"gitId":"YC-Michael"},"content":"This is the freq (Hz): 2.5","lastModifiedDate":"2023-04-03"},{"lineNumber":92,"author":{"gitId":"YC-Michael"},"content":"This is the phase: -2.0","lastModifiedDate":"2023-04-03"},{"lineNumber":93,"author":{"gitId":"YC-Michael"},"content":"This is the vertical shift: 5.6","lastModifiedDate":"2023-04-03"},{"lineNumber":94,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"YC-Michael"},"content":"![img_5.png](ImagesForUserGuide/Graph_eg_output_2.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":97,"author":{"gitId":"YC-Michael"},"content":"Example input 3: ","lastModifiedDate":"2023-04-03"},{"lineNumber":98,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-04-03"},{"lineNumber":99,"author":{"gitId":"YC-Michael"},"content":"Graph cos(5*x)","lastModifiedDate":"2023-04-03"},{"lineNumber":100,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-04-03"},{"lineNumber":101,"author":{"gitId":"YC-Michael"},"content":"Example output 3:","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-04-03"},{"lineNumber":103,"author":{"gitId":"YC-Michael"},"content":"This is the amplitude: 1.0","lastModifiedDate":"2023-04-03"},{"lineNumber":104,"author":{"gitId":"YC-Michael"},"content":"This is the freq (Hz): 0.7957747154594768","lastModifiedDate":"2023-04-03"},{"lineNumber":105,"author":{"gitId":"YC-Michael"},"content":"This is the phase: 0.0","lastModifiedDate":"2023-04-03"},{"lineNumber":106,"author":{"gitId":"YC-Michael"},"content":"This is the vertical shift: 0.0","lastModifiedDate":"2023-04-03"},{"lineNumber":107,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-04-03"},{"lineNumber":108,"author":{"gitId":"YC-Michael"},"content":"![img_6.png](ImagesForUserGuide/Graph_eg_output_3.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"WilsonLee2000"},"content":"### 2) Matrix Calculation: `Matrix`","lastModifiedDate":"2023-04-02"},{"lineNumber":111,"author":{"gitId":"0nandon"},"content":"This feature accepts matrix equation and outputs calculation result.","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"0nandon"},"content":"Format: `Matrix [Matrix] [operator] [Matrix]`","lastModifiedDate":"2023-04-06"},{"lineNumber":114,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"0nandon"},"content":"* `[Matrix]` is the 2 dimensional matrix with integer elements. When you declare the matrix, you should follow the matrix format below:","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"0nandon"},"content":"  ```","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"0nandon"},"content":"  [1,2;3,4]","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"0nandon"},"content":"  ```","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"0nandon"},"content":"   * You should separate the elements with comma (,) in the single row.","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"0nandon"},"content":"   * You should separate the rows with the semicolons.","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"0nandon"},"content":"  ```","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"0nandon"},"content":"  [1,2;3,4].T","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"0nandon"},"content":"  ```","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"0nandon"},"content":"   * You can declare transposed matrix with the transpose annotation `.T`.","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"0nandon"},"content":"   * Transposed matrix above is equal with matrix `[1,3;2,4]`.","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"0nandon"},"content":"* `[operator]` is the matrix operator. You can use 4 operators below:","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"0nandon"},"content":"   * `.*` : matrix multiplication","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"0nandon"},"content":"   * `*` : element wise product","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"0nandon"},"content":"   * `+` : matrix addition","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"0nandon"},"content":"   * `-` : matrix subtraction","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"0nandon"},"content":"#### Examples for the matrix multiplication","lastModifiedDate":"2023-04-06"},{"lineNumber":135,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":136,"author":{"gitId":"0nandon"},"content":"Input:","lastModifiedDate":"2023-04-06"},{"lineNumber":137,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":138,"author":{"gitId":"0nandon"},"content":" Matrix [1,2;3,4] .* [4,5;6,7]","lastModifiedDate":"2023-04-06"},{"lineNumber":139,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":140,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":141,"author":{"gitId":"0nandon"},"content":"Expected output:","lastModifiedDate":"2023-04-06"},{"lineNumber":142,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":143,"author":{"gitId":"0nandon"},"content":" Result.","lastModifiedDate":"2023-04-06"},{"lineNumber":144,"author":{"gitId":"0nandon"},"content":"     1. shape : 2 x 2","lastModifiedDate":"2023-04-06"},{"lineNumber":145,"author":{"gitId":"0nandon"},"content":"     2. value : ","lastModifiedDate":"2023-04-06"},{"lineNumber":146,"author":{"gitId":"0nandon"},"content":"         0) 16 19 ","lastModifiedDate":"2023-04-06"},{"lineNumber":147,"author":{"gitId":"0nandon"},"content":"         1) 36 43 ","lastModifiedDate":"2023-04-06"},{"lineNumber":148,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":149,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":150,"author":{"gitId":"0nandon"},"content":"#### Examples for the matrix multiplication with transpose","lastModifiedDate":"2023-04-06"},{"lineNumber":151,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":152,"author":{"gitId":"0nandon"},"content":"Input:","lastModifiedDate":"2023-04-06"},{"lineNumber":153,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":154,"author":{"gitId":"0nandon"},"content":" Matrix [1,2;3,4] .* [4,5;6,7].T","lastModifiedDate":"2023-04-06"},{"lineNumber":155,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":157,"author":{"gitId":"0nandon"},"content":"output:","lastModifiedDate":"2023-04-06"},{"lineNumber":158,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"0nandon"},"content":" Result.","lastModifiedDate":"2023-04-06"},{"lineNumber":160,"author":{"gitId":"0nandon"},"content":"     1. shape : 2 x 2","lastModifiedDate":"2023-04-06"},{"lineNumber":161,"author":{"gitId":"0nandon"},"content":"     2. value : ","lastModifiedDate":"2023-04-06"},{"lineNumber":162,"author":{"gitId":"0nandon"},"content":"         0) 14 20 ","lastModifiedDate":"2023-04-06"},{"lineNumber":163,"author":{"gitId":"0nandon"},"content":"         1) 32 46 ","lastModifiedDate":"2023-04-06"},{"lineNumber":164,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":165,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":166,"author":{"gitId":"0nandon"},"content":"#### Examples for the matrix element wise product","lastModifiedDate":"2023-04-06"},{"lineNumber":167,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":168,"author":{"gitId":"0nandon"},"content":"Input:","lastModifiedDate":"2023-04-06"},{"lineNumber":169,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":170,"author":{"gitId":"0nandon"},"content":" Matrix [1,2;3,4] * [4,5;6,7]","lastModifiedDate":"2023-04-06"},{"lineNumber":171,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":172,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":173,"author":{"gitId":"0nandon"},"content":"output:","lastModifiedDate":"2023-04-06"},{"lineNumber":174,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":175,"author":{"gitId":"0nandon"},"content":" Result.","lastModifiedDate":"2023-04-06"},{"lineNumber":176,"author":{"gitId":"0nandon"},"content":"     1. shape : 2 x 2","lastModifiedDate":"2023-04-06"},{"lineNumber":177,"author":{"gitId":"0nandon"},"content":"     2. value : ","lastModifiedDate":"2023-04-06"},{"lineNumber":178,"author":{"gitId":"0nandon"},"content":"         0) 4 10 ","lastModifiedDate":"2023-04-06"},{"lineNumber":179,"author":{"gitId":"0nandon"},"content":"         1) 18 28 ","lastModifiedDate":"2023-04-06"},{"lineNumber":180,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":181,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":182,"author":{"gitId":"0nandon"},"content":"#### Examples for the matrix addition","lastModifiedDate":"2023-04-06"},{"lineNumber":183,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":184,"author":{"gitId":"0nandon"},"content":"Input:","lastModifiedDate":"2023-04-06"},{"lineNumber":185,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":186,"author":{"gitId":"0nandon"},"content":" Matrix [1,2;3,4] + [4,5;6,7]","lastModifiedDate":"2023-04-06"},{"lineNumber":187,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":188,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":189,"author":{"gitId":"0nandon"},"content":"output:","lastModifiedDate":"2023-04-06"},{"lineNumber":190,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":191,"author":{"gitId":"0nandon"},"content":" Result.","lastModifiedDate":"2023-04-06"},{"lineNumber":192,"author":{"gitId":"0nandon"},"content":"     1. shape : 2 x 2","lastModifiedDate":"2023-04-06"},{"lineNumber":193,"author":{"gitId":"0nandon"},"content":"     2. value : ","lastModifiedDate":"2023-04-06"},{"lineNumber":194,"author":{"gitId":"0nandon"},"content":"         0) 5 7 ","lastModifiedDate":"2023-04-06"},{"lineNumber":195,"author":{"gitId":"0nandon"},"content":"         1) 9 11 ","lastModifiedDate":"2023-04-06"},{"lineNumber":196,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":197,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":198,"author":{"gitId":"0nandon"},"content":"#### Examples for the matrix subtraction","lastModifiedDate":"2023-04-06"},{"lineNumber":199,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":200,"author":{"gitId":"0nandon"},"content":"Input:","lastModifiedDate":"2023-04-06"},{"lineNumber":201,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":202,"author":{"gitId":"0nandon"},"content":" Matrix [1,2;3,4] - [4,5;6,7]","lastModifiedDate":"2023-04-06"},{"lineNumber":203,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":204,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":205,"author":{"gitId":"0nandon"},"content":"output:","lastModifiedDate":"2023-04-06"},{"lineNumber":206,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":207,"author":{"gitId":"0nandon"},"content":" Result.","lastModifiedDate":"2023-04-06"},{"lineNumber":208,"author":{"gitId":"0nandon"},"content":"     1. shape : 2 x 2","lastModifiedDate":"2023-04-06"},{"lineNumber":209,"author":{"gitId":"0nandon"},"content":"     2. value : ","lastModifiedDate":"2023-04-06"},{"lineNumber":210,"author":{"gitId":"0nandon"},"content":"         0) -3 -3 ","lastModifiedDate":"2023-04-06"},{"lineNumber":211,"author":{"gitId":"0nandon"},"content":"         1) -3 -3 ","lastModifiedDate":"2023-04-06"},{"lineNumber":212,"author":{"gitId":"0nandon"},"content":" ```","lastModifiedDate":"2023-04-06"},{"lineNumber":213,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":214,"author":{"gitId":"WilsonLee2000"},"content":"### 3) Store Notes: `Store`","lastModifiedDate":"2023-04-02"},{"lineNumber":215,"author":{"gitId":"WilsonLee2000"},"content":"* Adds a new item to the Notes list.","lastModifiedDate":"2023-04-02"},{"lineNumber":216,"author":{"gitId":"WilsonLee2000"},"content":"* Format: `Store \u003citem description\u003e`","lastModifiedDate":"2023-04-02"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":218,"author":{"gitId":"WilsonLee2000"},"content":"Example input:","lastModifiedDate":"2023-04-02"},{"lineNumber":219,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":220,"author":{"gitId":"WilsonLee2000"},"content":"Store isNote","lastModifiedDate":"2023-04-02"},{"lineNumber":221,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":222,"author":{"gitId":"WilsonLee2000"},"content":"Expected output:","lastModifiedDate":"2023-04-02"},{"lineNumber":223,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":224,"author":{"gitId":"WilsonLee2000"},"content":"You have added this note: ","lastModifiedDate":"2023-04-02"},{"lineNumber":225,"author":{"gitId":"WilsonLee2000"},"content":"isNote","lastModifiedDate":"2023-04-02"},{"lineNumber":226,"author":{"gitId":"WilsonLee2000"},"content":"Now you have \u003cnumber\u003e of notes in the list","lastModifiedDate":"2023-04-02"},{"lineNumber":227,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":228,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":229,"author":{"gitId":"WilsonLee2000"},"content":"### 4) Display All Notes: `List`","lastModifiedDate":"2023-04-02"},{"lineNumber":230,"author":{"gitId":"WilsonLee2000"},"content":"* Display a list of all items stored by user.","lastModifiedDate":"2023-04-02"},{"lineNumber":231,"author":{"gitId":"WilsonLee2000"},"content":"* Format: `List`","lastModifiedDate":"2023-04-02"},{"lineNumber":232,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":233,"author":{"gitId":"WilsonLee2000"},"content":"Example input:","lastModifiedDate":"2023-04-02"},{"lineNumber":234,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":235,"author":{"gitId":"WilsonLee2000"},"content":"List","lastModifiedDate":"2023-04-02"},{"lineNumber":236,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":237,"author":{"gitId":"WilsonLee2000"},"content":"Expected output:","lastModifiedDate":"2023-04-02"},{"lineNumber":238,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":239,"author":{"gitId":"WilsonLee2000"},"content":"Here are the notes you have stored:","lastModifiedDate":"2023-04-02"},{"lineNumber":240,"author":{"gitId":"WilsonLee2000"},"content":"1. [LOW][N][0]note_item_1","lastModifiedDate":"2023-04-02"},{"lineNumber":241,"author":{"gitId":"WilsonLee2000"},"content":"2. [LOW][N][0]note_item_2","lastModifiedDate":"2023-04-02"},{"lineNumber":242,"author":{"gitId":"WilsonLee2000"},"content":"3. [LOW][N][0]note_item_3","lastModifiedDate":"2023-04-02"},{"lineNumber":243,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":244,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":245,"author":{"gitId":"WilsonLee2000"},"content":"### 5) Display A Specific Note: `List \u003cindex\u003e`","lastModifiedDate":"2023-04-02"},{"lineNumber":246,"author":{"gitId":"WilsonLee2000"},"content":"* Display a particular item in the Notes list through index of list item.","lastModifiedDate":"2023-04-02"},{"lineNumber":247,"author":{"gitId":"WilsonLee2000"},"content":"* Format: `List \u003cindex of list item\u003e`","lastModifiedDate":"2023-04-02"},{"lineNumber":248,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":249,"author":{"gitId":"WilsonLee2000"},"content":"Example input:","lastModifiedDate":"2023-04-02"},{"lineNumber":250,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":251,"author":{"gitId":"WilsonLee2000"},"content":"List 2","lastModifiedDate":"2023-04-02"},{"lineNumber":252,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":253,"author":{"gitId":"WilsonLee2000"},"content":"Expected output:","lastModifiedDate":"2023-04-02"},{"lineNumber":254,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":255,"author":{"gitId":"WilsonLee2000"},"content":"Here is the note you are looking for","lastModifiedDate":"2023-04-02"},{"lineNumber":256,"author":{"gitId":"WilsonLee2000"},"content":"2. [LOW][N][0]note_item_2","lastModifiedDate":"2023-04-02"},{"lineNumber":257,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":258,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":259,"author":{"gitId":"WilsonLee2000"},"content":"### 6) Delete Notes: `Delete \u003cindex\u003e`","lastModifiedDate":"2023-04-02"},{"lineNumber":260,"author":{"gitId":"WilsonLee2000"},"content":"* Delete a particular item stored in the Notes list through index of list item.","lastModifiedDate":"2023-04-02"},{"lineNumber":261,"author":{"gitId":"WilsonLee2000"},"content":"* Format: `Delete. \u003cindex of list item\u003e`","lastModifiedDate":"2023-04-02"},{"lineNumber":262,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":263,"author":{"gitId":"WilsonLee2000"},"content":"Example input:","lastModifiedDate":"2023-04-02"},{"lineNumber":264,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":265,"author":{"gitId":"WilsonLee2000"},"content":"Delete 2","lastModifiedDate":"2023-04-02"},{"lineNumber":266,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":267,"author":{"gitId":"WilsonLee2000"},"content":"Expected output:","lastModifiedDate":"2023-04-02"},{"lineNumber":268,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":269,"author":{"gitId":"WilsonLee2000"},"content":"You have removed this note:","lastModifiedDate":"2023-04-02"},{"lineNumber":270,"author":{"gitId":"WilsonLee2000"},"content":"[LOW][N][0]note_item_2","lastModifiedDate":"2023-04-02"},{"lineNumber":271,"author":{"gitId":"WilsonLee2000"},"content":"Now you have \u003cnumber\u003e notes in the list.","lastModifiedDate":"2023-04-02"},{"lineNumber":272,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":273,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":274,"author":{"gitId":"WilsonLee2000"},"content":"### 7) Clear All Notes Stored In Notes List `Clear`","lastModifiedDate":"2023-04-02"},{"lineNumber":275,"author":{"gitId":"WilsonLee2000"},"content":"* Delete all note items stored in Notes List.","lastModifiedDate":"2023-04-02"},{"lineNumber":276,"author":{"gitId":"WilsonLee2000"},"content":"* Format: `Clear.`","lastModifiedDate":"2023-04-02"},{"lineNumber":277,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":278,"author":{"gitId":"WilsonLee2000"},"content":"Example input:","lastModifiedDate":"2023-04-02"},{"lineNumber":279,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":280,"author":{"gitId":"WilsonLee2000"},"content":"Clear","lastModifiedDate":"2023-04-02"},{"lineNumber":281,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":282,"author":{"gitId":"WilsonLee2000"},"content":"Expected output:","lastModifiedDate":"2023-04-02"},{"lineNumber":283,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":284,"author":{"gitId":"WilsonLee2000"},"content":"File content cleared successfully!","lastModifiedDate":"2023-04-02"},{"lineNumber":285,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":286,"author":{"gitId":"WilsonLee2000"},"content":"### 8) Mark Notes: `Mark`","lastModifiedDate":"2023-04-02"},{"lineNumber":287,"author":{"gitId":"WilsonLee2000"},"content":"* Mark a particular item in Notes List as completed.","lastModifiedDate":"2023-04-02"},{"lineNumber":288,"author":{"gitId":"WilsonLee2000"},"content":"* The mark bracket will change from `[N]` to `[Y]`.","lastModifiedDate":"2023-04-02"},{"lineNumber":289,"author":{"gitId":"WilsonLee2000"},"content":"* Format: `Mark \u003cnumber\u003e`","lastModifiedDate":"2023-04-02"},{"lineNumber":290,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":291,"author":{"gitId":"WilsonLee2000"},"content":"Example input:","lastModifiedDate":"2023-04-02"},{"lineNumber":292,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":293,"author":{"gitId":"WilsonLee2000"},"content":"Mark 2","lastModifiedDate":"2023-04-02"},{"lineNumber":294,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":295,"author":{"gitId":"WilsonLee2000"},"content":"Expected output:","lastModifiedDate":"2023-04-02"},{"lineNumber":296,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":297,"author":{"gitId":"WilsonLee2000"},"content":"You have marked this note as done:","lastModifiedDate":"2023-04-02"},{"lineNumber":298,"author":{"gitId":"WilsonLee2000"},"content":"[LOW][Y][0]note_item_2","lastModifiedDate":"2023-04-02"},{"lineNumber":299,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":300,"author":{"gitId":"WilsonLee2000"},"content":"### 9) Unmark Notes: `Unmark`","lastModifiedDate":"2023-04-02"},{"lineNumber":301,"author":{"gitId":"WilsonLee2000"},"content":"* Unmark a particular item in Notes List as incomplete.","lastModifiedDate":"2023-04-02"},{"lineNumber":302,"author":{"gitId":"WilsonLee2000"},"content":"* The mark bracket will change from `[Y]` to `[N]`.","lastModifiedDate":"2023-04-02"},{"lineNumber":303,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":304,"author":{"gitId":"WilsonLee2000"},"content":"* Format: `Unmark \u003cnumber\u003e`","lastModifiedDate":"2023-04-02"},{"lineNumber":305,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":306,"author":{"gitId":"WilsonLee2000"},"content":"Example input:","lastModifiedDate":"2023-04-02"},{"lineNumber":307,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":308,"author":{"gitId":"WilsonLee2000"},"content":"Unmark 2","lastModifiedDate":"2023-04-02"},{"lineNumber":309,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":310,"author":{"gitId":"WilsonLee2000"},"content":"Expected output:","lastModifiedDate":"2023-04-02"},{"lineNumber":311,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":312,"author":{"gitId":"WilsonLee2000"},"content":"You have unmarked this note:","lastModifiedDate":"2023-04-02"},{"lineNumber":313,"author":{"gitId":"WilsonLee2000"},"content":"[LOW][N][0]note_item_2","lastModifiedDate":"2023-04-02"},{"lineNumber":314,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":315,"author":{"gitId":"WilsonLee2000"},"content":"### 10) List All Items Marked As Completed: `FindMark`","lastModifiedDate":"2023-04-02"},{"lineNumber":316,"author":{"gitId":"WilsonLee2000"},"content":"* Display a list of all note items marked as completed.","lastModifiedDate":"2023-04-02"},{"lineNumber":317,"author":{"gitId":"WilsonLee2000"},"content":"* All items with mark bracket `[Y]` will be displayed.","lastModifiedDate":"2023-04-02"},{"lineNumber":318,"author":{"gitId":"WilsonLee2000"},"content":"* Format: `FindMark`","lastModifiedDate":"2023-04-02"},{"lineNumber":319,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":320,"author":{"gitId":"WilsonLee2000"},"content":"Example input:","lastModifiedDate":"2023-04-02"},{"lineNumber":321,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":322,"author":{"gitId":"WilsonLee2000"},"content":"FindMark","lastModifiedDate":"2023-04-02"},{"lineNumber":323,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":324,"author":{"gitId":"WilsonLee2000"},"content":"Expected output:","lastModifiedDate":"2023-04-02"},{"lineNumber":325,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":326,"author":{"gitId":"WilsonLee2000"},"content":"Here are the notes you are searching for:","lastModifiedDate":"2023-04-02"},{"lineNumber":327,"author":{"gitId":"WilsonLee2000"},"content":"1. [LOW][Y][0]note_item_1","lastModifiedDate":"2023-04-02"},{"lineNumber":328,"author":{"gitId":"WilsonLee2000"},"content":"2. [LOW][Y][0]note_item_3","lastModifiedDate":"2023-04-02"},{"lineNumber":329,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":330,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":331,"author":{"gitId":"WilsonLee2000"},"content":"### 11) List All Notes That Are Not Marked As Completed: `FindUnmark`","lastModifiedDate":"2023-04-02"},{"lineNumber":332,"author":{"gitId":"WilsonLee2000"},"content":"* Display a list of all incomplete note items.","lastModifiedDate":"2023-04-02"},{"lineNumber":333,"author":{"gitId":"WilsonLee2000"},"content":"* All items with mark bracket `[N]` will be displayed.","lastModifiedDate":"2023-04-02"},{"lineNumber":334,"author":{"gitId":"WilsonLee2000"},"content":"* Format: `FindUnmark`","lastModifiedDate":"2023-04-02"},{"lineNumber":335,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":336,"author":{"gitId":"WilsonLee2000"},"content":"Example input:","lastModifiedDate":"2023-04-02"},{"lineNumber":337,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":338,"author":{"gitId":"WilsonLee2000"},"content":"FindUnmark","lastModifiedDate":"2023-04-02"},{"lineNumber":339,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":340,"author":{"gitId":"WilsonLee2000"},"content":"Expected output:","lastModifiedDate":"2023-04-02"},{"lineNumber":341,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":342,"author":{"gitId":"WilsonLee2000"},"content":"Here are the notes you are searching for:","lastModifiedDate":"2023-04-02"},{"lineNumber":343,"author":{"gitId":"WilsonLee2000"},"content":"1. [LOW][N][0]note_item_2","lastModifiedDate":"2023-04-02"},{"lineNumber":344,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":345,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":346,"author":{"gitId":"WilsonLee2000"},"content":"### 12) Find Notes Using Keyword: `FindInfo`","lastModifiedDate":"2023-04-02"},{"lineNumber":347,"author":{"gitId":"WilsonLee2000"},"content":"* Find items stored in Notes by searching for a keyword.","lastModifiedDate":"2023-04-02"},{"lineNumber":348,"author":{"gitId":"WilsonLee2000"},"content":"* Format: `FindInfo \u003cdescription\u003e`","lastModifiedDate":"2023-04-02"},{"lineNumber":349,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":350,"author":{"gitId":"WilsonLee2000"},"content":"Assuming that the List is as follows:","lastModifiedDate":"2023-04-02"},{"lineNumber":351,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":352,"author":{"gitId":"WilsonLee2000"},"content":"1. [LOW][N][0]Add","lastModifiedDate":"2023-04-02"},{"lineNumber":353,"author":{"gitId":"WilsonLee2000"},"content":"2. [LOW][N][0]Subtract","lastModifiedDate":"2023-04-02"},{"lineNumber":354,"author":{"gitId":"WilsonLee2000"},"content":"3. [LOW][N][0]Multiply","lastModifiedDate":"2023-04-02"},{"lineNumber":355,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":356,"author":{"gitId":"WilsonLee2000"},"content":"Example input:","lastModifiedDate":"2023-04-02"},{"lineNumber":357,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":358,"author":{"gitId":"WilsonLee2000"},"content":"FindInfo Add","lastModifiedDate":"2023-04-02"},{"lineNumber":359,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":360,"author":{"gitId":"WilsonLee2000"},"content":"Expected output:","lastModifiedDate":"2023-04-02"},{"lineNumber":361,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":362,"author":{"gitId":"WilsonLee2000"},"content":"Here are the notes you are searching for:","lastModifiedDate":"2023-04-02"},{"lineNumber":363,"author":{"gitId":"WilsonLee2000"},"content":"1. [LOW][N][0]Add","lastModifiedDate":"2023-04-02"},{"lineNumber":364,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":365,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":366,"author":{"gitId":"WilsonLee2000"},"content":"### 13) Prioritize A Note","lastModifiedDate":"2023-04-02"},{"lineNumber":367,"author":{"gitId":"ZiqiuZeng"},"content":"Change the priority of a certain note in the notes list.","lastModifiedDate":"2023-03-29"},{"lineNumber":368,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":369,"author":{"gitId":"WilsonLee2000"},"content":"Format: `\u003cPriority Type\u003e Index`","lastModifiedDate":"2023-04-09"},{"lineNumber":370,"author":{"gitId":"WilsonLee2000"},"content":"Example of usage: `High 1`","lastModifiedDate":"2023-04-09"},{"lineNumber":371,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":372,"author":{"gitId":"ZiqiuZeng"},"content":"* The `\u003cPriority Type\u003e` must be one of the three: `High`, `MEDIUM`, `LOW`.","lastModifiedDate":"2023-03-29"},{"lineNumber":373,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":374,"author":{"gitId":"ZiqiuZeng"},"content":"Example of usage:","lastModifiedDate":"2023-03-29"},{"lineNumber":375,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":376,"author":{"gitId":"WilsonLee2000"},"content":"`High 1`","lastModifiedDate":"2023-04-09"},{"lineNumber":377,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":378,"author":{"gitId":"ZiqiuZeng"},"content":"Expected outcome:","lastModifiedDate":"2023-03-29"},{"lineNumber":379,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":380,"author":{"gitId":"ZiqiuZeng"},"content":"````","lastModifiedDate":"2023-03-29"},{"lineNumber":381,"author":{"gitId":"ZiqiuZeng"},"content":"You have changed its priority to HIGH","lastModifiedDate":"2023-03-29"},{"lineNumber":382,"author":{"gitId":"ZiqiuZeng"},"content":"1: [HIGH][N][0]Note 1","lastModifiedDate":"2023-03-29"},{"lineNumber":383,"author":{"gitId":"ZiqiuZeng"},"content":"````","lastModifiedDate":"2023-03-29"},{"lineNumber":384,"author":{"gitId":"ZiqiuZeng"},"content":"Example of usage:","lastModifiedDate":"2023-03-29"},{"lineNumber":385,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":386,"author":{"gitId":"WilsonLee2000"},"content":"`Medium 3`","lastModifiedDate":"2023-04-09"},{"lineNumber":387,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":388,"author":{"gitId":"ZiqiuZeng"},"content":"Expected outcome:","lastModifiedDate":"2023-03-29"},{"lineNumber":389,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":390,"author":{"gitId":"ZiqiuZeng"},"content":"````","lastModifiedDate":"2023-03-29"},{"lineNumber":391,"author":{"gitId":"ZiqiuZeng"},"content":"You have changed its priority to MEDIUM","lastModifiedDate":"2023-03-29"},{"lineNumber":392,"author":{"gitId":"ZiqiuZeng"},"content":"3: [MEDIUM][N][0]Note 3","lastModifiedDate":"2023-03-29"},{"lineNumber":393,"author":{"gitId":"ZiqiuZeng"},"content":"````","lastModifiedDate":"2023-03-29"},{"lineNumber":394,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":395,"author":{"gitId":"WilsonLee2000"},"content":"### 14) Display All Notes Based On All Priority Types:","lastModifiedDate":"2023-04-02"},{"lineNumber":396,"author":{"gitId":"WilsonLee2000"},"content":"Display all items stored in the Notes List based on the respective priority rankings.","lastModifiedDate":"2023-04-02"},{"lineNumber":397,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":398,"author":{"gitId":"WilsonLee2000"},"content":"Format: `Rank Priority`","lastModifiedDate":"2023-04-09"},{"lineNumber":399,"author":{"gitId":"WilsonLee2000"},"content":"Example of usage: `Rank Priority`","lastModifiedDate":"2023-04-09"},{"lineNumber":400,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":401,"author":{"gitId":"WilsonLee2000"},"content":"### 15) Display All Notes Of A Certain Priority Type: `FindPrior`","lastModifiedDate":"2023-04-02"},{"lineNumber":402,"author":{"gitId":"WilsonLee2000"},"content":"* Find all notes stored in the list based on the priority that users are searching for.","lastModifiedDate":"2023-04-02"},{"lineNumber":403,"author":{"gitId":"WilsonLee2000"},"content":"* Format: `FindPrior \u003cPriority Type\u003e`","lastModifiedDate":"2023-04-02"},{"lineNumber":404,"author":{"gitId":"WilsonLee2000"},"content":"* The `\u003cPriority Type\u003e` must be one of the three types: `High`, `MEDIUM`, `LOW`.","lastModifiedDate":"2023-04-02"},{"lineNumber":405,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":406,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":407,"author":{"gitId":"WilsonLee2000"},"content":"Example input:","lastModifiedDate":"2023-04-02"},{"lineNumber":408,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":409,"author":{"gitId":"WilsonLee2000"},"content":"FindPrior LOW","lastModifiedDate":"2023-04-02"},{"lineNumber":410,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":411,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":412,"author":{"gitId":"WilsonLee2000"},"content":"Expected outcome:","lastModifiedDate":"2023-04-02"},{"lineNumber":413,"author":{"gitId":"WilsonLee2000"},"content":"````","lastModifiedDate":"2023-04-02"},{"lineNumber":414,"author":{"gitId":"WilsonLee2000"},"content":"Here are the notes you are searching for:","lastModifiedDate":"2023-04-02"},{"lineNumber":415,"author":{"gitId":"WilsonLee2000"},"content":"1. [LOW][N][0]note_item_1","lastModifiedDate":"2023-04-02"},{"lineNumber":416,"author":{"gitId":"WilsonLee2000"},"content":"2. [LOW][N][0]note_item_2","lastModifiedDate":"2023-04-02"},{"lineNumber":417,"author":{"gitId":"WilsonLee2000"},"content":"3. [LOW][N][0]note_item_3","lastModifiedDate":"2023-04-02"},{"lineNumber":418,"author":{"gitId":"WilsonLee2000"},"content":"````","lastModifiedDate":"2023-04-02"},{"lineNumber":419,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":420,"author":{"gitId":"khooyourun"},"content":"### 16) Solving Quadratic Equations: `Quadratic`","lastModifiedDate":"2023-04-04"},{"lineNumber":421,"author":{"gitId":"khooyourun"},"content":"Solves for `x` in a quadratic equation.","lastModifiedDate":"2023-03-29"},{"lineNumber":422,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":423,"author":{"gitId":"khooyourun"},"content":"Format: `Quadratic [quadratic equation]`","lastModifiedDate":"2023-04-04"},{"lineNumber":424,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":425,"author":{"gitId":"khooyourun"},"content":"- `Quadratic` must be in this exact format (With uppercase Q)","lastModifiedDate":"2023-04-04"},{"lineNumber":426,"author":{"gitId":"khooyourun"},"content":"- The quadratic equation must look like this: `2x^2 + 2x + 1` with spaces between each value. Both double and integer","lastModifiedDate":"2023-04-05"},{"lineNumber":427,"author":{"gitId":"khooyourun"},"content":"  numbers are acceptable (eg. `-2.5x^2 + 3 + 1`). Inputting just the sign is also acceptable (eg. `-x^2 + x - 1`).","lastModifiedDate":"2023-04-01"},{"lineNumber":428,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":429,"author":{"gitId":"khooyourun"},"content":"Examples:","lastModifiedDate":"2023-03-29"},{"lineNumber":430,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":431,"author":{"gitId":"khooyourun"},"content":"- Input: ","lastModifiedDate":"2023-04-09"},{"lineNumber":432,"author":{"gitId":"khooyourun"},"content":"````","lastModifiedDate":"2023-04-09"},{"lineNumber":433,"author":{"gitId":"khooyourun"},"content":"Quadratic 2x^2 + 2x + 1","lastModifiedDate":"2023-04-09"},{"lineNumber":434,"author":{"gitId":"khooyourun"},"content":"```` ","lastModifiedDate":"2023-04-09"},{"lineNumber":435,"author":{"gitId":"khooyourun"},"content":"- Output:","lastModifiedDate":"2023-04-05"},{"lineNumber":436,"author":{"gitId":"khooyourun"},"content":"````","lastModifiedDate":"2023-04-05"},{"lineNumber":437,"author":{"gitId":"khooyourun"},"content":"x is imaginary.","lastModifiedDate":"2023-04-05"},{"lineNumber":438,"author":{"gitId":"khooyourun"},"content":"````","lastModifiedDate":"2023-04-05"},{"lineNumber":439,"author":{"gitId":"khooyourun"},"content":"- Input: ","lastModifiedDate":"2023-04-09"},{"lineNumber":440,"author":{"gitId":"khooyourun"},"content":"````","lastModifiedDate":"2023-04-09"},{"lineNumber":441,"author":{"gitId":"khooyourun"},"content":"Quadratic x^2 + 4x - 5","lastModifiedDate":"2023-04-09"},{"lineNumber":442,"author":{"gitId":"khooyourun"},"content":"````","lastModifiedDate":"2023-04-09"},{"lineNumber":443,"author":{"gitId":"khooyourun"},"content":"- Output:","lastModifiedDate":"2023-04-05"},{"lineNumber":444,"author":{"gitId":"khooyourun"},"content":"````","lastModifiedDate":"2023-04-05"},{"lineNumber":445,"author":{"gitId":"khooyourun"},"content":"x1 \u003d 1.0 , x2 \u003d -5.0","lastModifiedDate":"2023-04-05"},{"lineNumber":446,"author":{"gitId":"khooyourun"},"content":"There is a minimum point: (-2.0, -9.0)","lastModifiedDate":"2023-04-05"},{"lineNumber":447,"author":{"gitId":"khooyourun"},"content":"````","lastModifiedDate":"2023-04-05"},{"lineNumber":448,"author":{"gitId":"khooyourun"},"content":"- Input: ","lastModifiedDate":"2023-04-09"},{"lineNumber":449,"author":{"gitId":"khooyourun"},"content":"````","lastModifiedDate":"2023-04-09"},{"lineNumber":450,"author":{"gitId":"khooyourun"},"content":"Quadratic x^2 + 3","lastModifiedDate":"2023-04-09"},{"lineNumber":451,"author":{"gitId":"khooyourun"},"content":"````","lastModifiedDate":"2023-04-09"},{"lineNumber":452,"author":{"gitId":"khooyourun"},"content":"- Output:","lastModifiedDate":"2023-04-05"},{"lineNumber":453,"author":{"gitId":"khooyourun"},"content":"````","lastModifiedDate":"2023-04-05"},{"lineNumber":454,"author":{"gitId":"khooyourun"},"content":"Please use the format as shown below:","lastModifiedDate":"2023-04-05"},{"lineNumber":455,"author":{"gitId":"khooyourun"},"content":"ax^2 + bx + c","lastModifiedDate":"2023-04-05"},{"lineNumber":456,"author":{"gitId":"khooyourun"},"content":"````","lastModifiedDate":"2023-04-05"},{"lineNumber":457,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":458,"author":{"gitId":"WilsonLee2000"},"content":"### 17) Command History `History`","lastModifiedDate":"2023-04-05"},{"lineNumber":459,"author":{"gitId":"WilsonLee2000"},"content":"* Display a list of Command History that users have","lastModifiedDate":"2023-04-05"},{"lineNumber":460,"author":{"gitId":"WilsonLee2000"},"content":"  entered during the current programme run session.","lastModifiedDate":"2023-04-05"},{"lineNumber":461,"author":{"gitId":"WilsonLee2000"},"content":"* Format: History","lastModifiedDate":"2023-04-05"},{"lineNumber":462,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":463,"author":{"gitId":"WilsonLee2000"},"content":"Assuming that user have input `Store index` after starting badMaths:","lastModifiedDate":"2023-04-05"},{"lineNumber":464,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":465,"author":{"gitId":"WilsonLee2000"},"content":"Example input:","lastModifiedDate":"2023-04-05"},{"lineNumber":466,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":467,"author":{"gitId":"WilsonLee2000"},"content":"History","lastModifiedDate":"2023-04-05"},{"lineNumber":468,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":469,"author":{"gitId":"WilsonLee2000"},"content":"Expected output:","lastModifiedDate":"2023-04-05"},{"lineNumber":470,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":471,"author":{"gitId":"WilsonLee2000"},"content":"Here are the list of commands that you have entered so far:","lastModifiedDate":"2023-04-05"},{"lineNumber":472,"author":{"gitId":"WilsonLee2000"},"content":"Store index","lastModifiedDate":"2023-04-05"},{"lineNumber":473,"author":{"gitId":"WilsonLee2000"},"content":"History","lastModifiedDate":"2023-04-05"},{"lineNumber":474,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":475,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":476,"author":{"gitId":"WilsonLee2000"},"content":"### 18) Help Manual `Help`","lastModifiedDate":"2023-04-05"},{"lineNumber":477,"author":{"gitId":"WilsonLee2000"},"content":"* Display the content of Help Manual for BadMaths.","lastModifiedDate":"2023-04-02"},{"lineNumber":478,"author":{"gitId":"WilsonLee2000"},"content":"* Format: `Help`","lastModifiedDate":"2023-04-02"},{"lineNumber":479,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":480,"author":{"gitId":"WilsonLee2000"},"content":"Example input:","lastModifiedDate":"2023-04-02"},{"lineNumber":481,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":482,"author":{"gitId":"WilsonLee2000"},"content":"Help","lastModifiedDate":"2023-04-02"},{"lineNumber":483,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":484,"author":{"gitId":"WilsonLee2000"},"content":"Expected output:","lastModifiedDate":"2023-04-02"},{"lineNumber":485,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":486,"author":{"gitId":"WilsonLee2000"},"content":"------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":487,"author":{"gitId":"WilsonLee2000"},"content":"Hello! What can I do for you?","lastModifiedDate":"2023-04-02"},{"lineNumber":488,"author":{"gitId":"WilsonLee2000"},"content":"------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":489,"author":{"gitId":"WilsonLee2000"},"content":"1. Type -\u003e Graph equation \u003c- to do graph calculation","lastModifiedDate":"2023-04-02"},{"lineNumber":490,"author":{"gitId":"WilsonLee2000"},"content":"2. Type -\u003e Matrix equation \u003c- to do matrix calculation","lastModifiedDate":"2023-04-02"},{"lineNumber":491,"author":{"gitId":"WilsonLee2000"},"content":"3. Type -\u003e Store any_string \u003c- to add notes","lastModifiedDate":"2023-04-02"},{"lineNumber":492,"author":{"gitId":"WilsonLee2000"},"content":"4. Type -\u003e List \u003c- to list stored notes","lastModifiedDate":"2023-04-02"},{"lineNumber":493,"author":{"gitId":"WilsonLee2000"},"content":"5. Type -\u003e Bye \u003c- to exit program","lastModifiedDate":"2023-04-02"},{"lineNumber":494,"author":{"gitId":"WilsonLee2000"},"content":"-------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":495,"author":{"gitId":"WilsonLee2000"},"content":"For more details, please visit our GitHub website [https://github.com/AY2223S2-CS2113-F10-2/tp].","lastModifiedDate":"2023-04-02"},{"lineNumber":496,"author":{"gitId":"WilsonLee2000"},"content":"If you have any queries, please contact [wilsonleejunwei@u.nus.edu].","lastModifiedDate":"2023-04-02"},{"lineNumber":497,"author":{"gitId":"WilsonLee2000"},"content":"-------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":498,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":499,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":500,"author":{"gitId":"WilsonLee2000"},"content":"### 19) Exit BadMaths `Bye`","lastModifiedDate":"2023-04-06"},{"lineNumber":501,"author":{"gitId":"WilsonLee2000"},"content":"* Exit and leave BadMaths:","lastModifiedDate":"2023-04-02"},{"lineNumber":502,"author":{"gitId":"WilsonLee2000"},"content":"* Format: `Bye`","lastModifiedDate":"2023-04-02"},{"lineNumber":503,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":504,"author":{"gitId":"WilsonLee2000"},"content":"Example input:","lastModifiedDate":"2023-04-02"},{"lineNumber":505,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":506,"author":{"gitId":"WilsonLee2000"},"content":"Bye","lastModifiedDate":"2023-04-02"},{"lineNumber":507,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":508,"author":{"gitId":"ZiqiuZeng"},"content":"Expected outcome:","lastModifiedDate":"2023-03-29"},{"lineNumber":509,"author":{"gitId":"ZiqiuZeng"},"content":"````","lastModifiedDate":"2023-03-29"},{"lineNumber":510,"author":{"gitId":"ZiqiuZeng"},"content":"Goodbye!","lastModifiedDate":"2023-03-29"},{"lineNumber":511,"author":{"gitId":"ZiqiuZeng"},"content":"````","lastModifiedDate":"2023-03-29"},{"lineNumber":512,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":513,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":515,"author":{"gitId":"WilsonLee2000"},"content":"**Q**: How do I start and run BadMaths?","lastModifiedDate":"2023-03-30"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":517,"author":{"gitId":"khooyourun"},"content":"**A**: ","lastModifiedDate":"2023-04-04"},{"lineNumber":518,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":519,"author":{"gitId":"khooyourun"},"content":"- Download the latest release of BadMaths [here](https://github.com/AY2223S2-CS2113-F10-2/tp/releases).","lastModifiedDate":"2023-04-04"},{"lineNumber":520,"author":{"gitId":"khooyourun"},"content":"- Save the java file to a new folder.","lastModifiedDate":"2023-04-04"},{"lineNumber":521,"author":{"gitId":"khooyourun"},"content":"- Open command prompt by typing `cmd` in the Windows search bar.","lastModifiedDate":"2023-04-04"},{"lineNumber":522,"author":{"gitId":"khooyourun"},"content":"- Navigate to the folder via `cd \"folder path\"`. (eg. `cd C:\\Users\\your_name\\Desktop\\BadMaths`).","lastModifiedDate":"2023-04-04"},{"lineNumber":523,"author":{"gitId":"khooyourun"},"content":"- Type `java -jar BadMaths.jar` to run BadMaths.","lastModifiedDate":"2023-04-04"},{"lineNumber":524,"author":{"gitId":"khooyourun"},"content":"- Follow the `User Guide` to begin testing.","lastModifiedDate":"2023-04-04"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":526,"author":{"gitId":"WilsonLee2000"},"content":"**Q**: How do I exit and leave BadMaths?","lastModifiedDate":"2023-03-30"},{"lineNumber":527,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":528,"author":{"gitId":"WilsonLee2000"},"content":"**A**: You can terminate the MathHelp programme by simply typing","lastModifiedDate":"2023-03-29"},{"lineNumber":529,"author":{"gitId":"khooyourun"},"content":"`Bye` in the command.","lastModifiedDate":"2023-04-04"},{"lineNumber":530,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":531,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":533,"author":{"gitId":"WilsonLee2000"},"content":"### General","lastModifiedDate":"2023-04-09"},{"lineNumber":534,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":535,"author":{"gitId":"WilsonLee2000"},"content":"History","lastModifiedDate":"2023-04-09"},{"lineNumber":536,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":537,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":538,"author":{"gitId":"WilsonLee2000"},"content":"Help","lastModifiedDate":"2023-04-09"},{"lineNumber":539,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":540,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":541,"author":{"gitId":"WilsonLee2000"},"content":"Bye","lastModifiedDate":"2023-04-09"},{"lineNumber":542,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":543,"author":{"gitId":"WilsonLee2000"},"content":"### Notes","lastModifiedDate":"2023-04-09"},{"lineNumber":544,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":545,"author":{"gitId":"WilsonLee2000"},"content":"Store isNote","lastModifiedDate":"2023-04-09"},{"lineNumber":546,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":547,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":548,"author":{"gitId":"WilsonLee2000"},"content":"List","lastModifiedDate":"2023-04-09"},{"lineNumber":549,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":550,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":551,"author":{"gitId":"WilsonLee2000"},"content":"List 2","lastModifiedDate":"2023-04-09"},{"lineNumber":552,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":553,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":554,"author":{"gitId":"WilsonLee2000"},"content":"Delete 2","lastModifiedDate":"2023-04-09"},{"lineNumber":555,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":556,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":557,"author":{"gitId":"WilsonLee2000"},"content":"Clear","lastModifiedDate":"2023-04-09"},{"lineNumber":558,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":559,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":560,"author":{"gitId":"WilsonLee2000"},"content":"Mark 2","lastModifiedDate":"2023-04-09"},{"lineNumber":561,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":562,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":563,"author":{"gitId":"WilsonLee2000"},"content":"Unmark 2","lastModifiedDate":"2023-04-09"},{"lineNumber":564,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":565,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":566,"author":{"gitId":"WilsonLee2000"},"content":"FindMark","lastModifiedDate":"2023-04-09"},{"lineNumber":567,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":568,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":569,"author":{"gitId":"WilsonLee2000"},"content":"FindUnmark","lastModifiedDate":"2023-04-09"},{"lineNumber":570,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":571,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":572,"author":{"gitId":"WilsonLee2000"},"content":"FindInfo Add","lastModifiedDate":"2023-04-09"},{"lineNumber":573,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":574,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":575,"author":{"gitId":"WilsonLee2000"},"content":"High 1","lastModifiedDate":"2023-04-09"},{"lineNumber":576,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":577,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":578,"author":{"gitId":"WilsonLee2000"},"content":"Medium 1","lastModifiedDate":"2023-04-09"},{"lineNumber":579,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":580,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":581,"author":{"gitId":"WilsonLee2000"},"content":"Low 1","lastModifiedDate":"2023-04-09"},{"lineNumber":582,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":583,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":584,"author":{"gitId":"WilsonLee2000"},"content":"Rank Priority","lastModifiedDate":"2023-04-09"},{"lineNumber":585,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":586,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":587,"author":{"gitId":"WilsonLee2000"},"content":"FindPrior HIGH","lastModifiedDate":"2023-04-09"},{"lineNumber":588,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":589,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":590,"author":{"gitId":"WilsonLee2000"},"content":"FindPrior MEDIUM","lastModifiedDate":"2023-04-09"},{"lineNumber":591,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":592,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":593,"author":{"gitId":"WilsonLee2000"},"content":"FindPrior LOW","lastModifiedDate":"2023-04-09"},{"lineNumber":594,"author":{"gitId":"WilsonLee2000"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":595,"author":{"gitId":"YC-Michael"},"content":"### Graph","lastModifiedDate":"2023-04-05"},{"lineNumber":596,"author":{"gitId":"YC-Michael"},"content":" ```","lastModifiedDate":"2023-04-05"},{"lineNumber":597,"author":{"gitId":"YC-Michael"},"content":" Graph 2*tan(2*pi*x+5)","lastModifiedDate":"2023-04-05"},{"lineNumber":598,"author":{"gitId":"YC-Michael"},"content":" ```","lastModifiedDate":"2023-04-05"},{"lineNumber":599,"author":{"gitId":"YC-Michael"},"content":" ```","lastModifiedDate":"2023-04-05"},{"lineNumber":600,"author":{"gitId":"YC-Michael"},"content":" Graph sin(1*x)","lastModifiedDate":"2023-04-05"},{"lineNumber":601,"author":{"gitId":"YC-Michael"},"content":" ```","lastModifiedDate":"2023-04-05"},{"lineNumber":602,"author":{"gitId":"YC-Michael"},"content":" ```","lastModifiedDate":"2023-04-05"},{"lineNumber":603,"author":{"gitId":"YC-Michael"},"content":" Graph 2*cos(1*x-6)-100","lastModifiedDate":"2023-04-05"},{"lineNumber":604,"author":{"gitId":"YC-Michael"},"content":" ```","lastModifiedDate":"2023-04-05"},{"lineNumber":605,"author":{"gitId":"khooyourun"},"content":"### Quadratic","lastModifiedDate":"2023-04-09"},{"lineNumber":606,"author":{"gitId":"khooyourun"},"content":"````","lastModifiedDate":"2023-04-09"},{"lineNumber":607,"author":{"gitId":"khooyourun"},"content":"Quadratic 2x^2 + x - 5","lastModifiedDate":"2023-04-09"},{"lineNumber":608,"author":{"gitId":"khooyourun"},"content":"````","lastModifiedDate":"2023-04-09"},{"lineNumber":609,"author":{"gitId":"khooyourun"},"content":"````","lastModifiedDate":"2023-04-09"},{"lineNumber":610,"author":{"gitId":"khooyourun"},"content":"Quadratic -x^2 - x + 2.5","lastModifiedDate":"2023-04-09"},{"lineNumber":611,"author":{"gitId":"khooyourun"},"content":"````","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"0nandon":103,"khooyourun":85,"-":18,"ZiqiuZeng":35,"WilsonLee2000":299,"YC-Michael":71}},{"path":"src/main/java/seedu/badmaths/BadMaths.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotesList;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.storage.NotesFileParser;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.ui.Ui;","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.File;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"public class BadMaths {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"    private static final String path \u003d \"data/notes.txt\";","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"    private static final Set\u003cString\u003e VALID_COMMANDS \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"            \"Graph\", \"Bye\", \"List\", \"Store\", \"Matrix\", \"Help\", \"FindInfo\", \"FindPrior\", \"FindMark\", \"FindUnmark\", \"Low\",","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"            \"Medium\", \"High\", \"Delete\", \"Mark\", \"Unmark\", \"Clear\", \"Rank\", \"Quadratic\", \"History\"","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"    ));","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"     * Checks whether command is one of the valid commands","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"     * Throws exception if not","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"     * @param command which is the user inputted command","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void commandChecker(String command) {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"            if (!VALID_COMMANDS.contains(command)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"            Ui.printIncorrectFormatEntered();","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void notesCreator(String path) {","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"        File notesFile \u003d new File(path);","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"        if (!notesFile.exists()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"            if (!notesFile.getParentFile().exists()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"                notesFile.getParentFile().mkdirs();","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"            try {","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"                notesFile.createNewFile();","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"ZiqiuZeng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"        Command inputCommand \u003d null;","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"        notesCreator(path);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"        NotesList notes \u003d new NotesList(NotesFileParser.loadFile(path));","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"WilsonLee2000"},"content":"        ArrayList\u003cString\u003e historyCommand \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"WilsonLee2000"},"content":"        CommandHistory commandHist \u003d new CommandHistory(historyCommand);","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"        while (true) {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"            Parser parser \u003d new Parser(userInput);","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"            String command \u003d parser.getCommand();","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"WilsonLee2000"},"content":"            String toDo \u003d parser.getToDo();","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"WilsonLee2000"},"content":"            commandHist.storeCommand(userInput);","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"ZiqiuZeng"},"content":"            commandChecker(command);","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"khooyourun"},"content":"            if (inputCommand \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"khooyourun"},"content":"                inputCommand \u003d new Command(command, toDo);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"khooyourun"},"content":"                inputCommand.setCommand(command);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"khooyourun"},"content":"                assert inputCommand.getCommand().equals(command) : \"inputCommand !\u003d command\";","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"khooyourun"},"content":"                inputCommand.setToDo(toDo);","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"WilsonLee2000"},"content":"            inputCommand.executeCommand(notes, historyCommand);","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"WilsonLee2000"},"content":"            if (userInput.equals(\"Bye\")) {","lastModifiedDate":"2023-04-02"},{"lineNumber":81,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"khooyourun":37,"ZiqiuZeng":32,"YC-Michael":3,"WilsonLee2000":14}},{"path":"src/main/java/seedu/badmaths/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Takes in function and command","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" * Identifies the function called and executes the appropriate function class","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":" *","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":" * @param command","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":" * @param toDo","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-01"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.commands.NotesRanker;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.commands.NotesFinder;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.commands.NotesPriorityFinder;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.commands.PrioritySetter;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.commands.NotesMarker;","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotesList;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.storage.NotesFileCleaner;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.trigograph.TrigoGraph;","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.ui.Ui;","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.matrix.Calculator;","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"import seedu.badmaths.Quadratic.Quadratic;","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"public class Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"    private static final String filePath \u003d \"data/notes.txt\";","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    protected String command;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"    protected String toDo;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"    ArrayList\u003cString\u003e historyCommand \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"    public Command(String command, String toDo) {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"    public String getCommand() {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"        return command;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"    public void setCommand(String command) {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"            this.command \u003d command;","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"            Ui.printIncorrectFormatEntered();","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"    public void setToDo(String toDo){","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"    public boolean isInvalidTodo(String todo) {","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"ZiqiuZeng"},"content":"        return todo.equals(\"Invalid todo\");","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"    public boolean isInvalidIndex(int index, NotesList notes) {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"WilsonLee2000"},"content":"        return (index \u003c 0 || index \u003e\u003d notes.getSize());","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"WilsonLee2000"},"content":"    public boolean isAnInt(String todo) {","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"WilsonLee2000"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"WilsonLee2000"},"content":"            Integer.parseInt(todo);","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"WilsonLee2000"},"content":"        } catch (NumberFormatException numberException) {","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"WilsonLee2000"},"content":"            Ui.printInvalidNumberEntered();","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"WilsonLee2000"},"content":"            return false;","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"WilsonLee2000"},"content":"        return true;","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"WilsonLee2000"},"content":"    public void executeCommand(NotesList notes, ArrayList\u003cString\u003e historyCommand) {","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraph trigoGraph \u003d new TrigoGraph(toDo);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"0nandon"},"content":"        Calculator calculator \u003d new Calculator();","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"khooyourun"},"content":"        Quadratic quadratic \u003d new Quadratic(toDo);","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"WilsonLee2000"},"content":"        CommandHistory commandHist \u003d new CommandHistory(historyCommand);","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"ZiqiuZeng"},"content":"        NotesMarker notesMarker \u003d new NotesMarker(notes, filePath);","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"ZiqiuZeng"},"content":"        PrioritySetter prioritySetter \u003d new PrioritySetter(notes, filePath);","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"ZiqiuZeng"},"content":"        NotesFinder notesFinder \u003d new NotesFinder(notes, filePath);","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"ZiqiuZeng"},"content":"        NotesPriorityFinder notesPriorityFinder \u003d new NotesPriorityFinder(notes, filePath);","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"ZiqiuZeng"},"content":"        NotesRanker notesRanker \u003d new NotesRanker(notes, filePath);","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"WilsonLee2000"},"content":"            //@@author WilsonLee2000","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"WilsonLee2000"},"content":"            assert (command.equals(\"Bye\") || command.equals(\"Graph\") || command.equals(\"Store\") ||","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"WilsonLee2000"},"content":"                    command.equals(\"List\") || command.equals(\"Delete\") || command.equals(\"Mark\") ||","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"WilsonLee2000"},"content":"                    command.equals(\"Unmark\") || command.equals(\"Low\") || command.equals(\"Medium\") ||","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"WilsonLee2000"},"content":"                    command.equals(\"High\") || command.equals(\"FindInfo\") || command.equals(\"FindPrior\") ||","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"WilsonLee2000"},"content":"                    command.equals(\"FindMark\") || command.equals(\"FindUnmark\") || command.equals(\"Rank\") ||","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"WilsonLee2000"},"content":"                    command.equals(\"Clear\") || command.equals(\"Help\") || command.equals(\"Matrix\") ||","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"WilsonLee2000"},"content":"                    command.equals(\"Quadratic\") || command.equals(\"History\")) : \"input has incorrect format required\";","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"khooyourun"},"content":"            //@@author Khooyourun","lastModifiedDate":"2023-04-03"},{"lineNumber":94,"author":{"gitId":"khooyourun"},"content":"            switch (command) {","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"khooyourun"},"content":"            case \"Bye\":","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"khooyourun"},"content":"                if(!isInvalidTodo(toDo)) {","lastModifiedDate":"2023-04-02"},{"lineNumber":97,"author":{"gitId":"khooyourun"},"content":"                    throw new IllegalTodoException();","lastModifiedDate":"2023-04-02"},{"lineNumber":98,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-04-02"},{"lineNumber":99,"author":{"gitId":"khooyourun"},"content":"                System.out.println(\"Goodbye!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"khooyourun"},"content":"            case \"Graph\":","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"khooyourun"},"content":"                trigoGraph.startGraphAnalysis();","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"WilsonLee2000"},"content":"            //@@author WilsonLee2000","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"WilsonLee2000"},"content":"            case \"Store\":","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"WilsonLee2000"},"content":"                Store store \u003d new Store(notes, toDo);","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"WilsonLee2000"},"content":"                store.storeNotes();","lastModifiedDate":"2023-04-04"},{"lineNumber":108,"author":{"gitId":"WilsonLee2000"},"content":"                break;","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"WilsonLee2000"},"content":"            //@@author WilsonLee2000","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"WilsonLee2000"},"content":"            case \"List\":","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"WilsonLee2000"},"content":"                List lists \u003d new List(notes,toDo);","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"WilsonLee2000"},"content":"                lists.listNotes();","lastModifiedDate":"2023-04-04"},{"lineNumber":113,"author":{"gitId":"WilsonLee2000"},"content":"                break;","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"WilsonLee2000"},"content":"            //@@author WilsonLee2000","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"WilsonLee2000"},"content":"            case \"Delete\":","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"WilsonLee2000"},"content":"                Delete deletes \u003d new Delete(notes, toDo);","lastModifiedDate":"2023-04-04"},{"lineNumber":117,"author":{"gitId":"WilsonLee2000"},"content":"                deletes.deleteNotes();","lastModifiedDate":"2023-04-04"},{"lineNumber":118,"author":{"gitId":"WilsonLee2000"},"content":"                break;","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"WilsonLee2000"},"content":"            case \"History\":","lastModifiedDate":"2023-04-04"},{"lineNumber":120,"author":{"gitId":"WilsonLee2000"},"content":"                // print out all commands typed in the list","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"WilsonLee2000"},"content":"                commandHist.displayHistory();","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"WilsonLee2000"},"content":"                break;","lastModifiedDate":"2023-04-04"},{"lineNumber":123,"author":{"gitId":"ZiqiuZeng"},"content":"            //@@author ZiqiuZeng","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"ZiqiuZeng"},"content":"            case \"Mark\":","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"ZiqiuZeng"},"content":"                notesMarker.mark(toDo);","lastModifiedDate":"2023-04-06"},{"lineNumber":126,"author":{"gitId":"ZiqiuZeng"},"content":"                break;","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"ZiqiuZeng"},"content":"            //@@author ZiqiuZeng","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"ZiqiuZeng"},"content":"            case \"Unmark\":","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"ZiqiuZeng"},"content":"                notesMarker.unmark(toDo);","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"ZiqiuZeng"},"content":"                break;","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"ZiqiuZeng"},"content":"            //@@author ZiqiuZeng","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"ZiqiuZeng"},"content":"            case \"Low\":","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"ZiqiuZeng"},"content":"            case \"Medium\":","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"ZiqiuZeng"},"content":"            case \"High\":","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"ZiqiuZeng"},"content":"                prioritySetter.setPriority(command,toDo);","lastModifiedDate":"2023-04-06"},{"lineNumber":136,"author":{"gitId":"ZiqiuZeng"},"content":"                break;","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"ZiqiuZeng"},"content":"            //@@author ZiqiuZeng","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"ZiqiuZeng"},"content":"            case \"FindInfo\":","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"ZiqiuZeng"},"content":"                notesFinder.find(toDo);","lastModifiedDate":"2023-04-06"},{"lineNumber":140,"author":{"gitId":"ZiqiuZeng"},"content":"                break;","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"ZiqiuZeng"},"content":"            //@@author ZiqiuZeng","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"ZiqiuZeng"},"content":"            case \"FindPrior\":","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"ZiqiuZeng"},"content":"                notesPriorityFinder.find(toDo);","lastModifiedDate":"2023-04-06"},{"lineNumber":144,"author":{"gitId":"ZiqiuZeng"},"content":"                break;","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"ZiqiuZeng"},"content":"            //@@author ZiqiuZeng","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"ZiqiuZeng"},"content":"            case \"FindMark\":","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"ZiqiuZeng"},"content":"                Ui.printFindNotes(notes.relevantMarked());","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"ZiqiuZeng"},"content":"                break;","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"ZiqiuZeng"},"content":"            //@@author ZiqiuZeng","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"ZiqiuZeng"},"content":"            case \"FindUnmark\":","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"ZiqiuZeng"},"content":"                Ui.printFindNotes(notes.relevantUnmarked());","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"ZiqiuZeng"},"content":"                break;","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"ZiqiuZeng"},"content":"            //@@author ZiqiuZeng","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"ZiqiuZeng"},"content":"            case \"Rank\":","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"ZiqiuZeng"},"content":"                notesRanker.rank(toDo);","lastModifiedDate":"2023-04-06"},{"lineNumber":156,"author":{"gitId":"ZiqiuZeng"},"content":"                break;","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"ZiqiuZeng"},"content":"            /*","lastModifiedDate":"2023-04-03"},{"lineNumber":158,"author":{"gitId":"ZiqiuZeng"},"content":"             * The command \"Clear\" will continue to execute for as long as it is being entered,","lastModifiedDate":"2023-04-03"},{"lineNumber":159,"author":{"gitId":"ZiqiuZeng"},"content":"             * without any other command or input interrupting it.","lastModifiedDate":"2023-04-03"},{"lineNumber":160,"author":{"gitId":"ZiqiuZeng"},"content":"             */","lastModifiedDate":"2023-04-03"},{"lineNumber":161,"author":{"gitId":"ZiqiuZeng"},"content":"            case \"Clear\":","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"ZiqiuZeng"},"content":"                notes.reset();","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"ZiqiuZeng"},"content":"                NotesFileCleaner.clearFile(filePath);","lastModifiedDate":"2023-04-06"},{"lineNumber":164,"author":{"gitId":"ZiqiuZeng"},"content":"                break;","lastModifiedDate":"2023-03-26"},{"lineNumber":165,"author":{"gitId":"ZiqiuZeng"},"content":"            /*","lastModifiedDate":"2023-04-03"},{"lineNumber":166,"author":{"gitId":"ZiqiuZeng"},"content":"             * The command \"Help\" will continue to execute for as long as it is being entered,","lastModifiedDate":"2023-04-03"},{"lineNumber":167,"author":{"gitId":"ZiqiuZeng"},"content":"             * without any other command or input interrupting it.","lastModifiedDate":"2023-04-03"},{"lineNumber":168,"author":{"gitId":"ZiqiuZeng"},"content":"             */","lastModifiedDate":"2023-04-03"},{"lineNumber":169,"author":{"gitId":"ZiqiuZeng"},"content":"            case \"Help\":","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"ZiqiuZeng"},"content":"                HelpManual.readHelpManual();","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"ZiqiuZeng"},"content":"                break;","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"0nandon"},"content":"            //@@author 0nandon","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"0nandon"},"content":"            case \"Matrix\":","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"0nandon"},"content":"                calculator.run(toDo);","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"0nandon"},"content":"                break;","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"khooyourun"},"content":"            //@@author Khooyourun","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"khooyourun"},"content":"            case \"Quadratic\":","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"khooyourun"},"content":"                quadratic.solveQuadratic();","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"khooyourun"},"content":"            default:","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"khooyourun"},"content":"        } catch (IllegalIndexException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"Oops! This note does not exist. Please try again.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"khooyourun"},"content":"        } catch (IllegalTodoException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"khooyourun"},"content":"            Ui.printIncorrectFormatEntered();","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"0nandon":5,"khooyourun":62,"ZiqiuZeng":72,"YC-Michael":7,"WilsonLee2000":45}},{"path":"src/main/java/seedu/badmaths/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"//@@author WilsonLee2000","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"public class CommandHistory {","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"    ArrayList\u003cString\u003e historyCommand \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"    public CommandHistory(ArrayList\u003cString\u003e historyCommand) {","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"        this.historyCommand \u003d historyCommand;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"    public void storeCommand(String inputCommand) {","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"        historyCommand.add(inputCommand);","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"    public void displayHistory() {","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"        System.out.println(\"Here are the list of commands that you have entered so far:\");","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"        for (String command : historyCommand) {","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"            System.out.println(command);","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"        System.out.println();","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"WilsonLee2000":24}},{"path":"src/main/java/seedu/badmaths/Delete.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"//@@author WilsonLee2000","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"import seedu.badmaths.note.NotesList;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"import seedu.badmaths.storage.NotesFileWriter;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"import seedu.badmaths.ui.Ui;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"public class Delete {","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"    private static final String filePath \u003d \"data/notes.txt\";","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"    public NotesList notes;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"    protected String toDo;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"    public Delete (NotesList notes, String toDo) {","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"    public static boolean isInvalidIndex(int index, NotesList notes) {","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"        return (index \u003c 0 || index \u003e\u003d notes.getSize());","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"    public static boolean isAnInt(String todo) {","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"            Integer.parseInt(todo);","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"        } catch (NumberFormatException numberException) {","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"            Ui.printInvalidNumberEntered();","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"            return false;","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"        return true;","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"    public void deleteNotes() {","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"            if (!isAnInt(toDo)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"                throw new IllegalTodoException();","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"            int deleteIndex \u003d Integer.parseInt(toDo) - 1; // deleteIndex \u003d\u003d 3","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"            if (isInvalidIndex(deleteIndex, notes)) { // if true","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"                throw new IllegalIndexException();","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"            Ui.printDelete(notes.getText(deleteIndex), notes.getSize());","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"            notes.remove(deleteIndex);","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"            NotesFileWriter.saveFile(filePath, notes.getAll());","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"        } catch (IllegalIndexException exceptionIndex) {","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"WilsonLee2000"},"content":"            System.out.println(\"Oops! This note does not exist. Please try again.\");","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"        } catch (IllegalTodoException exceptionTodo) {","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"WilsonLee2000"},"content":"            Ui.printIncorrectFormatEntered();","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"WilsonLee2000":51}},{"path":"src/main/java/seedu/badmaths/HelpManual.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.File;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"public class HelpManual {","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"    protected static String filePath \u003d \"/HelpManual.txt\"; // file path relative to the classpath","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"    protected static String logFilePath \u003d \"Help\";","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"    private static final Logger logger \u003d Logger.getLogger(logFilePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void setUpLogger() {","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"            if (!new File(logFilePath).exists()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"                new File(logFilePath).createNewFile();","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"            logger.log(Level.SEVERE, \"File logger not working\", e);","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"     * This method reads the content from HelpManual.txt file.","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void readHelpManual() {","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"        setUpLogger();","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"            logger.log(Level.INFO, \"going to start processing\");","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"            InputStream inputStream \u003d HelpManual.class.getResourceAsStream(filePath);","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"            // assert that the input stream is not null","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"            assert inputStream !\u003d null : \"Invalid file: \" + filePath;","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"            InputStreamReader read \u003d new InputStreamReader(inputStream, \"UTF-8\");","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(read);","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"ZiqiuZeng"},"content":"            String lineTxt;","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"            StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"            while ((lineTxt \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"                content.append(lineTxt).append(\"\\n\");","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(lineTxt);","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"ZiqiuZeng"},"content":"            bufferedReader.close();","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"            read.close();","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"            // Log successful read to console and log file","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"ZiqiuZeng"},"content":"            logger.log(Level.INFO, \"Successfully read Help Manual file.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"Error while loading files. Please try again.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"            logger.severe(\"Error while loading Help Manual. Please try again.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"ZiqiuZeng":64,"YC-Michael":1}},{"path":"src/main/java/seedu/badmaths/IllegalIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"public class IllegalIndexException extends Exception{","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"ZiqiuZeng":3,"YC-Michael":1}},{"path":"src/main/java/seedu/badmaths/IllegalTodoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"public class IllegalTodoException extends Exception{","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"ZiqiuZeng":3,"YC-Michael":1}},{"path":"src/main/java/seedu/badmaths/InvalidFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"public class InvalidFormatException extends Throwable {","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"ZiqiuZeng":3,"YC-Michael":1}},{"path":"src/main/java/seedu/badmaths/List.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"//@@author WilsonLee2000","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"import seedu.badmaths.note.NotesList;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"import seedu.badmaths.ui.Ui;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"public class List {","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"    public NotesList notes;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"    protected  String toDo;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"    public List(NotesList notes, String toDo) {","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"    public boolean isInvalidIndex(int index, NotesList notes) {","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"        return (index \u003c 0 || index \u003e\u003d notes.getSize());","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"    public boolean isInvalidTodo(String todo) {","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"        return todo.equals(\"Invalid todo\");","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"    public  boolean isAnInt(String todo) {","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"            Integer.parseInt(todo);","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"        } catch (NumberFormatException numberException) {","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"            Ui.printInvalidNumberEntered();","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"            return false;","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"        return true;","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"    public void listNotes() {","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"            if ((!isInvalidTodo(toDo)) \u0026\u0026 (!isAnInt(toDo))) {","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"                throw new IllegalTodoException();","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"            if (isInvalidTodo(toDo)) { // means there is no toDo","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"                Ui.printNotes(notes.getAll()); // print all","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"                return;","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"            int index \u003d Integer.parseInt(toDo) - 1;","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"            if (isInvalidIndex(index, notes)) { // list 10 if got 5 notes only","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"                throw new IllegalIndexException();","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"            notes.review(index);","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"WilsonLee2000"},"content":"            Ui.printSpecificNote(index, notes.getAll());","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"        } catch (IllegalIndexException exceptionIndex) {","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"WilsonLee2000"},"content":"            System.out.println(\"Oops! This note does not exist. Please try again.\");","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"        } catch (IllegalTodoException exceptionTodo) {","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"WilsonLee2000"},"content":"            Ui.printIncorrectFormatEntered();","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"WilsonLee2000":55}},{"path":"src/main/java/seedu/badmaths/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Takes in user input and splits it into 2 parts","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" * First part is the function name","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":" * Second part is the todo to be executed in that function","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":" * Returns the two parts using get methods","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":" *","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":" * @param userInput","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.ui.Ui;","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"public class Parser {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    protected String userInput;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"    public Parser(String userInput) { // List. 1","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"     * Separates the first word of user input which is the command","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"     * Throws an exception if there is format error in the input","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"     * @return command","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"    public String getCommand() {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-04-01"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"            String trimmedInput \u003d userInput.trim();","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"            if (trimmedInput.contains(\" \")) {","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"                int indexOfSpace \u003d trimmedInput.indexOf(\" \");","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"                String command \u003d trimmedInput.substring(0, indexOfSpace);","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"                return command;","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"                return userInput;","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"            Ui.printIncorrectFormatEntered();","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"            return null;","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"     * Separates all the words other than the first from user input which would be toDo","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"     * If there is only 1 word (ie no toDo), then \"Invalid toDo\" would be returned","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"     * Throws an exception if there is format error","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"     * @return toDo","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"    public String getToDo() {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-04-01"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"            String[] parts \u003d userInput.split(\" \", 2); // List 5","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"            if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-04-01"},{"lineNumber":53,"author":{"gitId":"WilsonLee2000"},"content":"                return \"Invalid todo\"; // means there is no todo","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"                return parts[1].trim();","lastModifiedDate":"2023-04-01"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"            Ui.printIncorrectFormatEntered();","lastModifiedDate":"2023-04-01"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"            return null;","lastModifiedDate":"2023-04-01"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"khooyourun":57,"YC-Michael":2,"WilsonLee2000":6}},{"path":"src/main/java/seedu/badmaths/Quadratic/Quadratic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Takes in a quadratic equation and calculates the values of x","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" * Prints out the x values if real, and notifies user if its imaginary","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":" *","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":" * Contains a String toDo which is the quadratic equation","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"package seedu.badmaths.Quadratic;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"import seedu.badmaths.ui.Ui;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"public class Quadratic {","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    protected static String toDo;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    public Quadratic (String toDo) {","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        Quadratic.toDo \u003d toDo;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"     * Solves the quadratic equation, Ax^2 + Bx + C, to get 2 values of x","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"     * @param A which is the A value","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"     * @param B which is the B value","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"     * @param C which is the C value","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"     * @return xStore which is an ArrayList of Doubles containing 2 elements, the two values of x","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"    public ArrayList\u003cDouble\u003e quadraticFormula(double A, double B, double C) {","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"        double x1 \u003d (-B + Math.sqrt(B * B - 4 * A * C)) / (2 * A);","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        double x2 \u003d (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"        ArrayList\u003cDouble\u003e xStore \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"        xStore.add(x1);","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"        xStore.add(x2);","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"        return xStore;","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"     * Finds the coordinates of the minimum or maximum point of the quadratic equation, Ax^2 + Bx + C","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"     * @param A which is the A value","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"     * @param B which is the B value","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"     * @param C which is the C value","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"     * @return the coordinates in the form of a string: (x,y)","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"    public String minMaxPointFinder(double A, double B, double C) {","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"        double xCoordinate \u003d (-B) / (2 * A);","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"        double yCoordinate \u003d (A * (xCoordinate * xCoordinate)) + (B * xCoordinate) + C;","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"        String stringofXCoor \u003d Double.toString(xCoordinate);","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"        String stringOfYCoor \u003d Double.toString(yCoordinate);","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"        return \"(\" + stringofXCoor + (\", \") + stringOfYCoor + \")\";","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"    public void printAnswer(ArrayList\u003cDouble\u003e xStore, String vertextCoordinate, boolean isMinimum) {","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"        Ui.printQuadraticAnswer(xStore, vertextCoordinate, isMinimum);","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"     * Calls the above methods to find and print the answer to the quadratic equation","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"     * Catches possible exceptions and prints an error message","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"    public void solveQuadratic() {","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"            double A \u003d QuadraticParser.findA();","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"            double B \u003d QuadraticParser.findB();","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"            double C \u003d QuadraticParser.findC();","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"            boolean isMinimum;","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"khooyourun"},"content":"            if (A \u003e 0) {","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"khooyourun"},"content":"                isMinimum \u003d true;","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"khooyourun"},"content":"                isMinimum \u003d false;","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"khooyourun"},"content":"            ArrayList\u003cDouble\u003e xStore;","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"khooyourun"},"content":"            xStore \u003d quadraticFormula(A, B, C);","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"khooyourun"},"content":"            String vertexCoordinate \u003d minMaxPointFinder(A, B, C);","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"khooyourun"},"content":"            printAnswer(xStore, vertexCoordinate, isMinimum);","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"khooyourun"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"khooyourun"},"content":"            Ui.printQuadraticFormatError();","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"khooyourun":78}},{"path":"src/main/java/seedu/badmaths/Quadratic/QuadraticParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package seedu.badmaths.Quadratic;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"public class QuadraticParser extends Quadratic {","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"    private static final int POSITIVE \u003d 1;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"    private static final int NEGATIVE \u003d -1;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"    private static final String ADDITION \u003d \"+\";","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"    private static final String SUBTRACTION \u003d \"-\";","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"    private static final int INDEX_MODIFIER_2 \u003d 2;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"    private static final int INDEX_MODIFIER_3 \u003d 3;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"    private static final int INDEX_MODIFIER_4 \u003d 4;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    private static final int INDEX_MODIFIER_5 \u003d 5;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    public QuadraticParser(String toDo) {","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"        super(toDo);","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"     * Identifies A from Ax^2 + Bx + C","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"     * @return A as a double data type","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    public static double findA() {","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"        String stringA \u003d toDo.substring(0, toDo.indexOf(\"x\"));","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"        if (stringA.equals(SUBTRACTION)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"            return NEGATIVE;","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"        } else {","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"            if (stringA.isEmpty()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"                return POSITIVE;","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"                return Double.parseDouble(stringA);","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"     * Identifies the sign of B (+ or -)","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"     * @return the sign as a String","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"    public static String findSignOfB() {","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"        int startIndexOfSign \u003d toDo.indexOf(\"^2\") + INDEX_MODIFIER_3;","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"        int endIndexOfSign \u003d toDo.indexOf(\"^2\") + INDEX_MODIFIER_4;","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"        return toDo.substring(startIndexOfSign, endIndexOfSign);","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"    public static String findStringOfB() {","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"        int startIndexOfB \u003d toDo.indexOf(\"^2\") + INDEX_MODIFIER_5;","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"        int endIndexOfB \u003d toDo.indexOf(\"x \");","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"        return toDo.substring(startIndexOfB, endIndexOfB);","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"     * Identifies B from Ax^2 + Bx + C","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"     * @return A as a double data type","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"    public static double findB() {","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"        String sign \u003d findSignOfB();","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"        String stringB \u003d findStringOfB();","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"        if (stringB.isEmpty()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"            if (sign.equals(ADDITION)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"                return POSITIVE;","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"                return NEGATIVE;","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"        } else {","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"khooyourun"},"content":"            if (sign.equals(ADDITION)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"khooyourun"},"content":"                return Double.parseDouble(stringB);","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"khooyourun"},"content":"                return Double.parseDouble(stringB) * NEGATIVE;","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"khooyourun"},"content":"     * Identifies the sign of C (+ or -)","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"khooyourun"},"content":"     * @return the sign as a String","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"khooyourun"},"content":"    public static String findSignOfC() {","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"khooyourun"},"content":"        int startIndexOfSign \u003d toDo.indexOf(\"x \") + INDEX_MODIFIER_2;","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"khooyourun"},"content":"        int endIndexOfSign \u003d toDo.indexOf(\"x \") + INDEX_MODIFIER_3;","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"khooyourun"},"content":"        return toDo.substring(startIndexOfSign, endIndexOfSign);","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"khooyourun"},"content":"    public static String findStringOfC() {","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"khooyourun"},"content":"        int indexOfC \u003d toDo.indexOf(\"x \") + INDEX_MODIFIER_4;","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"khooyourun"},"content":"        return toDo.substring(indexOfC);","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"khooyourun"},"content":"     * Identifies C from Ax^2 + Bx + C","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"khooyourun"},"content":"     * @return C as a double data type","lastModifiedDate":"2023-04-05"},{"lineNumber":91,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"khooyourun"},"content":"    public static double findC() {","lastModifiedDate":"2023-04-05"},{"lineNumber":93,"author":{"gitId":"khooyourun"},"content":"        String sign \u003d findSignOfC();","lastModifiedDate":"2023-04-05"},{"lineNumber":94,"author":{"gitId":"khooyourun"},"content":"        String stringC \u003d findStringOfC();","lastModifiedDate":"2023-04-05"},{"lineNumber":95,"author":{"gitId":"khooyourun"},"content":"        double C \u003d Double.parseDouble(stringC);","lastModifiedDate":"2023-04-05"},{"lineNumber":96,"author":{"gitId":"khooyourun"},"content":"        if (sign.equals(ADDITION)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":97,"author":{"gitId":"khooyourun"},"content":"            return C;","lastModifiedDate":"2023-04-05"},{"lineNumber":98,"author":{"gitId":"khooyourun"},"content":"        } else {","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"khooyourun"},"content":"            return C * NEGATIVE;","lastModifiedDate":"2023-04-05"},{"lineNumber":100,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"khooyourun":102}},{"path":"src/main/java/seedu/badmaths/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotePriority;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.File;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.Timer;","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"public class Storage {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"    public static ArrayList\u003cNote\u003e loadFile(String path) {","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"            Scanner scanner \u003d new Scanner(new File(path));","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"            String noteScanner;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"            //text format: Priority | Status | Count | Note","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"                noteScanner \u003d scanner.nextLine();","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"                String[] noteInfo \u003d noteScanner.split(\"\\\\t\");","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"                if (noteInfo.length !\u003d 4) {","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"                    throw new InvalidFormatException();","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"                }","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"                //priority","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"                String priorityStr \u003d noteInfo[0];","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"                Set\u003cString\u003e validPriorities \u003d Set.of(\"LOW\", \"MEDIUM\", \"HIGH\");","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"                if (!validPriorities.contains(priorityStr)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"                    //priorityStr is invalid, handle the error","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"                    throw new InvalidFormatException();","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"                }","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"                NotePriority.Priority priority \u003d NotePriority.Priority.valueOf(priorityStr);","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"                //note","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"                String noteStr \u003d noteInfo[3];","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"                //count","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"                String reviewCountStr \u003d noteInfo[2];","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"ZiqiuZeng"},"content":"                int reviewCount;","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"                //reviewCountStr is invalid, handle the error","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"                try {","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"                    reviewCount \u003d Integer.parseInt(reviewCountStr);","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"ZiqiuZeng"},"content":"                    throw new InvalidFormatException();","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"                }","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"                //status","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"                String isDoneStr \u003d noteInfo[1];","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"                Set\u003cString\u003e validIsDoneStatus \u003d Set.of(\"Y\", \"N\");","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"ZiqiuZeng"},"content":"                if(!validIsDoneStatus.contains(isDoneStr)){","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"                    //isDoneStr is invalid, handle the error","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"                    throw new InvalidFormatException();","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"                }","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"                boolean isDone \u003d isDoneStr.equals(\"Y\");","lastModifiedDate":"2023-04-03"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"ZiqiuZeng"},"content":"                /*","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"                 * update notes if the file is valid","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"                 */","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"ZiqiuZeng"},"content":"                //update text, priority","lastModifiedDate":"2023-04-03"},{"lineNumber":67,"author":{"gitId":"ZiqiuZeng"},"content":"                Note note \u003d new Note(noteStr, priority);","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"ZiqiuZeng"},"content":"                //update status","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"ZiqiuZeng"},"content":"                if(isDone) {","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"ZiqiuZeng"},"content":"                    note.markAsDone();","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"ZiqiuZeng"},"content":"                } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"ZiqiuZeng"},"content":"                    note.markAsNotDone();","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"ZiqiuZeng"},"content":"                }","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"ZiqiuZeng"},"content":"                //update count","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"ZiqiuZeng"},"content":"                note.setReviewCount(reviewCount);","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"ZiqiuZeng"},"content":"                //add note","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"ZiqiuZeng"},"content":"                notes.add(note);","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":82,"author":{"gitId":"ZiqiuZeng"},"content":"            try{","lastModifiedDate":"2023-04-03"},{"lineNumber":83,"author":{"gitId":"ZiqiuZeng"},"content":"                Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-04-03"},{"lineNumber":84,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(\"Sorry, your notes file seems to be corrupted :(\");","lastModifiedDate":"2023-04-03"},{"lineNumber":85,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(\"Do you want to reset the file? (y/n)\");","lastModifiedDate":"2023-04-03"},{"lineNumber":86,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(\"\");","lastModifiedDate":"2023-04-03"},{"lineNumber":87,"author":{"gitId":"ZiqiuZeng"},"content":"                String userInput \u003d inputScanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2023-04-03"},{"lineNumber":88,"author":{"gitId":"ZiqiuZeng"},"content":"                if (userInput.equals(\"y\")) {","lastModifiedDate":"2023-04-03"},{"lineNumber":89,"author":{"gitId":"ZiqiuZeng"},"content":"                    // clear the file contents if the user confirms","lastModifiedDate":"2023-04-03"},{"lineNumber":90,"author":{"gitId":"ZiqiuZeng"},"content":"                    PrintWriter writer \u003d new PrintWriter(path);","lastModifiedDate":"2023-04-03"},{"lineNumber":91,"author":{"gitId":"ZiqiuZeng"},"content":"                    writer.print(\"\");","lastModifiedDate":"2023-04-03"},{"lineNumber":92,"author":{"gitId":"ZiqiuZeng"},"content":"                    writer.close();","lastModifiedDate":"2023-04-03"},{"lineNumber":93,"author":{"gitId":"ZiqiuZeng"},"content":"                    System.out.println(\"File contents have rest successfully.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":94,"author":{"gitId":"ZiqiuZeng"},"content":"                    System.out.println(\"You can continue to use the application\");","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"ZiqiuZeng"},"content":"                    System.out.println(\"If you want to read Help Manual, \" +","lastModifiedDate":"2023-04-03"},{"lineNumber":96,"author":{"gitId":"ZiqiuZeng"},"content":"                            \"please type \u0027Help\u0027 to learn what I can do for you.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":97,"author":{"gitId":"ZiqiuZeng"},"content":"                } else if (userInput.equals(\"n\")){","lastModifiedDate":"2023-04-03"},{"lineNumber":98,"author":{"gitId":"ZiqiuZeng"},"content":"                    System.out.println(\"You choose not to rest the file.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":99,"author":{"gitId":"ZiqiuZeng"},"content":"                    System.out.println(\"Please ensure your file status before using the application.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":100,"author":{"gitId":"ZiqiuZeng"},"content":"                    System.out.println(\"The program will exit in 10 seconds. See you next time.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":101,"author":{"gitId":"ZiqiuZeng"},"content":"                    Timer timer \u003d new Timer();","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"ZiqiuZeng"},"content":"                    TimerTask exitTask \u003d new TimerTask() {","lastModifiedDate":"2023-04-03"},{"lineNumber":103,"author":{"gitId":"ZiqiuZeng"},"content":"                        @Override","lastModifiedDate":"2023-04-03"},{"lineNumber":104,"author":{"gitId":"ZiqiuZeng"},"content":"                        public void run() {","lastModifiedDate":"2023-04-03"},{"lineNumber":105,"author":{"gitId":"ZiqiuZeng"},"content":"                            System.exit(0);","lastModifiedDate":"2023-04-03"},{"lineNumber":106,"author":{"gitId":"ZiqiuZeng"},"content":"                        }","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"ZiqiuZeng"},"content":"                    };","lastModifiedDate":"2023-04-03"},{"lineNumber":108,"author":{"gitId":"ZiqiuZeng"},"content":"                    timer.schedule(exitTask, 10000);","lastModifiedDate":"2023-04-03"},{"lineNumber":109,"author":{"gitId":"ZiqiuZeng"},"content":"                } else {","lastModifiedDate":"2023-04-03"},{"lineNumber":110,"author":{"gitId":"ZiqiuZeng"},"content":"                    System.out.println(\"Invalid input. Please enter \u0027y\u0027 or \u0027n\u0027.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":111,"author":{"gitId":"ZiqiuZeng"},"content":"                    return loadFile(path);","lastModifiedDate":"2023-04-03"},{"lineNumber":112,"author":{"gitId":"ZiqiuZeng"},"content":"                }","lastModifiedDate":"2023-04-03"},{"lineNumber":113,"author":{"gitId":"ZiqiuZeng"},"content":"            } catch (FileNotFoundException eForInvalidFormatException) {","lastModifiedDate":"2023-04-03"},{"lineNumber":114,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(eForInvalidFormatException.getMessage());","lastModifiedDate":"2023-04-03"},{"lineNumber":115,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":116,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":117,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":118,"author":{"gitId":"ZiqiuZeng"},"content":"        return notes;","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"ZiqiuZeng"},"content":"    private static String fileContent(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"ZiqiuZeng"},"content":"        StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"ZiqiuZeng"},"content":"        for(Note note : notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"ZiqiuZeng"},"content":"            //priority","lastModifiedDate":"2023-04-03"},{"lineNumber":124,"author":{"gitId":"ZiqiuZeng"},"content":"            NotePriority.Priority priority \u003d note.getPriority();","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"ZiqiuZeng"},"content":"            String priorityStr \u003d priority.name();","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"ZiqiuZeng"},"content":"            content.append(priorityStr).append(\"\\t\");","lastModifiedDate":"2023-04-03"},{"lineNumber":127,"author":{"gitId":"ZiqiuZeng"},"content":"            //status","lastModifiedDate":"2023-04-03"},{"lineNumber":128,"author":{"gitId":"ZiqiuZeng"},"content":"            boolean isDone \u003d note.getIsDone();","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"ZiqiuZeng"},"content":"            String isDoneStatus \u003d \"N\";","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"ZiqiuZeng"},"content":"            if(isDone) {","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"ZiqiuZeng"},"content":"                isDoneStatus \u003d \"Y\";","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"ZiqiuZeng"},"content":"            content.append(isDoneStatus).append(\"\\t\");","lastModifiedDate":"2023-04-03"},{"lineNumber":134,"author":{"gitId":"ZiqiuZeng"},"content":"            //count","lastModifiedDate":"2023-04-03"},{"lineNumber":135,"author":{"gitId":"ZiqiuZeng"},"content":"            int reviewCount \u003d note.getReviewCount();","lastModifiedDate":"2023-04-03"},{"lineNumber":136,"author":{"gitId":"ZiqiuZeng"},"content":"            String reviewCountStr \u003d String.valueOf(reviewCount);","lastModifiedDate":"2023-04-03"},{"lineNumber":137,"author":{"gitId":"ZiqiuZeng"},"content":"            content.append(reviewCountStr).append(\"\\t\");","lastModifiedDate":"2023-04-03"},{"lineNumber":138,"author":{"gitId":"ZiqiuZeng"},"content":"            //text","lastModifiedDate":"2023-04-03"},{"lineNumber":139,"author":{"gitId":"ZiqiuZeng"},"content":"            String noteText \u003d note.getText();","lastModifiedDate":"2023-04-03"},{"lineNumber":140,"author":{"gitId":"ZiqiuZeng"},"content":"            content.append(noteText);","lastModifiedDate":"2023-04-03"},{"lineNumber":141,"author":{"gitId":"ZiqiuZeng"},"content":"            //line separator","lastModifiedDate":"2023-04-03"},{"lineNumber":142,"author":{"gitId":"ZiqiuZeng"},"content":"            content.append(System.lineSeparator());","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"ZiqiuZeng"},"content":"        return content.toString();","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void saveFile(String path, ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"ZiqiuZeng"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"ZiqiuZeng"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"File not exists, create it ...\");","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"ZiqiuZeng"},"content":"            if (!file.getParentFile().exists()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(\"Directory not exists, create it ...\");","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"ZiqiuZeng"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"ZiqiuZeng"},"content":"            try {","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"ZiqiuZeng"},"content":"                file.createNewFile();","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"ZiqiuZeng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"ZiqiuZeng"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"ZiqiuZeng"},"content":"            FileWriter fl \u003d new FileWriter(path);","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"ZiqiuZeng"},"content":"            fl.write(fileContent(notes));","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"ZiqiuZeng"},"content":"            fl.close();","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"ZiqiuZeng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void clearFile(String path) {","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"ZiqiuZeng"},"content":"            FileWriter fileWriter \u003d new FileWriter(path);","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"ZiqiuZeng"},"content":"            fileWriter.write(\"\");","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"ZiqiuZeng"},"content":"            fileWriter.close();","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"File content cleared successfully!\");","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"An error occurred while clearing the file content.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"ZiqiuZeng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":181,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":182,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"ZiqiuZeng":181,"YC-Michael":1}},{"path":"src/main/java/seedu/badmaths/Store.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"//@@author WilsonLee2000","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"import seedu.badmaths.note.NotesList;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"import seedu.badmaths.storage.NotesFileWriter;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"import seedu.badmaths.ui.Ui;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"public class Store {","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"    private static final String filePath \u003d \"data/notes.txt\";","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"    public NotesList notes;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"    protected String toDo;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"    public Store(NotesList notes, String toDo) {","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"    public static boolean isInvalidTodo(String todo) {","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"        return todo.equals(\"Invalid todo\");","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"    public void storeNotes() {","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"            if (isInvalidTodo(toDo)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"                throw new IllegalTodoException();","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"            if (toDo.equals(\"null\")) {","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"                throw new IllegalTodoException();","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"            notes.add(toDo);","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"            Ui.printAddNote(toDo, notes.getSize());","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"            NotesFileWriter.saveFile(filePath, notes.getAll());","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"        } catch (IllegalTodoException exception) {","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"            Ui.printIncorrectFormatEntered();","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"WilsonLee2000":39}},{"path":"src/main/java/seedu/badmaths/commands/IndexChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.commands;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotesList;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"public class IndexChecker {","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"    public static boolean isInvalidIndex(int index, NotesList notes) {","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"        return index \u003c 0 || index \u003e\u003d notes.getSize();","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":9}},{"path":"src/main/java/seedu/badmaths/commands/IntegerChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.commands;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.ui.Ui;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"public class IntegerChecker {","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"    public static boolean isAnInt(String str) {","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"            return true;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printInvalidNumberEntered();","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"            return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":15}},{"path":"src/main/java/seedu/badmaths/commands/NotesFinder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.commands;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.IllegalTodoException;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotesList;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.ui.Ui;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"import static seedu.badmaths.Store.isInvalidTodo;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotesFinder {","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"    private NotesList notes;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"    private String filePath;","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"    public NotesFinder(NotesList notes, String filePath) {","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"    public void find(String keyword) throws IllegalTodoException {","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"        if (isInvalidTodo(keyword)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"            throw new IllegalTodoException();","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e relevantNotes \u003d notes.relevantInfo(keyword);","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"        Ui.printFindNotes(relevantNotes);","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":29}},{"path":"src/main/java/seedu/badmaths/commands/NotesMarker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.commands;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.IllegalIndexException;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotesList;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.storage.NotesFileWriter;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.ui.Ui;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import static seedu.badmaths.commands.IntegerChecker.isAnInt;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"import static seedu.badmaths.commands.IndexChecker.isInvalidIndex;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotesMarker {","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"    private NotesList notes;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"    private String filePath;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"    public NotesMarker(NotesList notes, String filePath) {","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"    public void mark(String toDo) throws IllegalIndexException {","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"        if (!isAnInt(toDo)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"            return;","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"        int markIndex \u003d Integer.parseInt(toDo) - 1;","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        if (isInvalidIndex(markIndex, notes)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"            throw new IllegalIndexException();","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.markAsDone(markIndex);","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"        Ui.printMark(notes.getText(markIndex));","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"        NotesFileWriter.saveFile(filePath, notes.getAll());","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"    public void unmark(String toDo) throws IllegalIndexException {","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"        if (!isAnInt(toDo)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"            return;","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"        int unmarkIndex \u003d Integer.parseInt(toDo) - 1;","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"        if (isInvalidIndex(unmarkIndex, notes)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"            throw new IllegalIndexException();","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.markAsUndone(unmarkIndex);","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"ZiqiuZeng"},"content":"        Ui.printUnmark(notes.getText(unmarkIndex));","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"        NotesFileWriter.saveFile(filePath, notes.getAll());","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":50}},{"path":"src/main/java/seedu/badmaths/commands/NotesPriorityFinder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.commands;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.IllegalTodoException;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotesList;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.ui.Ui;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotesPriorityFinder {","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"    private NotesList notes;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"    private String filePath;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"    public NotesPriorityFinder(NotesList notes, String filePath) {","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"    public void find(String priorityStr) throws IllegalTodoException{","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"        switch (priorityStr.toLowerCase()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"low\":","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"medium\":","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"high\":","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"            ArrayList\u003cNote\u003e relevantNotes \u003d notes.relevantPriority(priorityStr.toUpperCase());","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printFindNotes(relevantNotes);","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"        default:","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"            throw new IllegalTodoException();","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":31}},{"path":"src/main/java/seedu/badmaths/commands/NotesRanker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.commands;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.IllegalTodoException;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotesList;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.storage.NotesFileWriter;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.ui.Ui;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotesRanker {","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"    private NotesList notes;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"    private String filePath;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"    public NotesRanker(NotesList notes, String filePath) {","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"    public void rank(String toDo) throws IllegalTodoException {","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"        switch (toDo) {","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"Review Count\":","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"            notes.rankByReviewCount();","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printNotesByReviewCount(notes.getAll());","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"            NotesFileWriter.saveFile(filePath, notes.getAll());","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"Priority\":","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"            notes.rankByPriority();","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printNotesByPriority(notes.getAll());","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"            NotesFileWriter.saveFile(filePath, notes.getAll());","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"        default:","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"            throw new IllegalTodoException();","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":34}},{"path":"src/main/java/seedu/badmaths/commands/PrioritySetter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.commands;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.IllegalIndexException;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotesList;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotePriority;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.storage.NotesFileWriter;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.ui.Ui;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"import static seedu.badmaths.commands.IntegerChecker.isAnInt;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"import static seedu.badmaths.commands.IndexChecker.isInvalidIndex;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"public class PrioritySetter {","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"    private NotesList notes;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"    private String filePath;","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"    public PrioritySetter(NotesList notes, String filePath) {","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"    public void setPriority(String priorityString, String toDo) throws IllegalIndexException {","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"        if (!isAnInt(toDo)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"            return;","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        int index \u003d Integer.parseInt(toDo) - 1;","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"        if (isInvalidIndex(index, notes)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"            throw new IllegalIndexException();","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"        NotePriority.Priority priority \u003d NotePriority.Priority.valueOf(priorityString.toUpperCase());","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.setPriority(index, priority);","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"        Ui.printPriority(index, notes.getAll());","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"        NotesFileWriter.saveFile(filePath, notes.getAll());","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":37}},{"path":"src/main/java/seedu/badmaths/matrix/Calculate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.matrix;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.matrix.exception.ExceptionChecker;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.matrix.exception.ExceptionPrinter;","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.matrix.exception.ShapeMismatchException;","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"public class Calculate {","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"    ExceptionChecker check \u003d new ExceptionChecker();","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"    Logger logger \u003d Logger.getLogger(\"Exception\");","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"    ExceptionPrinter ep \u003d new ExceptionPrinter();","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"    public Tensor2D mul(Tensor2D t1, Tensor2D t2) {","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"        Shape t1Shape \u003d t1.shape();","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"        Shape t2Shape \u003d t2.shape();","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"        try{","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"            check.checkShapeMismatch(t1, t2, \"MUL\");","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"            Tensor2D t2T \u003d t2.t();","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"            int[][] output \u003d new int[t1Shape.row][t2Shape.column];","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"            for(int i \u003d 0; i \u003c t1Shape.row; i++) {","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"                for(int j \u003d 0; j \u003c t2Shape.column; j++) {","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"                    output[i][j] \u003d 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"                    for(int k \u003d 0; k \u003c t1Shape.column; k++) {","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"                        output[i][j] +\u003d t1.get(i, k) * t2T.get(j, k);","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"                    }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"                }","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"            return new Tensor2D(output);","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"        } catch (ShapeMismatchException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"            ep.printShapeMismatchExceptionLog();","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"            return null;","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"0nandon"},"content":"    public Tensor2D dot(Tensor2D t1, Tensor2D t2) {","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"0nandon"},"content":"        Shape t1Shape \u003d t1.shape();","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"0nandon"},"content":"        Shape t2Shape \u003d t2.shape();","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"0nandon"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"0nandon"},"content":"            check.checkShapeMismatch(t1, t2, \"DOT\");","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"0nandon"},"content":"            int[][] output \u003d new int[t1Shape.row][t1Shape.column];","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"0nandon"},"content":"            for(int i \u003d 0; i \u003c t1Shape.row; i++) {","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"0nandon"},"content":"                for(int j \u003d 0; j \u003c t1Shape.column; j++) {","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"0nandon"},"content":"                    output[i][j] \u003d t1.get(i, j) * t2.get(i, j);","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"0nandon"},"content":"                }","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"0nandon"},"content":"            return new Tensor2D(output);","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"0nandon"},"content":"        } catch (ShapeMismatchException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"0nandon"},"content":"            ep.printShapeMismatchExceptionLog();","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"0nandon"},"content":"            return null;","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"0nandon"},"content":"    public Tensor2D add(Tensor2D t1, Tensor2D t2) {","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"0nandon"},"content":"        Shape t1Shape \u003d t1.shape();","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"0nandon"},"content":"        Shape t2Shape \u003d t2.shape();","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"0nandon"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"0nandon"},"content":"            check.checkShapeMismatch(t1, t2, \"ADD\");","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"0nandon"},"content":"            int[][] output \u003d new int[t1Shape.row][t1Shape.column];","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"0nandon"},"content":"            for(int i \u003d 0; i \u003c t1Shape.row; i++) {","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"0nandon"},"content":"                for(int j \u003d 0; j \u003c t1Shape.column; j++) {","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"0nandon"},"content":"                    output[i][j] \u003d t1.get(i, j) + t2.get(i, j);","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"0nandon"},"content":"                }","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"0nandon"},"content":"            return new Tensor2D(output);","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"0nandon"},"content":"        } catch (ShapeMismatchException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"0nandon"},"content":"            ep.printShapeMismatchExceptionLog();","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"0nandon"},"content":"            return null;","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"0nandon"},"content":"    public Tensor2D sub(Tensor2D t1, Tensor2D t2) {","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"0nandon"},"content":"        Shape t1Shape \u003d t1.shape();","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"0nandon"},"content":"        Shape t2Shape \u003d t2.shape();","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"0nandon"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"0nandon"},"content":"            check.checkShapeMismatch(t1, t2, \"SUB\");","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"0nandon"},"content":"            int[][] output \u003d new int[t1Shape.row][t1Shape.column];","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"0nandon"},"content":"            for(int i \u003d 0; i \u003c t1Shape.row; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"0nandon"},"content":"                for(int j \u003d 0; j \u003c t1Shape.column; j++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"0nandon"},"content":"                    output[i][j] \u003d t1.get(i, j) - t2.get(i, j);","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"0nandon"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"0nandon"},"content":"            return new Tensor2D(output);","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"0nandon"},"content":"        } catch (ShapeMismatchException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"0nandon"},"content":"            ep.printShapeMismatchExceptionLog();","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"0nandon"},"content":"            return null;","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"0nandon":102,"YC-Michael":4}},{"path":"src/main/java/seedu/badmaths/matrix/Calculator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.matrix;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"public class Calculator {","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"    Logger logger \u003d Logger.getLogger(\"matrix\");","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"    public void run(String toDo) {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"        logger.log(Level.INFO, \"Start to open calculator.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"        Tensor2D result;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"        result \u003d p.parse(toDo);","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"        if(result !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"            ui.printResult(result);","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"0nandon":20,"YC-Michael":1}},{"path":"src/main/java/seedu/badmaths/matrix/Execute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.matrix;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"public class Execute {","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"    public Tensor2D execute(Parser.CalType type, String command){","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"        Tensor2D result \u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"        switch(type) {","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"        case ADDITION:","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"            result \u003d executeAdd(command);","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"        case SUBTRACTION:","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"            result \u003d executeSub(command);","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"        case MULTIPLICATION:","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"            result \u003d executeMul(command);","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"        case ELEMENT_WISE_DOT_PRODUCT:","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"            result \u003d executeDot(command);","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"        default:","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"        return result;","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"    public Tensor2D executeMul(String command) {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"        Calculate c \u003d new Calculate();","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"        String[] operator \u003d command.split(\"\\\\.\\\\*\");","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"        Tensor2D result;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"        Tensor2D t1 \u003d executeTranspose(operator[0]);","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"        Tensor2D t2 \u003d executeTranspose(operator[1]);","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"        result \u003d c.mul(t1, t2);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"0nandon"},"content":"        assert result !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"0nandon"},"content":"        return result;","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"0nandon"},"content":"    public Tensor2D executeDot(String command) {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"0nandon"},"content":"        Calculate c \u003d new Calculate();","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"0nandon"},"content":"        String[] operator \u003d command.split(\"\\\\*\");","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"0nandon"},"content":"        Tensor2D result;","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"0nandon"},"content":"        Tensor2D t1 \u003d executeTranspose(operator[0]);","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"0nandon"},"content":"        Tensor2D t2 \u003d executeTranspose(operator[1]);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"0nandon"},"content":"        result \u003d c.dot(t1, t2);","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"0nandon"},"content":"        assert result !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"0nandon"},"content":"        return result;","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"0nandon"},"content":"    public Tensor2D executeAdd(String command) {","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"0nandon"},"content":"        Calculate c \u003d new Calculate();","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"0nandon"},"content":"        String[] operator \u003d command.split(\"\\\\+\");","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"0nandon"},"content":"        Tensor2D result;","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"0nandon"},"content":"        Tensor2D t1 \u003d executeTranspose(operator[0]);","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"0nandon"},"content":"        Tensor2D t2 \u003d executeTranspose(operator[1]);","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"0nandon"},"content":"        result \u003d c.add(t1, t2);","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"0nandon"},"content":"        assert result !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"0nandon"},"content":"        return result;","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"0nandon"},"content":"    public Tensor2D executeSub(String command) {","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"0nandon"},"content":"        Calculate c \u003d new Calculate();","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"0nandon"},"content":"        String[] operator \u003d command.split(\"-\");","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"0nandon"},"content":"        Tensor2D result;","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"0nandon"},"content":"        Tensor2D t1 \u003d executeTranspose(operator[0]);","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"0nandon"},"content":"        Tensor2D t2 \u003d executeTranspose(operator[1]);","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"0nandon"},"content":"        result \u003d c.sub(t1, t2);","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"0nandon"},"content":"        assert result !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"0nandon"},"content":"        return result;","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"0nandon"},"content":"    public Tensor2D executeTranspose(String command) {","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"0nandon"},"content":"        String operator;","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"0nandon"},"content":"        if(command.contains(\".T\")) {","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"0nandon"},"content":"            operator \u003d command.replace(\".T\", \"\");","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"0nandon"},"content":"            return Parser.parseMatrix(operator).t();","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"0nandon"},"content":"        } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"0nandon"},"content":"            return Parser.parseMatrix(command);","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"0nandon":96,"YC-Michael":1}},{"path":"src/main/java/seedu/badmaths/matrix/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.matrix;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.matrix.exception.ExceptionPrinter;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.matrix.exception.UnknownOperatorException;","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.matrix.exception.ExceptionChecker;","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"public class Parser {","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"    ExceptionChecker check \u003d new ExceptionChecker();","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"    ExceptionPrinter ep \u003d new ExceptionPrinter();","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"    public Tensor2D parse(String command) {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"        CalType type;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"        Tensor2D result;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"        Execute ex \u003d new Execute();","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"        command \u003d command.replace(\" \", \"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"            check.checkUnknownOperator(command);","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"            type \u003d parseOp(command);","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"            result \u003d ex.execute(type, command);","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"            return result;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"        } catch (UnknownOperatorException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"            ep.printUnknownOperatorExceptionLog();","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"            return null;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"    protected CalType parseOp(String command){","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"        if(command.contains(\"+\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"            return CalType.ADDITION;","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"        } else if(command.contains(\"-\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"            return CalType.SUBTRACTION;","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"        } else if(command.contains(\".*\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"            return CalType.MULTIPLICATION;","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"0nandon"},"content":"        } else if(command.contains(\"*\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"0nandon"},"content":"            return CalType.ELEMENT_WISE_DOT_PRODUCT;","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"0nandon"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"0nandon"},"content":"            return CalType.UNKNOWN;","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"0nandon"},"content":"    public static Tensor2D parseMatrix(String command) {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"0nandon"},"content":"        int[][] tensor;","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"0nandon"},"content":"        int rowNum;","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"0nandon"},"content":"        int colNum;","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"0nandon"},"content":"        command \u003d command.replace(\"[\", \"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"0nandon"},"content":"        command \u003d command.replace(\"]\", \"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"0nandon"},"content":"        String[] rows;","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"0nandon"},"content":"        String[] column;","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"0nandon"},"content":"        rows \u003d command.split(\";\");","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"0nandon"},"content":"        rowNum \u003d rows.length;","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"0nandon"},"content":"        colNum \u003d rows[0].split(\",\").length;","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"0nandon"},"content":"        assert rowNum \u003d\u003d 1 || colNum \u003d\u003d rows[1].split(\",\").length;","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"0nandon"},"content":"        tensor \u003d new int[rowNum][colNum];","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"0nandon"},"content":"        for(int i \u003d 0; i \u003c rowNum; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"0nandon"},"content":"            for(int j \u003d 0; j \u003c colNum; j++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"0nandon"},"content":"                column \u003d rows[i].split(\",\");","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"0nandon"},"content":"                tensor[i][j] \u003d Integer.parseInt(column[j]);","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"0nandon"},"content":"        return new Tensor2D(tensor);","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"0nandon"},"content":"    enum CalType {","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"0nandon"},"content":"        ADDITION, SUBTRACTION, MULTIPLICATION, ELEMENT_WISE_DOT_PRODUCT, UNKNOWN","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"0nandon":72,"YC-Michael":4}},{"path":"src/main/java/seedu/badmaths/matrix/Shape.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.matrix;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"public class Shape {","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"    protected int row;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"    protected int column;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"    public Shape(int row, int column) {","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"        this.row \u003d row;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"        this.column \u003d column;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"    public int getRow(){","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"        return row;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"    public int getColumn(){","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"        return column;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"    public String toString() {","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"        return row + \" x \" + column;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"0nandon":23,"YC-Michael":1}},{"path":"src/main/java/seedu/badmaths/matrix/Tensor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.matrix;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"public abstract class Tensor {","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"    public abstract Shape shape();","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"    public abstract String toString();","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"0nandon":6,"YC-Michael":1}},{"path":"src/main/java/seedu/badmaths/matrix/Tensor2D.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.matrix;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"public class Tensor2D extends Tensor {","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"    protected int[][] tensor;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"    protected Shape shape;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"    public Tensor2D(int[][] tensor){","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"        this.tensor \u003d tensor;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"        shape \u003d new Shape(tensor.length, tensor[0].length);","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"    public Shape shape(){","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"        return shape;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"    public int row(){","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"        return shape.getRow();","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"    public int column(){","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"        return shape.getColumn();","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"    public int[][] tensor(){","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"        return this.tensor;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"    public int get(int row, int column){","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"        return tensor[row][column];","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"    public Tensor2D t(){","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"        int row \u003d shape.row;","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"        int column \u003d shape.column;","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"        int[][] transposeTensor \u003d new int[column][row];","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"0nandon"},"content":"        for(int i \u003d 0; i \u003c column; i++) {","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"0nandon"},"content":"            for(int j \u003d 0; j \u003c row; j++) {","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"0nandon"},"content":"                transposeTensor[i][j] \u003d tensor[j][i];","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"0nandon"},"content":"        return new Tensor2D(transposeTensor);","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"0nandon"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"0nandon"},"content":"    public String toString() {","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"0nandon"},"content":"        int row \u003d shape.row;","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"0nandon"},"content":"        int column \u003d shape.column;","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"0nandon"},"content":"        StringBuilder str \u003d new StringBuilder(\"\");","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"0nandon"},"content":"        str.append(\"    1. shape : \").append(row).append(\" x \").append(column).append(\"\\n\");","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"0nandon"},"content":"        str.append(\"    2. value : \\n\");","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"0nandon"},"content":"        for(int i \u003d 0; i \u003c row; i++) {","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"0nandon"},"content":"            str.append(\"        \").append(i).append(\") \");","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"0nandon"},"content":"            for(int j \u003d 0; j \u003c column; j++){","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"0nandon"},"content":"                str.append(tensor[i][j]).append(\" \");","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"0nandon"},"content":"            str.append(\"\\n\");","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"0nandon"},"content":"        return str.toString();","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"0nandon":65,"YC-Michael":1}},{"path":"src/main/java/seedu/badmaths/matrix/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.matrix;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"public class Ui {","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"    public void printInfo(){","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"    public void printResult(Tensor2D tensor){","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"        System.out.println(\"Result.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"        System.out.println(tensor);","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"0nandon":11,"YC-Michael":1}},{"path":"src/main/java/seedu/badmaths/matrix/exception/ExceptionChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.matrix.exception;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.matrix.Tensor2D;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"public class ExceptionChecker {","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"    public void checkShapeMismatch(Tensor2D t1, Tensor2D t2, String type) throws ShapeMismatchException {","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"        switch(type) {","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"        case \"MUL\":","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"            if(t1.column() !\u003d t2.row()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"                throw new ShapeMismatchException();","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"        case \"DOT\":","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"        case \"ADD\":","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"        case \"SUB\":","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"            boolean isColumnMatch \u003d t1.column() !\u003d t2.column();","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"            boolean isRowMatch \u003d t1.row() !\u003d t2.row();","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"            if(isColumnMatch || isRowMatch) {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"                throw new ShapeMismatchException();","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"        default:","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"    public void checkUnknownOperator(String command) throws UnknownOperatorException {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"        boolean isMul \u003d command.contains(\".*\");","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"        boolean isDot \u003d command.contains(\"*\");","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"        boolean isAdd \u003d command.contains(\"+\");","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"        boolean isSub \u003d command.contains(\"-\");","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"        if(!isMul \u0026\u0026 !isDot \u0026\u0026 !isAdd \u0026\u0026 !isSub) {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"            throw new UnknownOperatorException();","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"0nandon":35,"YC-Michael":2}},{"path":"src/main/java/seedu/badmaths/matrix/exception/ExceptionPrinter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.matrix.exception;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"public class ExceptionPrinter {","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"    Logger logger \u003d Logger.getLogger(\"exception\");","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"    public void printShapeMismatchExceptionLog() {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"        String ExceptionMessage \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"        ExceptionMessage +\u003d \"\u003cException occurs\u003e\\n\";","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"        ExceptionMessage +\u003d \"There is shape mismatch between t1 and t2 : cannot execute matrix calculation.\";","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"        System.out.println(ExceptionMessage);","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"        logger.log(Level.WARNING, \"shape mismatch occur.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"    public void printUnknownOperatorExceptionLog() {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"        String ExceptionMessage \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"        ExceptionMessage +\u003d \"\u003cException occurs\u003e\\n\";","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"        ExceptionMessage +\u003d \"Operator in expression is unknown.\";","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"        System.out.println(ExceptionMessage);","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"        logger.log(Level.WARNING, \"Unknown operator.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"0nandon":25,"YC-Michael":1}},{"path":"src/main/java/seedu/badmaths/matrix/exception/ShapeMismatchException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.matrix.exception;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"public class ShapeMismatchException extends Exception {","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"0nandon":3,"YC-Michael":1}},{"path":"src/main/java/seedu/badmaths/matrix/exception/UnknownOperatorException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.matrix.exception;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"public class UnknownOperatorException extends Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"0nandon":3,"YC-Michael":1}},{"path":"src/main/java/seedu/badmaths/note/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.note;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"//@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"public class Note {","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"    private String text; // the note information","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"    private int reviewCount; // how many times the note has been reviewed","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"    private boolean isDone; // whether the note is marked as done or not","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"    private NotePriority.Priority priority; // the priority of the note","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"    // constructor","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"    public Note(String text, NotePriority.Priority priority) {","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"        this.reviewCount \u003d 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"    public Note() {","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"    // getters and setters","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"    public String getText() {","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"        return text;","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"    public void setText(String text) {","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"    public int getReviewCount() {","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"        return reviewCount;","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"    public void incrementReviewCount() {","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"        this.reviewCount++;","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"        return isDone;","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"    public String getIsDoneIcon() {","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"        return (isDone ? \"Y\" : \"N\"); // mark done task with X","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"ZiqiuZeng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"ZiqiuZeng"},"content":"    public NotePriority.Priority getPriority() {","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"        return priority;","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"ZiqiuZeng"},"content":"    public void setPriority(NotePriority.Priority priority) {","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"    public void setReviewCount(int reviewCount) {","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"        this.reviewCount \u003d reviewCount;","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"ZiqiuZeng"},"content":"    public String toString() {","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"ZiqiuZeng"},"content":"        return \"[\" + getPriority() + \"]\" + \"[\" +getIsDoneIcon() + \"]\" + \"[\" + getReviewCount() + \"]\" + getText();","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":69}},{"path":"src/main/java/seedu/badmaths/note/NotePriority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.note;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotePriority {","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"    public enum Priority {","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"        LOW,","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"        MEDIUM,","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"        HIGH","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":9}},{"path":"src/main/java/seedu/badmaths/note/NotesList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.note;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"//@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotesList {","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"    protected ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"    public NotesList(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"    public void reset() {","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.clear();","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"    public void add(String text) {","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        NotePriority.Priority priority \u003d NotePriority.Priority.LOW;","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note \u003d new Note(text, priority);","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.add(note);","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.remove(index);","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"    public void markAsDone(int index) {","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note \u003d notes.get(index);","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"        note.markAsDone();","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"    public void markAsUndone(int index) {","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note \u003d notes.get(index);","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"        note.markAsNotDone();","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"    public void setPriority(int index, NotePriority.Priority priority) {","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note \u003d notes.get(index);","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"ZiqiuZeng"},"content":"        note.setPriority(priority);","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"    public String getText(int index) {","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"        return notes.get(index).toString();","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"    public void review(int index) {","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note \u003d notes.get(index);","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"        note.incrementReviewCount();","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"ZiqiuZeng"},"content":"    public ArrayList\u003cNote\u003e getAll() {","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"ZiqiuZeng"},"content":"        return notes;","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"ZiqiuZeng"},"content":"    public int getSize() {","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"ZiqiuZeng"},"content":"        return notes.size();","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"ZiqiuZeng"},"content":"    public ArrayList\u003cNote\u003e relevantInfo(String keyword) {","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e relevantNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : notes) {","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"ZiqiuZeng"},"content":"            if (note.getText().contains(keyword)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"ZiqiuZeng"},"content":"                relevantNotes.add(note);","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"ZiqiuZeng"},"content":"        return relevantNotes;","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"ZiqiuZeng"},"content":"    public ArrayList\u003cNote\u003e relevantPriority(String priorityStr) {","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"ZiqiuZeng"},"content":"        NotePriority.Priority priority \u003d NotePriority.Priority.valueOf(priorityStr);","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e relevantNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : notes) {","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"ZiqiuZeng"},"content":"            if (note.getPriority() \u003d\u003d priority) {","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"ZiqiuZeng"},"content":"                relevantNotes.add(note);","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"ZiqiuZeng"},"content":"        return relevantNotes;","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":97,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":99,"author":{"gitId":"ZiqiuZeng"},"content":"    public ArrayList\u003cNote\u003e relevantMarked() {","lastModifiedDate":"2023-04-06"},{"lineNumber":100,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e markedNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":101,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : notes) {","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"ZiqiuZeng"},"content":"            if (note.getIsDone()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":103,"author":{"gitId":"ZiqiuZeng"},"content":"                markedNotes.add(note);","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":106,"author":{"gitId":"ZiqiuZeng"},"content":"        return markedNotes;","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":109,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"ZiqiuZeng"},"content":"    public ArrayList\u003cNote\u003e relevantUnmarked() {","lastModifiedDate":"2023-04-06"},{"lineNumber":111,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e unmarkedNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":112,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : notes) {","lastModifiedDate":"2023-04-06"},{"lineNumber":113,"author":{"gitId":"ZiqiuZeng"},"content":"            if (!note.getIsDone()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":114,"author":{"gitId":"ZiqiuZeng"},"content":"                unmarkedNotes.add(note);","lastModifiedDate":"2023-04-06"},{"lineNumber":115,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":116,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":117,"author":{"gitId":"ZiqiuZeng"},"content":"        return unmarkedNotes;","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":119,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"ZiqiuZeng"},"content":"    public void rankByReviewCount() {","lastModifiedDate":"2023-04-06"},{"lineNumber":122,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.sort((note1, note2) -\u003e Integer.compare(note2.getReviewCount(), note1.getReviewCount()));","lastModifiedDate":"2023-04-06"},{"lineNumber":123,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":124,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":125,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-04-06"},{"lineNumber":126,"author":{"gitId":"ZiqiuZeng"},"content":"    public void rankByPriority() {","lastModifiedDate":"2023-04-06"},{"lineNumber":127,"author":{"gitId":"ZiqiuZeng"},"content":"        Collections.sort(notes, new Comparator\u003cNote\u003e() {","lastModifiedDate":"2023-04-06"},{"lineNumber":128,"author":{"gitId":"ZiqiuZeng"},"content":"            @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":129,"author":{"gitId":"ZiqiuZeng"},"content":"            public int compare(Note note1, Note note2) {","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"ZiqiuZeng"},"content":"                NotePriority.Priority priority1 \u003d note1.getPriority();","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"ZiqiuZeng"},"content":"                NotePriority.Priority priority2 \u003d note2.getPriority();","lastModifiedDate":"2023-04-06"},{"lineNumber":132,"author":{"gitId":"ZiqiuZeng"},"content":"                return priority2.compareTo(priority1);","lastModifiedDate":"2023-04-06"},{"lineNumber":133,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":134,"author":{"gitId":"ZiqiuZeng"},"content":"        });","lastModifiedDate":"2023-04-06"},{"lineNumber":135,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":136,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":137,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":137}},{"path":"src/main/java/seedu/badmaths/storage/InvalidNotesFileHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.storage;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.Timer;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"import static seedu.badmaths.storage.NotesFileParser.loadFile;","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"public class InvalidNotesFileHandler {","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void responseHandler(String path, ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"        try{","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"            Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"Sorry, your notes file seems to be corrupted :(\");","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"Do you want to reset the file? (y/n)\");","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"\");","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"            String userInput \u003d inputScanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"            if (userInput.equals(\"y\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"                // clear the file contents if the user confirms","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"                PrintWriter writer \u003d new PrintWriter(path);","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"                writer.print(\"\");","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"                writer.close();","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"                // clear the note list if the user confirms","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"                notes.clear();","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(\"File contents have rest successfully.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(\"You can continue to use the application\");","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(\"If you want to read Help Manual, \" +","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"                        \"please type \u0027Help\u0027 to learn what I can do for you.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"            } else if (userInput.equals(\"n\")){","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(\"You choose not to rest the file.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(\"Please ensure your file status before using the application.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(\"The program will exit in 10 seconds. See you next time.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"                Timer timer \u003d new Timer();","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"                TimerTask exitTask \u003d new TimerTask() {","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"                    @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"                    public void run() {","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"                        System.exit(0);","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"                    }","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"                };","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"ZiqiuZeng"},"content":"                timer.schedule(exitTask, 10000);","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"            } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(\"Invalid input. Please enter \u0027y\u0027 or \u0027n\u0027.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"                loadFile(path);","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (FileNotFoundException eForInvalidFormatException) {","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(eForInvalidFormatException.getMessage());","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ZiqiuZeng":55}},{"path":"src/main/java/seedu/badmaths/storage/NoteParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.storage;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.InvalidFormatException;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotePriority;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"public class NoteParser {","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"    public static Note parseNoteString(String noteString) throws InvalidFormatException{","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"        //text format: Priority \\\\t Status \\\\t Count \\\\t Note","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"        String[] noteInfo \u003d noteString.split(\"\\\\t\");","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"        if (noteInfo.length !\u003d 4) {","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"            throw new InvalidFormatException();","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"        //priority","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"        String priorityStr \u003d noteInfo[0];","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"        Set\u003cString\u003e validPriorities \u003d Set.of(\"LOW\", \"MEDIUM\", \"HIGH\");","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"        if (!validPriorities.contains(priorityStr)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"            //priorityStr is invalid, handle the error","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"            throw new InvalidFormatException();","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        NotePriority.Priority priority \u003d NotePriority.Priority.valueOf(priorityStr);","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"        //note","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"        String noteStr \u003d noteInfo[3];","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"        //count","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"        String reviewCountStr \u003d noteInfo[2];","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"        int reviewCount;","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"        //reviewCountStr is invalid, handle the error","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"            reviewCount \u003d Integer.parseInt(reviewCountStr);","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"            throw new InvalidFormatException();","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"        //status","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"        String isDoneStr \u003d noteInfo[1];","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"        Set\u003cString\u003e validIsDoneStatus \u003d Set.of(\"Y\", \"N\");","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"        if(!validIsDoneStatus.contains(isDoneStr)){","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"            //isDoneStr is invalid, handle the error","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"ZiqiuZeng"},"content":"            throw new InvalidFormatException();","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"        boolean isDone \u003d isDoneStr.equals(\"Y\");","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"        /*","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"ZiqiuZeng"},"content":"         * update notes if the file is valid","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"         */","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"ZiqiuZeng"},"content":"        //update text, priority","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note \u003d new Note(noteStr, priority);","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"        //update status","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"        if(isDone) {","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"ZiqiuZeng"},"content":"            note.markAsDone();","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"            note.markAsNotDone();","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"        //update count","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"        note.setReviewCount(reviewCount);","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"        //add note","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"        return note;","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ZiqiuZeng":67}},{"path":"src/main/java/seedu/badmaths/storage/NotesFileCleaner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.storage;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotesFileCleaner {","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void clearFile(String path) {","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"            FileWriter fileWriter \u003d new FileWriter(path);","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"            fileWriter.write(\"\");","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"            fileWriter.close();","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"File content cleared successfully!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"An error occurred while clearing the file content.\");","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":20}},{"path":"src/main/java/seedu/badmaths/storage/NotesFileContentManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.storage;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotePriority;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotesFileContentManager {","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"    public static String fileContent(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"        StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"        for(Note note : notes) {","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"            //priority","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"            NotePriority.Priority priority \u003d note.getPriority();","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"            String priorityStr \u003d priority.name();","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"            content.append(priorityStr).append(\"\\t\");","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"            //status","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"            boolean isDone \u003d note.getIsDone();","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"            String isDoneStatus \u003d \"N\";","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"            if(isDone) {","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"                isDoneStatus \u003d \"Y\";","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"            content.append(isDoneStatus).append(\"\\t\");","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"            //count","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"            int reviewCount \u003d note.getReviewCount();","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"            String reviewCountStr \u003d String.valueOf(reviewCount);","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"            content.append(reviewCountStr).append(\"\\t\");","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"            //text","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"            String noteText \u003d note.getText();","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"            content.append(noteText);","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"            //line separator","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"            content.append(System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"        return content.toString();","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":37}},{"path":"src/main/java/seedu/badmaths/storage/NotesFileParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.storage;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.InvalidFormatException;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.File;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"import static seedu.badmaths.storage.NoteParser.parseNoteString;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotesFileParser {","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"    public static ArrayList\u003cNote\u003e loadFile(String path) {","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"            Scanner scanner \u003d new Scanner(new File(path));","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"            String noteScanner;","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"                noteScanner \u003d scanner.nextLine();","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"                notes.add(parseNoteString(noteScanner));","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"            InvalidNotesFileHandler.responseHandler(path, notes);","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"        return notes;","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":31}},{"path":"src/main/java/seedu/badmaths/storage/NotesFileWriter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.storage;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.File;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"import static seedu.badmaths.storage.NotesFileContentManager.fileContent;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotesFileWriter {","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void saveFile(String path, ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"File not exists, create it ...\");","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"            if (!file.getParentFile().exists()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(\"Directory not exists, create it ...\");","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"            try {","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"                file.createNewFile();","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"            FileWriter fl \u003d new FileWriter(path);","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"            fl.write(fileContent(notes));","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"            fl.close();","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":36}},{"path":"src/main/java/seedu/badmaths/trigograph/GraphException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.trigograph;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"public class GraphException extends Exception{","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"YC-Michael":5}},{"path":"src/main/java/seedu/badmaths/trigograph/NegativeFrequencyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.trigograph;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"public class NegativeFrequencyException extends Exception{","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-04-01"}],"authorContributionMap":{"YC-Michael":4}},{"path":"src/main/java/seedu/badmaths/trigograph/TrigoGraph.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.trigograph;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.IllegalTodoException;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.ui.Ui;","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"import java.awt.HeadlessException;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"public class TrigoGraph {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    private String trigoEqn;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"    private double amplitude;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"    private double frequency;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"    private double phase;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"    private double verticalShift;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"    private String trig;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    public TrigoGraph(String trigoEqn) {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"        this.trigoEqn \u003d trigoEqn;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"    public void startGraphAnalysis() throws IllegalTodoException {","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser analyser \u003d new TrigoGraphAnalyser(trigoEqn);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"        if (trigoEqn.isEmpty()) {","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"            throw new IllegalTodoException();","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"            if (analyser.canStartAnalyser()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"                getGraphDetails(analyser);","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"                printGraphDetails();","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"                TrigoGraphVisualiser visualiser \u003d new TrigoGraphVisualiser(amplitude, phase, frequency, verticalShift,","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"                        trig);","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"                visualiser.startVisualiser();","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"            } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"                throw new IllegalTodoException();","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"        } catch (IllegalTodoException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"            throw new IllegalTodoException();","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"        } catch (HeadlessException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"            assert true;","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"    public void getGraphDetails(TrigoGraphAnalyser analyser) {","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"        amplitude \u003d analyser.getAmplitude();","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"        frequency \u003d analyser.getFreq();","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"        phase \u003d analyser.getPhase();","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"        verticalShift \u003d analyser.getVerticalShift();","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"        trig \u003d analyser.getTrigonometry();","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"        assert true : \"Information retrieved.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"    public void printGraphDetails() {","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"        if (trig.equals(\"tan\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"            Ui.printTanHasNoAmplitude();","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"            Ui.printAmplitude(amplitude);","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"        Ui.printFrequency(frequency);","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"        Ui.printPhase(phase);","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"        Ui.printVerticalShift(verticalShift);","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"        assert true : \"Information printed.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"YC-Michael"},"content":"    public double getAmplitude() {","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"YC-Michael"},"content":"        return amplitude;","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"YC-Michael"},"content":"    public double getFrequency() {","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"YC-Michael"},"content":"        return frequency;","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"YC-Michael"},"content":"    public double getPhase() {","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"YC-Michael"},"content":"        return phase;","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"YC-Michael"},"content":"    public double getVerticalShift() {","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"YC-Michael"},"content":"        return verticalShift;","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"YC-Michael"},"content":"    public String getTrig() {","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"YC-Michael"},"content":"        return trig;","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"YC-Michael":85}},{"path":"src/main/java/seedu/badmaths/trigograph/TrigoGraphAnalyser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.trigograph;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.ui.Ui;","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"import java.io.File;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"public class TrigoGraphAnalyser {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"    private static final boolean CAN_RUN_ANALYSER \u003d true;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"    private static final boolean CANNOT_RUN_ANALYSER \u003d false;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"    private static final int PLACEHOLDER_SIZE_WITH_NEG_PHASE \u003d 3;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    private static final int PLACEHOLDER_SIZE_WITH_POS_PHASE \u003d 2;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"    private static final int PLACEHOLDER_SIZE_WITH_TRIGO_AND_VERTICAL_SHIFT \u003d 2;","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"    private static final int PLACEHOLDER_SIZE_WITH_AMPLITUDE_AND_EQN \u003d 2;","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"    private static final int INDEX_FOR_NEG_PHASE_WITH_NEG_FREQ \u003d 2;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"    private static final int INDEX_FOR_NEG_PHASE_WITH_POS_FREQ \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"    private static final int INDEX_FOR_FREQ_WITH_POS_PHASE \u003d 0;","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"    private static final int INDEX_FOR_POS_FREQ \u003d 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"    private static final int INDEX_FOR_POS_PHASE \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"    private static final int INDEX_FOR_NEG_FREQ \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"    private static final int START_POS_OF_TRIG \u003d 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"    private static final int END_POS_OF_TRIG \u003d 3;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"    private static final int CORRECT_POS_OF_PHASE \u003d 4;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"    private static final double ONE_HERTZ \u003d 1.0;","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"    private static final double ONE_AMPLITUDE \u003d 1.0;","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"    private static final double ZERO_PHASE \u003d 0.0;","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"    private static final double ZERO_VERTICAL_SHIFT \u003d 0.0;","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"    private static final double NEGATIVE_SIGN \u003d -1.0;","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"    private static final double ZERO_HERTZ \u003d 0.0;","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"    private static final int FIRST_INDEX_FOR_FREQ \u003d 0;","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"    private static final String STRING_NEGATIVE_SIGN \u003d \"-\";","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"    private static final String STRING_POSITIVE_SIGN \u003d \"+\";","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"    private static Logger logger \u003d Logger.getLogger(TrigoGraphAnalyser.class.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"    private String trigoEqn;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"    private String trigonometry;","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"    private double phase;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"    private double amplitude;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"    private double verticalShift;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"    private double freq;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"    public TrigoGraphAnalyser(String trigoEqn) {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"        this.trigoEqn \u003d trigoEqn;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"    public static void setUpLogger() {","lastModifiedDate":"2023-04-01"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-04-01"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-04-01"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"            if (!new File(\"trigoGraphAnalyser.log\").exists()) {","lastModifiedDate":"2023-04-01"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"                new File(\"trigoGraphAnalyser.log\").createNewFile();","lastModifiedDate":"2023-04-01"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"            FileHandler logFile \u003d new FileHandler(\"trigoGraphAnalyser.log\", true);","lastModifiedDate":"2023-04-01"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-04-01"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-04-01"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":66,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":67,"author":{"gitId":"YC-Michael"},"content":"    public String getTrig() {","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"YC-Michael"},"content":"        return trigonometry;","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":72,"author":{"gitId":"YC-Michael"},"content":"     * Main method that calls various methods to split the equation into Amplitude, Frequency, Phase Shift,","lastModifiedDate":"2023-04-03"},{"lineNumber":73,"author":{"gitId":"YC-Michael"},"content":"     * and Vertical Shift. This method also catches the exceptions thrown and prints out the corresponding message to","lastModifiedDate":"2023-04-03"},{"lineNumber":74,"author":{"gitId":"YC-Michael"},"content":"     * the user.","lastModifiedDate":"2023-04-03"},{"lineNumber":75,"author":{"gitId":"YC-Michael"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"YC-Michael"},"content":"     * @return true if equation entered is valid.","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":78,"author":{"gitId":"YC-Michael"},"content":"    public boolean canStartAnalyser() {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"YC-Michael"},"content":"        setUpLogger();","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"YC-Michael"},"content":"            String[] amplitudeAndEqn \u003d splitAmplitudeFromTrigoEqn();","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"YC-Michael"},"content":"            findAmplitude(amplitudeAndEqn);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"YC-Michael"},"content":"            String[] trigoAndVerticalShift;","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"YC-Michael"},"content":"            // To handle the situation if equation starts with tan or 1*tan","lastModifiedDate":"2023-04-03"},{"lineNumber":85,"author":{"gitId":"YC-Michael"},"content":"            if (isAmplitudeEqualsToOne(amplitudeAndEqn[0])) {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"YC-Michael"},"content":"                trigoAndVerticalShift \u003d splitTrigoAndVerticalShift(trigoEqn);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"YC-Michael"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"YC-Michael"},"content":"                trigoAndVerticalShift \u003d splitTrigoAndVerticalShift(amplitudeAndEqn[1]);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"YC-Michael"},"content":"            findVerticalShift(trigoAndVerticalShift);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"YC-Michael"},"content":"            String trigo \u003d trigoAndVerticalShift[0];","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"YC-Michael"},"content":"            splitTrigoIntoPhasors(trigo);","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"YC-Michael"},"content":"            return CAN_RUN_ANALYSER;","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"YC-Michael"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"YC-Michael"},"content":"            logger.log(Level.SEVERE, \"NumberFormatException\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"YC-Michael"},"content":"            return CANNOT_RUN_ANALYSER;","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"YC-Michael"},"content":"        } catch (GraphException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"YC-Michael"},"content":"            logger.log(Level.SEVERE, \"GraphException\", e);","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"YC-Michael"},"content":"            Ui.printNegativeAmplitudeEntered();","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"YC-Michael"},"content":"            return CANNOT_RUN_ANALYSER;","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"YC-Michael"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"YC-Michael"},"content":"            logger.log(Level.SEVERE, \"ArrayIndexOutOfBounds\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"YC-Michael"},"content":"            return CANNOT_RUN_ANALYSER;","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"YC-Michael"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"YC-Michael"},"content":"            logger.log(Level.SEVERE, \"IllegalArguementException\", e);","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"YC-Michael"},"content":"            return CANNOT_RUN_ANALYSER;","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"YC-Michael"},"content":"        } catch (NegativeFrequencyException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":108,"author":{"gitId":"YC-Michael"},"content":"            Ui.printNegativeFrequencyEntered();","lastModifiedDate":"2023-04-01"},{"lineNumber":109,"author":{"gitId":"YC-Michael"},"content":"            return CANNOT_RUN_ANALYSER;","lastModifiedDate":"2023-04-01"},{"lineNumber":110,"author":{"gitId":"YC-Michael"},"content":"        } catch (ZeroFrequencyException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":111,"author":{"gitId":"YC-Michael"},"content":"            Ui.printZeroFrequencyEntered();","lastModifiedDate":"2023-04-01"},{"lineNumber":112,"author":{"gitId":"YC-Michael"},"content":"            return CANNOT_RUN_ANALYSER;","lastModifiedDate":"2023-04-01"},{"lineNumber":113,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":117,"author":{"gitId":"YC-Michael"},"content":"     * Assigns an int to this amplitude.","lastModifiedDate":"2023-04-03"},{"lineNumber":118,"author":{"gitId":"YC-Michael"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":119,"author":{"gitId":"YC-Michael"},"content":"     * @param eqn contains the value of amplitude at index 0 and the remaining equation at index 1.","lastModifiedDate":"2023-04-03"},{"lineNumber":120,"author":{"gitId":"YC-Michael"},"content":"     * @throws NumberFormatException if Double.parseDouble attempts to parse a non-numerical string such as \"abc\".","lastModifiedDate":"2023-04-03"},{"lineNumber":121,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":122,"author":{"gitId":"YC-Michael"},"content":"    public void findAmplitude(String[] eqn) throws NumberFormatException {","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"YC-Michael"},"content":"        String[] trigoAndVerticalShift;","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"YC-Michael"},"content":"        if (isAmplitudeEqualsToOne(eqn[0])) {","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"YC-Michael"},"content":"            amplitude \u003d ONE_AMPLITUDE;","lastModifiedDate":"2023-04-03"},{"lineNumber":127,"author":{"gitId":"YC-Michael"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"YC-Michael"},"content":"            amplitude \u003d Double.parseDouble(eqn[0]);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"YC-Michael"},"content":"    private void testForSignOfAmplitude() throws GraphException {","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"YC-Michael"},"content":"        if (trigoEqn.startsWith(\"-\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"YC-Michael"},"content":"            throw new GraphException();","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"YC-Michael"},"content":"    public void testForMultipleAsterisk(String input) throws NumberFormatException {","lastModifiedDate":"2023-04-05"},{"lineNumber":139,"author":{"gitId":"YC-Michael"},"content":"        if (input.startsWith(\"*\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"YC-Michael"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"YC-Michael"},"content":"    public String[] splitAmplitudeFromTrigoEqn() throws GraphException,","lastModifiedDate":"2023-04-05"},{"lineNumber":145,"author":{"gitId":"YC-Michael"},"content":"            NumberFormatException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-04-05"},{"lineNumber":146,"author":{"gitId":"YC-Michael"},"content":"        testForSignOfAmplitude();","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"YC-Michael"},"content":"        String[] amplitudeAndEqn \u003d trigoEqn.split(\"\\\\*\", PLACEHOLDER_SIZE_WITH_AMPLITUDE_AND_EQN);","lastModifiedDate":"2023-04-03"},{"lineNumber":148,"author":{"gitId":"YC-Michael"},"content":"        testForMultipleAsterisk(amplitudeAndEqn[1]);","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"YC-Michael"},"content":"        return amplitudeAndEqn;","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"YC-Michael"},"content":"    public Double getAmplitude() {","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"YC-Michael"},"content":"        return amplitude;","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"YC-Michael"},"content":"    public double getPhase() {","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"YC-Michael"},"content":"        return phase;","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"YC-Michael"},"content":"    public double getVerticalShift() {","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"YC-Michael"},"content":"        return verticalShift;","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"YC-Michael"},"content":"    public double getFreq() {","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"YC-Michael"},"content":"        return freq;","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":168,"author":{"gitId":"YC-Michael"},"content":"    public String getTrigonometry() {","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"YC-Michael"},"content":"        return trigonometry;","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":172,"author":{"gitId":"YC-Michael"},"content":"    private boolean isAmplitudeEqualsToOne(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"YC-Michael"},"content":"        if (input.startsWith(\"cos\") || input.startsWith(\"sin\") || input.startsWith(\"tan\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"YC-Michael"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"YC-Michael"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"YC-Michael"},"content":"    private boolean isVerticalShiftZero(String verticalShift) {","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"YC-Michael"},"content":"        return verticalShift.isEmpty();","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"YC-Michael"},"content":"    private String[] splitTrigoAndVerticalShift(String eqn) {","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"YC-Michael"},"content":"        String[] trigoAndVerticalShift \u003d eqn.split(\"\\\\)\", PLACEHOLDER_SIZE_WITH_TRIGO_AND_VERTICAL_SHIFT);","lastModifiedDate":"2023-04-03"},{"lineNumber":188,"author":{"gitId":"YC-Michael"},"content":"        return trigoAndVerticalShift;","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"YC-Michael"},"content":"    private void findVerticalShift(String[] trigoAndVerticalShift) {","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"YC-Michael"},"content":"        if (isVerticalShiftZero(trigoAndVerticalShift[1])) {","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"YC-Michael"},"content":"            verticalShift \u003d ZERO_VERTICAL_SHIFT;","lastModifiedDate":"2023-04-03"},{"lineNumber":194,"author":{"gitId":"YC-Michael"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"YC-Michael"},"content":"            verticalShift \u003d Double.parseDouble(trigoAndVerticalShift[1]);","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":199,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":200,"author":{"gitId":"YC-Michael"},"content":"     * Remove the closing bracket in {@code trigo} to form a proper trigonometric equation containing frequency and","lastModifiedDate":"2023-04-03"},{"lineNumber":201,"author":{"gitId":"YC-Michael"},"content":"     * phase.","lastModifiedDate":"2023-04-03"},{"lineNumber":202,"author":{"gitId":"YC-Michael"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":203,"author":{"gitId":"YC-Michael"},"content":"     * @param trigo is a trigo equation with amplitude and vertical shift removed","lastModifiedDate":"2023-04-03"},{"lineNumber":204,"author":{"gitId":"YC-Michael"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2023-04-03"},{"lineNumber":205,"author":{"gitId":"YC-Michael"},"content":"     * @throws NegativeFrequencyException","lastModifiedDate":"2023-04-03"},{"lineNumber":206,"author":{"gitId":"YC-Michael"},"content":"     * @throws ZeroFrequencyException","lastModifiedDate":"2023-04-03"},{"lineNumber":207,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":208,"author":{"gitId":"YC-Michael"},"content":"    public void splitTrigoIntoPhasors(String trigo) throws IllegalArgumentException, NegativeFrequencyException,","lastModifiedDate":"2023-04-01"},{"lineNumber":209,"author":{"gitId":"YC-Michael"},"content":"            ZeroFrequencyException {","lastModifiedDate":"2023-04-01"},{"lineNumber":210,"author":{"gitId":"YC-Michael"},"content":"        int startPosOfPhase \u003d trigo.indexOf(\"(\") + 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"YC-Michael"},"content":"        int endPosOfPhase \u003d trigo.length();","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"YC-Michael"},"content":"        if (startPosOfPhase \u003d\u003d CORRECT_POS_OF_PHASE) {","lastModifiedDate":"2023-03-22"},{"lineNumber":213,"author":{"gitId":"YC-Michael"},"content":"            trigonometry \u003d trigo.substring(START_POS_OF_TRIG, END_POS_OF_TRIG);","lastModifiedDate":"2023-03-22"},{"lineNumber":214,"author":{"gitId":"YC-Michael"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":215,"author":{"gitId":"YC-Michael"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2023-03-22"},{"lineNumber":216,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":217,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":218,"author":{"gitId":"YC-Michael"},"content":"        String phase \u003d trigo.substring(startPosOfPhase, endPosOfPhase);","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"YC-Michael"},"content":"        splitPhasorsIntoFreq(phase);","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"YC-Michael"},"content":"    public void findFreqForNoPhasors(String phasors) throws NegativeFrequencyException, ZeroFrequencyException {","lastModifiedDate":"2023-04-01"},{"lineNumber":223,"author":{"gitId":"YC-Michael"},"content":"        phase \u003d ZERO_PHASE;","lastModifiedDate":"2023-04-03"},{"lineNumber":224,"author":{"gitId":"khooyourun"},"content":"        boolean isFreqNegative \u003d testForNegativeFreq(phasors);","lastModifiedDate":"2023-03-16"},{"lineNumber":225,"author":{"gitId":"YC-Michael"},"content":"        findFreq(phasors, isFreqNegative);","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":227,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":228,"author":{"gitId":"YC-Michael"},"content":"    /*","lastModifiedDate":"2023-04-03"},{"lineNumber":229,"author":{"gitId":"YC-Michael"},"content":"     * In the event that the phase is positive, this method will find the phase and frequency.","lastModifiedDate":"2023-04-03"},{"lineNumber":230,"author":{"gitId":"YC-Michael"},"content":"     * @param phasors contain frequency and phase","lastModifiedDate":"2023-04-03"},{"lineNumber":231,"author":{"gitId":"YC-Michael"},"content":"     * @throws NegativeFrequencyException","lastModifiedDate":"2023-04-03"},{"lineNumber":232,"author":{"gitId":"YC-Michael"},"content":"     * @throws ZeroFrequencyException","lastModifiedDate":"2023-04-03"},{"lineNumber":233,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":234,"author":{"gitId":"YC-Michael"},"content":"    private void findFreqForPlus(String phasors) throws NegativeFrequencyException, ZeroFrequencyException {","lastModifiedDate":"2023-04-01"},{"lineNumber":235,"author":{"gitId":"khooyourun"},"content":"        String[] freqAndShift \u003d phasors.split(\"\\\\+\", PLACEHOLDER_SIZE_WITH_POS_PHASE);","lastModifiedDate":"2023-03-16"},{"lineNumber":236,"author":{"gitId":"khooyourun"},"content":"        findPhase(freqAndShift[INDEX_FOR_POS_PHASE], false);","lastModifiedDate":"2023-03-16"},{"lineNumber":237,"author":{"gitId":"YC-Michael"},"content":"        boolean isFreqNegative \u003d testForNegativeFreq(freqAndShift[INDEX_FOR_FREQ_WITH_POS_PHASE]);","lastModifiedDate":"2023-04-03"},{"lineNumber":238,"author":{"gitId":"YC-Michael"},"content":"        findFreq(freqAndShift[INDEX_FOR_POS_FREQ], isFreqNegative);","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":240,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":241,"author":{"gitId":"YC-Michael"},"content":"    private void findFreqForMinus(String phasors) throws NegativeFrequencyException, ZeroFrequencyException {","lastModifiedDate":"2023-04-01"},{"lineNumber":242,"author":{"gitId":"YC-Michael"},"content":"        /*","lastModifiedDate":"2023-04-03"},{"lineNumber":243,"author":{"gitId":"YC-Michael"},"content":"         * If both phase and frequency are negative, empty string will be in index 0,freq will be in index 1,","lastModifiedDate":"2023-04-03"},{"lineNumber":244,"author":{"gitId":"YC-Michael"},"content":"         * and phase will be in index 2 of freqAndShift.","lastModifiedDate":"2023-04-03"},{"lineNumber":245,"author":{"gitId":"YC-Michael"},"content":"         * However, if only phase is negative, freq will be in index 0, phase will be in index 1, and empty string will","lastModifiedDate":"2023-04-03"},{"lineNumber":246,"author":{"gitId":"YC-Michael"},"content":"         * in index 2.","lastModifiedDate":"2023-04-03"},{"lineNumber":247,"author":{"gitId":"YC-Michael"},"content":"         */","lastModifiedDate":"2023-04-03"},{"lineNumber":248,"author":{"gitId":"YC-Michael"},"content":"        String[] freqAndShift \u003d phasors.split(STRING_NEGATIVE_SIGN, PLACEHOLDER_SIZE_WITH_NEG_PHASE);","lastModifiedDate":"2023-04-03"},{"lineNumber":249,"author":{"gitId":"khooyourun"},"content":"        boolean isPhaseNegative \u003d true;","lastModifiedDate":"2023-03-16"},{"lineNumber":250,"author":{"gitId":"YC-Michael"},"content":"        // Find if freq is negative based on its index in freqAndShift as mentioned above","lastModifiedDate":"2023-04-03"},{"lineNumber":251,"author":{"gitId":"khooyourun"},"content":"        boolean isFreqNegative \u003d testForNegativeFreq(freqAndShift);","lastModifiedDate":"2023-03-16"},{"lineNumber":252,"author":{"gitId":"YC-Michael"},"content":"        if (isFreqNegative) {","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"YC-Michael"},"content":"            findPhase(freqAndShift[INDEX_FOR_NEG_PHASE_WITH_NEG_FREQ], isPhaseNegative);","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"YC-Michael"},"content":"            findFreq(freqAndShift[INDEX_FOR_NEG_FREQ], isFreqNegative);","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"YC-Michael"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"YC-Michael"},"content":"            findPhase(freqAndShift[INDEX_FOR_NEG_PHASE_WITH_POS_FREQ], isPhaseNegative);","lastModifiedDate":"2023-03-14"},{"lineNumber":257,"author":{"gitId":"YC-Michael"},"content":"            findFreq(freqAndShift[INDEX_FOR_POS_FREQ], isFreqNegative);","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":259,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":260,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":261,"author":{"gitId":"YC-Michael"},"content":"    private void splitPhasorsIntoFreq(String phasors) throws NegativeFrequencyException, ZeroFrequencyException {","lastModifiedDate":"2023-04-01"},{"lineNumber":262,"author":{"gitId":"khooyourun"},"content":"        if (phasors.endsWith(\"x\")) {","lastModifiedDate":"2023-03-16"},{"lineNumber":263,"author":{"gitId":"khooyourun"},"content":"            findFreqForNoPhasors(phasors);","lastModifiedDate":"2023-03-16"},{"lineNumber":264,"author":{"gitId":"YC-Michael"},"content":"        } else if (phasors.contains(STRING_POSITIVE_SIGN)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":265,"author":{"gitId":"khooyourun"},"content":"            findFreqForPlus(phasors);","lastModifiedDate":"2023-03-16"},{"lineNumber":266,"author":{"gitId":"khooyourun"},"content":"        } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":267,"author":{"gitId":"khooyourun"},"content":"            findFreqForMinus(phasors);","lastModifiedDate":"2023-03-16"},{"lineNumber":268,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":269,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":270,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":271,"author":{"gitId":"YC-Michael"},"content":"    private boolean testForNegativeFreq(String[] freqAndShift) {","lastModifiedDate":"2023-03-14"},{"lineNumber":272,"author":{"gitId":"YC-Michael"},"content":"        if (freqAndShift[INDEX_FOR_POS_FREQ].isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":273,"author":{"gitId":"YC-Michael"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":274,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":275,"author":{"gitId":"YC-Michael"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":276,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":277,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":278,"author":{"gitId":"YC-Michael"},"content":"    public boolean testForNegativeFreq(String freq) {","lastModifiedDate":"2023-04-05"},{"lineNumber":279,"author":{"gitId":"YC-Michael"},"content":"        if (freq.startsWith(STRING_NEGATIVE_SIGN)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":280,"author":{"gitId":"YC-Michael"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":281,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":282,"author":{"gitId":"YC-Michael"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":283,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":284,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":285,"author":{"gitId":"YC-Michael"},"content":"    public void findFreq(String freqWithX, boolean isFreqNeg) throws NumberFormatException, NegativeFrequencyException,","lastModifiedDate":"2023-04-01"},{"lineNumber":286,"author":{"gitId":"YC-Michael"},"content":"            ZeroFrequencyException {","lastModifiedDate":"2023-04-01"},{"lineNumber":287,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":288,"author":{"gitId":"YC-Michael"},"content":"            if (isFreqNeg) {","lastModifiedDate":"2023-04-01"},{"lineNumber":289,"author":{"gitId":"YC-Michael"},"content":"                throw new NegativeFrequencyException();","lastModifiedDate":"2023-04-01"},{"lineNumber":290,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":291,"author":{"gitId":"YC-Michael"},"content":"            String freqComponents;","lastModifiedDate":"2023-03-14"},{"lineNumber":292,"author":{"gitId":"YC-Michael"},"content":"            if (freqWithX.equals(\"x\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":293,"author":{"gitId":"YC-Michael"},"content":"                freq \u003d ONE_HERTZ / (2 * Math.PI);","lastModifiedDate":"2023-04-05"},{"lineNumber":294,"author":{"gitId":"YC-Michael"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":295,"author":{"gitId":"YC-Michael"},"content":"                /*","lastModifiedDate":"2023-04-03"},{"lineNumber":296,"author":{"gitId":"YC-Michael"},"content":"                 *  freqWithX can have 1 or 2 \"*\", e.g. 5*pi*x or 5*x, simply split to get \"5\" will suffice as checks","lastModifiedDate":"2023-04-03"},{"lineNumber":297,"author":{"gitId":"YC-Michael"},"content":"                 *  below will take \"pi\" into account, if any.","lastModifiedDate":"2023-04-03"},{"lineNumber":298,"author":{"gitId":"YC-Michael"},"content":"                 */","lastModifiedDate":"2023-04-03"},{"lineNumber":299,"author":{"gitId":"YC-Michael"},"content":"                int lastIndexForFreq \u003d freqWithX.indexOf(\"*\");","lastModifiedDate":"2023-03-14"},{"lineNumber":300,"author":{"gitId":"YC-Michael"},"content":"                freqComponents \u003d freqWithX.substring(FIRST_INDEX_FOR_FREQ, lastIndexForFreq);","lastModifiedDate":"2023-04-03"},{"lineNumber":301,"author":{"gitId":"YC-Michael"},"content":"                checkForZeroFreq(freqComponents);","lastModifiedDate":"2023-04-01"},{"lineNumber":302,"author":{"gitId":"YC-Michael"},"content":"                if (trigoEqn.contains(\"pi\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":303,"author":{"gitId":"YC-Michael"},"content":"                    freq \u003d Double.parseDouble(freqComponents) / 2;","lastModifiedDate":"2023-03-14"},{"lineNumber":304,"author":{"gitId":"YC-Michael"},"content":"                } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":305,"author":{"gitId":"YC-Michael"},"content":"                    freq \u003d Double.parseDouble(freqComponents) / (2 * Math.PI);","lastModifiedDate":"2023-03-14"},{"lineNumber":306,"author":{"gitId":"YC-Michael"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":307,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":308,"author":{"gitId":"YC-Michael"},"content":"            freq \u003d Math.abs(freq);","lastModifiedDate":"2023-03-14"},{"lineNumber":309,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":310,"author":{"gitId":"YC-Michael"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":311,"author":{"gitId":"YC-Michael"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-03-14"},{"lineNumber":312,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":313,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":314,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":315,"author":{"gitId":"YC-Michael"},"content":"    public void checkForZeroFreq(String freqComponents) throws ZeroFrequencyException {","lastModifiedDate":"2023-04-01"},{"lineNumber":316,"author":{"gitId":"YC-Michael"},"content":"        if (Double.parseDouble(freqComponents) \u003d\u003d ZERO_HERTZ) {","lastModifiedDate":"2023-04-03"},{"lineNumber":317,"author":{"gitId":"YC-Michael"},"content":"            throw new ZeroFrequencyException();","lastModifiedDate":"2023-04-01"},{"lineNumber":318,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":319,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":320,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":321,"author":{"gitId":"YC-Michael"},"content":"    private void findPhase(String phasor, boolean isPhaseNegative) throws NumberFormatException {","lastModifiedDate":"2023-03-14"},{"lineNumber":322,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":323,"author":{"gitId":"YC-Michael"},"content":"            if (phasor.isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":324,"author":{"gitId":"YC-Michael"},"content":"                phase \u003d ZERO_PHASE;","lastModifiedDate":"2023-04-03"},{"lineNumber":325,"author":{"gitId":"YC-Michael"},"content":"            } else if (isPhaseNegative) {","lastModifiedDate":"2023-03-14"},{"lineNumber":326,"author":{"gitId":"YC-Michael"},"content":"                phase \u003d Double.parseDouble(phasor) * (NEGATIVE_SIGN);","lastModifiedDate":"2023-04-03"},{"lineNumber":327,"author":{"gitId":"YC-Michael"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":328,"author":{"gitId":"YC-Michael"},"content":"                phase \u003d Double.parseDouble(phasor);","lastModifiedDate":"2023-03-14"},{"lineNumber":329,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":330,"author":{"gitId":"YC-Michael"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":331,"author":{"gitId":"YC-Michael"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-03-14"},{"lineNumber":332,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":333,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":334,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":335,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"khooyourun":15,"YC-Michael":320}},{"path":"src/main/java/seedu/badmaths/trigograph/TrigoGraphVisualiser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.trigograph;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.IllegalTodoException;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"import java.awt.HeadlessException;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"import java.awt.Toolkit;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"import java.awt.Color;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"import java.awt.Dimension;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"import java.awt.Graphics;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"import javax.swing.JFrame;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"import javax.swing.JPanel;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"public class TrigoGraphVisualiser extends JPanel {","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"    private static final double PRECISION_OF_GRAPH \u003d 0.00001;","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    private static final double START_TIME \u003d 0.0;","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"    private static final int ZERO_X_COORDINATES \u003d 0;","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"    private static final int ZERO_Y_COORDINATES \u003d 0;","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"    private double amplitude;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"    private double phase;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"    private double freqInHz;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"    private double verticalShift;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"    private String trig;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"    private double xMin;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"    private double xMax;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"    private double yMin;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"    private double yMax;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"    private boolean validState;","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"    public TrigoGraphVisualiser(double amplitude, double phase, double freqInHz, double verticalShift, String trig)","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"            throws IllegalTodoException {","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"        this.amplitude \u003d amplitude;","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"        this.trig \u003d trig;","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"        this.phase \u003d phase;","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"        this.freqInHz \u003d freqInHz;","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"        this.verticalShift \u003d verticalShift;","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"        xMin \u003d (-2 * Math.PI) / freqInHz;","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"        xMax \u003d (2 * Math.PI) / freqInHz;","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"        yMin \u003d -(amplitude + Math.abs(verticalShift)) * 2;","lastModifiedDate":"2023-04-01"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"        yMax \u003d (amplitude + Math.abs(verticalShift)) * 2;","lastModifiedDate":"2023-04-01"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"        validState \u003d isTrigoValid();","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"    public boolean isTrigoValid() throws IllegalTodoException {","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"        if (trig.equals(\"tan\") || trig.equals(\"cos\") || trig.equals(\"sin\")) {","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"            return true;","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"        throw new IllegalTodoException();","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"    protected void paintComponent(Graphics g) {","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"        super.paintComponent(g);","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"        int width \u003d getWidth();","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"        int height \u003d getHeight();","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"        // Calculate scaling factors","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"        double xScale \u003d width / (xMax - xMin);","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"        double yScale \u003d height / (yMax - yMin);","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"        // Translate to make origin at the center","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"YC-Michael"},"content":"        g.translate(width / 2, height / 2);","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"YC-Michael"},"content":"        createXAxis(g, xScale, yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"YC-Michael"},"content":"        createYAxis(g, xScale, yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"YC-Michael"},"content":"        labelOrigin(g, xScale, yScale);","lastModifiedDate":"2023-04-01"},{"lineNumber":70,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"YC-Michael"},"content":"        if (trig.equals(\"sin\")) {","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"YC-Michael"},"content":"            drawSinCurve(g, xScale, yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"YC-Michael"},"content":"        if (trig.equals(\"cos\")) {","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"YC-Michael"},"content":"            drawCosCurve(g, xScale, yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"YC-Michael"},"content":"        if (trig.equals(\"tan\")) {","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"YC-Michael"},"content":"            drawTanCurve(g, xScale, yScale);","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"YC-Michael"},"content":"    public void labelOrigin(Graphics g, double xScale, double yScale) {","lastModifiedDate":"2023-04-01"},{"lineNumber":83,"author":{"gitId":"YC-Michael"},"content":"        g.drawString(\"0\", ZERO_X_COORDINATES, ZERO_Y_COORDINATES);","lastModifiedDate":"2023-04-03"},{"lineNumber":84,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":85,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":86,"author":{"gitId":"YC-Michael"},"content":"    public void createYAxis(Graphics g, double xScale, double yScale) {","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"YC-Michael"},"content":"        g.setColor(Color.BLACK);","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"YC-Michael"},"content":"        g.drawLine(ZERO_X_COORDINATES, (int) (yMin * yScale), ZERO_Y_COORDINATES, (int) (yMax * yScale));","lastModifiedDate":"2023-04-03"},{"lineNumber":89,"author":{"gitId":"YC-Michael"},"content":"        g.drawString(\"Amplitude\", ZERO_X_COORDINATES, (int) ((yMin * yScale) * 0.9));","lastModifiedDate":"2023-04-03"},{"lineNumber":90,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"YC-Michael"},"content":"    public void createXAxis(Graphics g, double xScale, double yScale) {","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"YC-Michael"},"content":"        g.setColor(Color.BLACK);","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"YC-Michael"},"content":"        g.drawLine((int) (xMin * xScale), ZERO_Y_COORDINATES, (int) (xMax * xScale), ZERO_Y_COORDINATES);","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"YC-Michael"},"content":"        g.drawString(\"time\", (int) ((xMax * xScale) - 0.2 * xMax * xScale), ZERO_Y_COORDINATES);","lastModifiedDate":"2023-04-03"},{"lineNumber":96,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"YC-Michael"},"content":"    public void drawSinCurve(Graphics g, double xScale, double yScale) {","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"YC-Michael"},"content":"        g.setColor(Color.BLUE);","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"YC-Michael"},"content":"        labelAmplitude(g, yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"YC-Michael"},"content":"        for (double x \u003d START_TIME; x \u003c\u003d xMax; x +\u003d PRECISION_OF_GRAPH) {","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"YC-Michael"},"content":"            double y \u003d amplitude * Math.sin(freqInHz * x + phase) + verticalShift;","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"YC-Michael"},"content":"            int xPixel \u003d (int) Math.round(x * xScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"YC-Michael"},"content":"            int yPixel \u003d (int) Math.round(-y * yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"YC-Michael"},"content":"            g.drawLine(xPixel - 1, yPixel, xPixel, yPixel);","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"YC-Michael"},"content":"    public void labelAmplitude(Graphics g, double yScale) {","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"YC-Michael"},"content":"        g.drawString(String.valueOf(verticalShift + amplitude), ZERO_X_COORDINATES,","lastModifiedDate":"2023-04-03"},{"lineNumber":111,"author":{"gitId":"YC-Michael"},"content":"                (int) (Math.round(-(verticalShift + amplitude) * yScale)));","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"YC-Michael"},"content":"        g.drawString(String.valueOf(verticalShift - amplitude), ZERO_X_COORDINATES,","lastModifiedDate":"2023-04-03"},{"lineNumber":113,"author":{"gitId":"YC-Michael"},"content":"                (int) (Math.round(-(verticalShift - amplitude) * yScale)));","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"YC-Michael"},"content":"    public void drawCosCurve(Graphics g, double xScale, double yScale) {","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"YC-Michael"},"content":"        g.setColor(Color.RED);","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"YC-Michael"},"content":"        labelAmplitude(g, yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"YC-Michael"},"content":"        for (double x \u003d START_TIME; x \u003c\u003d xMax; x +\u003d PRECISION_OF_GRAPH) {","lastModifiedDate":"2023-04-03"},{"lineNumber":120,"author":{"gitId":"YC-Michael"},"content":"            double y \u003d amplitude * Math.cos(freqInHz * x + phase) + verticalShift;","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"YC-Michael"},"content":"            int xPixel \u003d (int) Math.round(x * xScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"YC-Michael"},"content":"            int yPixel \u003d (int) Math.round(-y * yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"YC-Michael"},"content":"            g.drawLine(xPixel - 1, yPixel, xPixel, yPixel);","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"YC-Michael"},"content":"    public void drawTanCurve(Graphics g, double xScale, double yScale) {","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"YC-Michael"},"content":"        g.setColor(Color.BLACK);","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"YC-Michael"},"content":"        for (double x \u003d START_TIME; x \u003c\u003d xMax; x +\u003d PRECISION_OF_GRAPH) {","lastModifiedDate":"2023-04-03"},{"lineNumber":131,"author":{"gitId":"YC-Michael"},"content":"            double y \u003d amplitude * Math.tan(freqInHz * x + phase) + verticalShift;","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"YC-Michael"},"content":"            int xPixel \u003d (int) Math.round(x * xScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"YC-Michael"},"content":"            int yPixel \u003d (int) Math.round(-y * yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":134,"author":{"gitId":"YC-Michael"},"content":"            g.drawLine(xPixel - 1, yPixel, xPixel, yPixel);","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"YC-Michael"},"content":"    public boolean isValidState() {","lastModifiedDate":"2023-04-05"},{"lineNumber":139,"author":{"gitId":"YC-Michael"},"content":"        return validState;","lastModifiedDate":"2023-04-05"},{"lineNumber":140,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":141,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"YC-Michael"},"content":"    public void startVisualiser() throws HeadlessException, IllegalTodoException {","lastModifiedDate":"2023-04-05"},{"lineNumber":143,"author":{"gitId":"YC-Michael"},"content":"        JFrame frame \u003d new JFrame(\"Trigonometric Graph\");","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"YC-Michael"},"content":"        Dimension screenSize \u003d Toolkit.getDefaultToolkit().getScreenSize();","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"YC-Michael"},"content":"        int screenWidth \u003d screenSize.width;","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"YC-Michael"},"content":"        int screenHeight \u003d screenSize.height;","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"YC-Michael"},"content":"        frame.setSize(screenWidth / 2, screenHeight / 2);","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"YC-Michael"},"content":"        frame.setLocationRelativeTo(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":149,"author":{"gitId":"YC-Michael"},"content":"        frame.add(new TrigoGraphVisualiser(amplitude, phase, freqInHz, verticalShift, trig));","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"YC-Michael"},"content":"        frame.setVisible(true);","lastModifiedDate":"2023-03-22"},{"lineNumber":151,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"YC-Michael":153}},{"path":"src/main/java/seedu/badmaths/trigograph/ZeroFrequencyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.trigograph;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"public class ZeroFrequencyException extends Exception{","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-04-01"}],"authorContributionMap":{"YC-Michael":4}},{"path":"src/main/java/seedu/badmaths/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.ui;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotePriority;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"public class Ui {","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    private static String logo \u003d \"\\n\" +","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"            \"____            _   __  __       _   _\\n\" +","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"            \"|  _ \\\\          | | |  \\\\/  |     | | | |\\n\" +","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"            \"| |_) | __ _  __| | | \\\\  / | __ _| |_| |__  ___\\n\" +","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"            \"|  _ \u003c / _` |/ _` | | |\\\\/| |/ _` | __| \u0027_ \\\\/ __|\\n\" +","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"            \"| |_) | (_| | (_| | | |  | | (_| | |_| | | \\\\__ \\\\\\n\" +","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"            \"|____/ \\\\__,_|\\\\__,_| |_|  |_|\\\\__,_|\\\\__|_| |_|___/\";","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        System.out.println(logo + \"\\nYou can type \u0027Help\u0027 to learn what I can do for you :)\");","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"    public static void printLogo(){","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"    public static void printTanHasNoAmplitude(){","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Psss... Tangent graph has no amplitude.\");","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"    public static void printNegativeFrequencyEntered(){","lastModifiedDate":"2023-04-01"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Frequency cannot be negative.\");","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"    public static void printZeroFrequencyEntered(){","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Frequency cannot be zero.\");","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"    public static void printIncorrectFormatEntered() {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Please enter the format as required.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"    public static void printNegativeAmplitudeEntered() {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Amplitude cannot be negative!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"    public static void printAmplitude(double amplitude) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"This is the amplitude: \" + amplitude);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"    public static void printPhase(double phase) {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"This is the phase: \" + phase);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"    public static void printVerticalShift(double verticalShift) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"This is the vertical shift: \" + verticalShift);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"    public static void printFrequency(Double freq) {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"This is the freq (Hz): \" + freq);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"WilsonLee2000"},"content":"    //@@author WilsonLee2000","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"WilsonLee2000"},"content":"    public static void printInvalidNumberEntered() {","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"WilsonLee2000"},"content":"        System.out.println(\"Input must be a number!\");","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printMark(String text) {","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"You have marked this note as done:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(text);","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printUnmark(String text) {","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"You have unmarked this note:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(text);","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"WilsonLee2000"},"content":"    //@@author WilsonLee2000","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"WilsonLee2000"},"content":"    public static void printAddNote(String text, int size) {","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"WilsonLee2000"},"content":"        System.out.println(\"You have added this note:\");","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"WilsonLee2000"},"content":"        System.out.println(text);","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"WilsonLee2000"},"content":"        System.out.println(\"Now you have \" + size + \" notes in the list.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":81,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"WilsonLee2000"},"content":"    //@@author WilsonLee2000","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"WilsonLee2000"},"content":"    public static void printDelete(String text, int size) {","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"WilsonLee2000"},"content":"        System.out.println(\"You have removed this note:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"WilsonLee2000"},"content":"        System.out.println(text);","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"WilsonLee2000"},"content":"        System.out.println(\"Now you have \" + (size - 1) + \" notes in the list.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":88,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"WilsonLee2000"},"content":"    //@@author WilsonLee2000","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"WilsonLee2000"},"content":"    public static void printNotes(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"WilsonLee2000"},"content":"        if (notes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"WilsonLee2000"},"content":"            System.out.println(\"You have no notes yet. :(\");","lastModifiedDate":"2023-04-02"},{"lineNumber":94,"author":{"gitId":"WilsonLee2000"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"WilsonLee2000"},"content":"            System.out.println(\"Here are the notes you have stored:\");","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"WilsonLee2000"},"content":"            for (int i \u003d 0; i \u003c notes.size(); i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println((i + 1) + \". \" + notes.get(i).toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"WilsonLee2000"},"content":"            System.out.println(\"Now you have \" + notes.size() + \" notes in the list.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":100,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"WilsonLee2000"},"content":"    //@@author WilsonLee2000","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"WilsonLee2000"},"content":"    public static void printSpecificNote(int index, ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"WilsonLee2000"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c notes.size()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"WilsonLee2000"},"content":"            Note note \u003d notes.get(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"WilsonLee2000"},"content":"            System.out.println(\"Here is the note you are looking for: \");","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"WilsonLee2000"},"content":"            System.out.println((index + 1) + \": \" + note.toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"WilsonLee2000"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"WilsonLee2000"},"content":"            System.out.println(\"Invalid note index\");","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printFindNotes(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"ZiqiuZeng"},"content":"        if (notes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"Sorry, no relevant results were found for this query. Please try other keywords.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"ZiqiuZeng"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"Here are the notes you are searching for:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"ZiqiuZeng"},"content":"            for (int i \u003d 0; i \u003c notes.size(); i++) {","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println((i + 1) + \". \" + notes.get(i).toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printPriority(int index, ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"ZiqiuZeng"},"content":"        NotePriority.Priority priority \u003d notes.get(index).getPriority();","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"ZiqiuZeng"},"content":"        String priorityStr \u003d priority.name();","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"You have changed its priority to\" + priorityStr);","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println((index + 1) + \": \" + notes.get(index).toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printNotesByReviewCount(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"ZiqiuZeng"},"content":"        // Sort notes by review count in descending order","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.sort((note1, note2) -\u003e Integer.compare(note2.getReviewCount(), note1.getReviewCount()));","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"ZiqiuZeng"},"content":"        // Print out notes by review count","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"Notes sorted by review count:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(note.getText() + \" (review count: \" + note.getReviewCount() + \")\");","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"ZiqiuZeng"},"content":"    //@@author ZiqiuZeng","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printNotesByPriority(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e highPriorityNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e mediumPriorityNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e lowPriorityNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"ZiqiuZeng"},"content":"            if (note.getPriority() \u003d\u003d NotePriority.Priority.HIGH) {","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"ZiqiuZeng"},"content":"                highPriorityNotes.add(note);","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"ZiqiuZeng"},"content":"            } else if (note.getPriority() \u003d\u003d NotePriority.Priority.MEDIUM) {","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"ZiqiuZeng"},"content":"                mediumPriorityNotes.add(note);","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"ZiqiuZeng"},"content":"            } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"ZiqiuZeng"},"content":"                lowPriorityNotes.add(note);","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"High priority notes:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : highPriorityNotes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(note.toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"Medium priority notes:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : mediumPriorityNotes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(note.toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"Low priority notes:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : lowPriorityNotes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(note.toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printQuadraticFormatError() {","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"Please use the format as shown below:\");","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"ax^2 + bx + c\");;","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printQuadraticAnswer(ArrayList\u003cDouble\u003e xStore, String vertexCoordinate, boolean isMinimum) {","lastModifiedDate":"2023-04-05"},{"lineNumber":184,"author":{"gitId":"ZiqiuZeng"},"content":"        if (xStore.get(0).isNaN() || xStore.get(1).isNaN()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"x is imaginary.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"ZiqiuZeng"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"x1 \u003d \" + xStore.get(0) + \" , x2 \u003d \" + xStore.get(1));","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"ZiqiuZeng"},"content":"            if (isMinimum) {","lastModifiedDate":"2023-04-05"},{"lineNumber":189,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(\"There is a minimum point: \" + vertexCoordinate);","lastModifiedDate":"2023-04-05"},{"lineNumber":190,"author":{"gitId":"ZiqiuZeng"},"content":"            } else {","lastModifiedDate":"2023-04-05"},{"lineNumber":191,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(\"There is a maximum point: \" + vertexCoordinate);","lastModifiedDate":"2023-04-05"},{"lineNumber":192,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":193,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"khooyourun":1,"ZiqiuZeng":103,"YC-Michael":48,"WilsonLee2000":43}},{"path":"src/test/java/seedu/badmaths/CommandHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"//@@author WilsonLee2000","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"public class CommandHistoryTest {","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"    void checkStoreCommand() {","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"        ArrayList\u003cString\u003e historyCommand \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"        String inputCommand \u003d \"Hello\";","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"        CommandHistory commandHistoryTest \u003d new CommandHistory(historyCommand);","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"        commandHistoryTest.storeCommand(inputCommand);","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"        assertEquals(1, historyCommand.size());","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"    void checkDisplayHistory() {","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"        String correctDisplayOutput \u003d \"\";","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"        ByteArrayOutputStream historyDisplayed \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"        ArrayList\u003cString\u003e historyCommand \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"        CommandHistory commandHistoryTest \u003d new CommandHistory(historyCommand);","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"        commandHistoryTest.displayHistory();","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"        System.setOut(new PrintStream(historyDisplayed));","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"        String stringHistoryDisplayed \u003d historyDisplayed.toString();","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"        assertEquals(correctDisplayOutput, stringHistoryDisplayed); // expected, actual","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"WilsonLee2000":35}},{"path":"src/test/java/seedu/badmaths/DeleteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"//@@author WilsonLee2000","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"import seedu.badmaths.note.NotesList;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"public class DeleteTest {","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"    void checkIsInvalidIndex() {","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"        String todo \u003d \"1\";","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"        String itemOne \u003d \"One\";","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"        ArrayList\u003cNote\u003e notesArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"        NotesList notes \u003d new NotesList(notesArray);","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"        notes.add(itemOne);","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"        Delete deleteTest \u003d new Delete(notes, todo);","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"        boolean test \u003d deleteTest.isInvalidIndex(index, notes);","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"        assertEquals(true, test);","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"    void checkIsAnInt() {","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"        String todo \u003d \"1\";","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"        ArrayList\u003cNote\u003e notesArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"        NotesList notes \u003d new NotesList(notesArray);","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"        Delete deleteTest \u003d new Delete(notes, todo);","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"        boolean test \u003d deleteTest.isAnInt(todo);","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"        assertEquals(true, test);","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"    void checkDeleteNotes() {","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"        String todo \u003d \"1\";","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"        String itemOne \u003d \"One\";","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"        String itemTwo \u003d \"Two\";","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"        ArrayList\u003cNote\u003e notesArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"        NotesList notes \u003d new NotesList(notesArray);","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"        notes.add(itemOne);","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"        notes.add(itemTwo);","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"        Delete deleteTest \u003d new Delete(notes, todo);","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"WilsonLee2000"},"content":"        deleteTest.deleteNotes();","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"        assertEquals(1, notes.getSize());","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"WilsonLee2000":49}},{"path":"src/test/java/seedu/badmaths/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":11,"YC-Michael":1}},{"path":"src/test/java/seedu/badmaths/IndexCheckerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.commands.IndexChecker;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotesList;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"public class IndexCheckerTest {","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"    public void testIsInvalidIndex() {","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"        NotesList notesList \u003d new NotesList(notes);","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"        notesList.add(\"Note 1\");","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"        notesList.add(\"Note 2\");","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"        notesList.add(\"Note 3\");","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"        assertTrue(IndexChecker.isInvalidIndex(-1, notesList));","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"        assertFalse(IndexChecker.isInvalidIndex(2, notesList));","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"        assertFalse(IndexChecker.isInvalidIndex(0, notesList));","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        assertFalse(IndexChecker.isInvalidIndex(1, notesList));","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":28}},{"path":"src/test/java/seedu/badmaths/IntegerCheckerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.commands.IntegerChecker;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"public class IntegerCheckerTest {","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"    public void testIsAnInt() {","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"        assertTrue(IntegerChecker.isAnInt(\"1234567890\"));","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"        assertFalse(IntegerChecker.isAnInt(\"not a number\"));","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ZiqiuZeng":15}},{"path":"src/test/java/seedu/badmaths/ListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"//@@author WilsonLee2000","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"import seedu.badmaths.note.NotesList;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"public class ListTest {","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"    void checkIsInvalidIndex() {","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"        String todo \u003d \"1\";","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"        String itemOne \u003d \"One\";","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"        ArrayList\u003cNote\u003e notesArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"        NotesList notes \u003d new NotesList(notesArray);","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"        notes.add(itemOne);","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"        List listTest \u003d new List(notes, todo);","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"        boolean test \u003d listTest.isInvalidIndex(index, notes);","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"        assertEquals(true, test);","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"    void checkIsAnInt() {","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"        String todo \u003d \"1\";","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"        ArrayList\u003cNote\u003e notesArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"        NotesList notes \u003d new NotesList(notesArray);","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"        List listTest \u003d new List(notes, todo);","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"        boolean test \u003d listTest.isAnInt(todo);","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"        assertEquals(true, test);","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"    void checkIsInvalidToDo() {","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"        String todo \u003d \"82738232\";","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"        ArrayList\u003cNote\u003e notesArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"        NotesList notes \u003d new NotesList(notesArray);","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"        List listTest \u003d new List(notes, todo);","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"        boolean test \u003d listTest.isInvalidTodo(todo);","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"        assertEquals(false, test);","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"WilsonLee2000"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"    void testListNotes() {","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"WilsonLee2000"},"content":"        ByteArrayOutputStream listDisplayed \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"        ArrayList\u003cNote\u003e notesArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"WilsonLee2000"},"content":"        String toDo \u003d \"index\";","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"        NotesList notes \u003d new NotesList(notesArray);","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"WilsonLee2000"},"content":"        List listTest \u003d new List(notes, toDo);","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"WilsonLee2000"},"content":"        listTest.listNotes();","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"WilsonLee2000"},"content":"        String correctListOutput \u003d \"\";","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"WilsonLee2000"},"content":"        System.setOut(new PrintStream(listDisplayed));","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"WilsonLee2000"},"content":"        String stringListDisplayed \u003d listDisplayed.toString();","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"WilsonLee2000"},"content":"        assertEquals(correctListOutput, stringListDisplayed); // (expected, actual)","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"WilsonLee2000":59}},{"path":"src/test/java/seedu/badmaths/NotesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"//@@author WilsonLee2000","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"class NotesTest { // this class contains the various test methods","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"    ArrayList\u003cString\u003e cache \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"    public void handleCache() {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"        String toDo \u003d \"toDo\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"        String input \u003d \"Notes\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"        switch (input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"        case \"Notes\":","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"            cache.add(toDo);","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"            System.out.println(\"You have stored: \" + toDo);","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"            break;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"        case \"List\":","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"            System.out.println(\"Here are the notes that you have stored:\");","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"            for (int i \u003d 0; i \u003c cache.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"                String notesItem \u003d cache.get(i);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println((i + 1) + \". \" + notesItem);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"            break;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"        default:","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"        assertEquals(\"You have stored: toDo\", \"You have stored: \" + toDo);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"WilsonLee2000":31}},{"path":"src/test/java/seedu/badmaths/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"class ParserTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"    void getCommandShouldReturnCommand() {","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"        String userInput \u003d \"Store store this\";","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"        Parser parserTest \u003d new Parser(userInput);","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"        String commandTest \u003d parserTest.getCommand();","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"        assertEquals(commandTest, \"Store\");","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    void getCommandShouldIgnoreTrailingSpaces() {","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"        String userInput \u003d \"       Store store this     \";","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        Parser parserTest \u003d new Parser(userInput);","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        String commandTest \u003d parserTest.getCommand();","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"        assertEquals(commandTest, \"Store\");","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    void getToDoShouldReturnInvalidForSingleWordInput() {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"        String userInput \u003d \"Help\";","lastModifiedDate":"2023-04-01"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"        Parser parserTest \u003d new Parser(userInput);","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        String toDoTest \u003d parserTest.getToDo();","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"        assertEquals(toDoTest, \"Invalid todo\");","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"    void getToDoShouldIgnoreMultipleSpaces() {","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"        String userInput \u003d \"Quadratic      lol\";","lastModifiedDate":"2023-04-01"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"        Parser parserTest \u003d new Parser(userInput);","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"        String toDoTest \u003d parserTest.getToDo();","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"        assertEquals(toDoTest, \"lol\");","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"khooyourun":38,"YC-Michael":1}},{"path":"src/test/java/seedu/badmaths/Quadratic/QuadraticParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package seedu.badmaths.Quadratic;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"class QuadraticParserTest {","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"    void findSignOfBShouldReturnSign() {","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"        String toDo \u003d \"-2.5x^2 + 5x + 3\";","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"        QuadraticParser quadraticTest \u003d new QuadraticParser(toDo);","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"        String sign \u003d QuadraticParser.findSignOfB();","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"        assertEquals(\"+\",sign);","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    void findStringOfBShouldReturnB() {","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"        String toDo \u003d \"-2.5x^2 + 5x + 3\";","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"        QuadraticParser quadraticTest \u003d new QuadraticParser(toDo);","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        String B \u003d QuadraticParser.findStringOfB();","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        assertEquals(\"5\", B);","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"    void findSignOfCShouldReturnC() {","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"        String toDo \u003d \"-2.5x^2 + 5x - 3\";","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"        QuadraticParser quadraticTest \u003d new QuadraticParser(toDo);","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"        String sign \u003d QuadraticParser.findSignOfC();","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        assertEquals(\"-\", sign);","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"    void findAShouldReturnA() {","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"        String toDo \u003d \"-2.5x^2 + 5x + 3\";","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"        QuadraticParser quadraticTest \u003d new QuadraticParser(toDo);","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"        double A \u003d QuadraticParser.findA();","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"        assertEquals(-2.5, A);","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"    void findStringOfCShouldReturnC() {","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"        String toDo \u003d \"-2.5x^2 + 5x + 3\";","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"        QuadraticParser quadraticTest \u003d new QuadraticParser(toDo);","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"        String C \u003d QuadraticParser.findStringOfC();","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"        assertEquals(\"3\", C);","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"    void findAIfOnlySignShouldReturnA() {","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"        String toDo \u003d \"x^2 + 5.9x + 3\";","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"        QuadraticParser quadraticTest \u003d new QuadraticParser(toDo);","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"        double A \u003d QuadraticParser.findA();","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"        assertEquals(1, A);","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"    void findBShouldReturnB() {","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"        String toDo \u003d \"-2x^2 - 5.9x + 3\";","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"        QuadraticParser quadraticTest \u003d new QuadraticParser(toDo);","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"        double B \u003d QuadraticParser.findB();","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"        assertEquals(-5.9, B);","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"    void findBIfOnlySignShouldReturnB() {","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"        String toDo \u003d \"-2x^2 - x + 3\";","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"khooyourun"},"content":"        QuadraticParser quadraticTest \u003d new QuadraticParser(toDo);","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"khooyourun"},"content":"        double B \u003d QuadraticParser.findB();","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"khooyourun"},"content":"        assertEquals(-1, B);","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"khooyourun"},"content":"    void findCShouldReturnC() {","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"khooyourun"},"content":"        String toDo \u003d \"-2x^2 + 5x + 3.0888\";","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"khooyourun"},"content":"        QuadraticParser quadraticTest \u003d new QuadraticParser(toDo);","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"khooyourun"},"content":"        double C \u003d QuadraticParser.findC();","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"khooyourun"},"content":"        assertEquals(3.0888, C);","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"khooyourun":77}},{"path":"src/test/java/seedu/badmaths/Quadratic/QuadraticTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package seedu.badmaths.Quadratic;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"class QuadraticTest {","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    void quadraticFormulaShouldReturnArrayOfX() {","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"        String toDo \u003d \"-2x^2 + 5x + 3\";","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"        Quadratic quadraticTest \u003d new Quadratic(toDo);","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"        ArrayList\u003cDouble\u003e xStoreTest \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"        xStoreTest \u003d quadraticTest.quadraticFormula(-2, 5, 3);","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        assertEquals(-0.5,xStoreTest.get(0));","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"        assertEquals(3.0,xStoreTest.get(1));","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    void minMaxPointFinderShouldReturnVertexCoordinate() {","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"        String toDo \u003d \"-x^2 + x + 1\";","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"        double A \u003d -1;","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"        double B \u003d 1;","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"        double C \u003d 1;","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"        Quadratic quadraticTest \u003d new Quadratic(toDo);","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"        String coordinate \u003d quadraticTest.minMaxPointFinder(A, B, C);","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        assertEquals(\"(0.5, 1.25)\", coordinate);","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"khooyourun":32}},{"path":"src/test/java/seedu/badmaths/StoreTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"//@@author WilsonLee2000","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"package seedu.badmaths;","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"import seedu.badmaths.note.NotesList;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"public class StoreTest {","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"    void checkIsInvalidToDo() throws IOException {","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"        Path temporaryFile \u003d Files.createTempFile(\"TempFile\", \".txt\");","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"        String contentsFile \u003d \"HIGH\\tN\\t0\\tThis is a test \\nMEDIUM\\tY\\t2\\tThi is another test\\n\";","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"        Files.writeString(temporaryFile, contentsFile);","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"        String todo \u003d \"82738232\";","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"        ArrayList\u003cNote\u003e notesArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"        NotesList notes \u003d new NotesList(notesArray);","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"        Store storeTest \u003d new Store(notes, todo);","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"        boolean test \u003d storeTest.isInvalidTodo(todo);","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"        assertEquals(false, test);","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"        Files.delete(temporaryFile);","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"    void storeValidInputCommand() throws IOException {","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"        Path temporaryFile \u003d Files.createTempFile(\"TempFile\", \".txt\");","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"        String contentsFile \u003d \"HIGH\\tN\\t0\\tThis is a test \\nMEDIUM\\tY\\t2\\tThi is another test\\n\";","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"        Files.writeString(temporaryFile, contentsFile);","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"        ArrayList\u003cNote\u003e notesArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"        String toDo \u003d \"index\";","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"        NotesList notes \u003d new NotesList(notesArray);","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"        Store storeTest \u003d new Store(notes, toDo);","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"        storeTest.storeNotes();","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"        assertEquals(1, notes.getSize()); // (expected, actual)","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"        Files.delete(temporaryFile);","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"WilsonLee2000":44}},{"path":"src/test/java/seedu/badmaths/help/HelpManualTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.help;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.HelpManual;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.logging.Handler;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"class HelpManualTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"    public void testReadHelpManual() throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"        final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"        Logger logger \u003d Logger.getLogger(HelpManual.class.getName());","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"        Handler handler \u003d new java.util.logging.StreamHandler(outContent, new java.util.logging.SimpleFormatter());","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"        handler.setLevel(Level.ALL);","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"        logger.addHandler(handler);","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"        // Call the readHelpManual() method","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"        HelpManual.readHelpManual();","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"        // Check that the content is not null","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"        assertNotNull(outContent.toString());","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"        // Check if the output matches the expected output","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"        String expectedOutput \u003d new String(Files.readAllBytes(Paths.get(\"src/main/resources/HelpManual.txt\")));","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"ZiqiuZeng":45}},{"path":"src/test/java/seedu/badmaths/matrix/CalculateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.matrix;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"public class CalculateTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"    int[][] arr \u003d new int[][]{","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"        {0, 1, 2},","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"        {3, 4, 5},","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"        {6, 7, 8},","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"        {9, 10, 11}","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"    Tensor2D tensor \u003d new Tensor2D(arr);","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"    int[][] arrT \u003d new int[][]{","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"            {0, 3, 6, 9},","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"            {1, 4, 7, 10},","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"            {2, 5, 8, 11}","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"    Tensor2D tensorT \u003d new Tensor2D(arrT);","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"    int[][] dotResult \u003d new int[][]{","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"            {0, 1, 4},","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"            {9, 16, 25},","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"            {36, 49, 64},","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"            {81, 100, 121}","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"    Tensor2D dotResultTensor \u003d new Tensor2D(dotResult);","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"    int[][] mulResult \u003d new int[][]{","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"            {5, 14, 23, 32},","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"            {14, 50, 86, 122},","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"            {23, 86, 149, 212},","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"            {32, 122, 212, 302}","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"    Tensor2D mulResultTensor \u003d new Tensor2D(mulResult);","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"0nandon"},"content":"    int[][] addResult \u003d new int[][]{","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"0nandon"},"content":"            {0, 2, 4},","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"0nandon"},"content":"            {6, 8, 10},","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"0nandon"},"content":"            {12, 14, 16},","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"0nandon"},"content":"            {18, 20, 22}","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"0nandon"},"content":"    Tensor2D addResultTensor \u003d new Tensor2D(addResult);","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"0nandon"},"content":"    public void testShapeStringConversion() {","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"0nandon"},"content":"        assertEquals(\"4 x 3\", new Tensor2D(arr).shape().toString());","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"0nandon"},"content":"    public void testMatrixTranspose(){","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003ctensorT.row(); i++){","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003ctensorT.column(); j++){","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"0nandon"},"content":"                assertEquals(tensorT.get(i, j), tensor.t().get(i, j));","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"0nandon"},"content":"    public void testMatrixDot(){","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"0nandon"},"content":"        Calculate c \u003d new Calculate();","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003ctensor.row(); i++){","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003ctensor.column(); j++){","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"0nandon"},"content":"                assertEquals(dotResultTensor.get(i, j), c.dot(tensor, tensor).get(i, j));","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"0nandon"},"content":"    public void testMatrixMul(){","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"0nandon"},"content":"        Calculate c \u003d new Calculate();","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003ctensor.row(); i++){","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003ctensor.column(); j++){","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"0nandon"},"content":"                assertEquals(mulResultTensor.get(i, j), c.mul(tensor, tensor.t()).get(i, j));","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"0nandon"},"content":"    public void testMatrixAdd(){","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"0nandon"},"content":"        Calculate c \u003d new Calculate();","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003ctensor.row(); i++){","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003ctensor.column(); j++){","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"0nandon"},"content":"                assertEquals(addResultTensor.get(i, j), c.add(tensor, tensor).get(i, j));","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"0nandon":92,"YC-Michael":1}},{"path":"src/test/java/seedu/badmaths/matrix/ExecuteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.matrix;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"public class ExecuteTest {","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"    String add \u003d \"[1,2;3,4]+[1,2;3,4]\";","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"    String sub \u003d \"[1,2;3,4]-[1,2;3,4]\";","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"    String mul \u003d \"[1,2;3,4].*[1,2;3,4]\";","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"    String dot \u003d \"[1,2;3,4]*[1,2;3,4]\";","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"    String transpose \u003d \"[1,2;3,4].T\";","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"    int[][] addAnswer \u003d new int[][]{","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"            {2, 4},","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"            {6, 8}","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"    Tensor2D addAnswerTensor \u003d new Tensor2D(addAnswer);","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"    int[][] subAnswer \u003d new int[][]{","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"            {0, 0},","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"            {0, 0}","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"    Tensor2D subAnswerTensor \u003d new Tensor2D(subAnswer);","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"    int[][] mulAnswer \u003d new int[][]{","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"            {7, 10},","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"            {15, 22}","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"    Tensor2D mulAnswerTensor \u003d new Tensor2D(mulAnswer);","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"    int[][] dotAnswer \u003d new int[][]{","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"            {1, 4},","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"            {9, 16}","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"    Tensor2D dotAnswerTensor \u003d new Tensor2D(dotAnswer);","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"0nandon"},"content":"    int[][] transposeAnswer \u003d new int[][]{","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"0nandon"},"content":"            {1, 3},","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"0nandon"},"content":"            {2, 4}","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"0nandon"},"content":"    Tensor2D transposeAnswerTensor \u003d new Tensor2D(transposeAnswer);","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"0nandon"},"content":"    public void testMatrixAddition(){","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"0nandon"},"content":"        Execute e \u003d new Execute();","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"0nandon"},"content":"        Tensor2D addResult \u003d e.executeAdd(add);","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003c2; i++){","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003c2; j++){","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"0nandon"},"content":"                assertEquals(addResult.get(i, j), addAnswerTensor.get(i, j));","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"0nandon"},"content":"    public void testMatrixSubtraction(){","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"0nandon"},"content":"        Execute e \u003d new Execute();","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"0nandon"},"content":"        Tensor2D subResult \u003d e.executeSub(sub);","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003c2; i++){","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003c2; j++){","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"0nandon"},"content":"                assertEquals(subResult.get(i, j), subAnswerTensor.get(i, j));","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"0nandon"},"content":"    public void testMatrixMul(){","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"0nandon"},"content":"        Execute e \u003d new Execute();","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"0nandon"},"content":"        Tensor2D mulResult \u003d e.executeMul(mul);","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003c2; i++){","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003c2; j++){","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"0nandon"},"content":"                assertEquals(mulResult.get(i, j), mulAnswerTensor.get(i, j));","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"0nandon"},"content":"    public void testMatrixDot(){","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"0nandon"},"content":"        Execute e \u003d new Execute();","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"0nandon"},"content":"        Tensor2D dotResult \u003d e.executeDot(dot);","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003c2; i++){","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003c2; j++){","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"0nandon"},"content":"                assertEquals(dotResult.get(i, j), dotAnswerTensor.get(i, j));","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"0nandon"},"content":"    public void testMatrixTranspose(){","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"0nandon"},"content":"        Execute e \u003d new Execute();","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"0nandon"},"content":"        Tensor2D transposeResult \u003d e.executeTranspose(transpose);","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003c2; i++){","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003c2; j++){","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"0nandon"},"content":"                assertEquals(transposeResult.get(i, j), transposeAnswerTensor.get(i, j));","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"0nandon":103,"YC-Michael":1}},{"path":"src/test/java/seedu/badmaths/matrix/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.matrix;","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"public class ParserTest {","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"    String matrix \u003d \"[1,2;3,4]\";","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"    String add \u003d \"[1,2;3,4] + [1,2;3,4]\";","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"    String sub \u003d \"[1,2;3,4] - [1,2;3,4]\";","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"    String mul \u003d \"[1,2;3,4] .* [1,2;3,4]\";","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"    String dot \u003d \"[1,2;3,4] * [1,2;3,4]\";","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"    String transpose \u003d \"[1,2;3,4] .* [1,2;3,4].T\";","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"    int[][] value \u003d new int[][]{","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"            {1, 2},","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"            {3, 4}","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"    Tensor2D tensor \u003d new Tensor2D(value);","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"    int[][] addAnswer \u003d new int[][]{","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"            {2, 4},","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"            {6, 8}","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"    Tensor2D addAnswerTensor \u003d new Tensor2D(addAnswer);","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"    int[][] subAnswer \u003d new int[][]{","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"            {0, 0},","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"            {0, 0}","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"    Tensor2D subAnswerTensor \u003d new Tensor2D(subAnswer);","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"    int[][] mulAnswer \u003d new int[][]{","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"            {7, 10},","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"            {15, 22}","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"0nandon"},"content":"    Tensor2D mulAnswerTensor \u003d new Tensor2D(mulAnswer);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"0nandon"},"content":"    int[][] dotAnswer \u003d new int[][]{","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"0nandon"},"content":"            {1, 4},","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"0nandon"},"content":"            {9, 16}","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"0nandon"},"content":"    Tensor2D dotAnswerTensor \u003d new Tensor2D(dotAnswer);","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"0nandon"},"content":"    int[][] transposeAnswer \u003d new int[][]{","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"0nandon"},"content":"            {5, 11},","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"0nandon"},"content":"            {11, 25}","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"0nandon"},"content":"    Tensor2D transposeAnswerTensor \u003d new Tensor2D(transposeAnswer);","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"0nandon"},"content":"    public void testParse(){","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"0nandon"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"0nandon"},"content":"        Tensor2D addResult \u003d p.parse(add);","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003c2; i++){","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003c2; j++){","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"0nandon"},"content":"                assertEquals(addResult.get(i, j), addAnswerTensor.get(i, j));","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"0nandon"},"content":"        Tensor2D subResult \u003d p.parse(sub);","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003c2; i++){","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003c2; j++){","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"0nandon"},"content":"                assertEquals(subResult.get(i, j), subAnswerTensor.get(i, j));","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"0nandon"},"content":"        Tensor2D mulResult \u003d p.parse(mul);","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003c2; i++){","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003c2; j++){","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"0nandon"},"content":"                assertEquals(mulResult.get(i, j), mulAnswerTensor.get(i, j));","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"0nandon"},"content":"        Tensor2D dotResult \u003d p.parse(dot);","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003c2; i++){","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003c2; j++){","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"0nandon"},"content":"                assertEquals(dotResult.get(i, j), dotAnswerTensor.get(i, j));","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"0nandon"},"content":"        Tensor2D transposeResult \u003d p.parse(transpose);","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003c2; i++){","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003c2; j++){","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"0nandon"},"content":"                assertEquals(transposeResult.get(i, j), transposeAnswerTensor.get(i, j));","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"0nandon"},"content":"    public void testParseMatrix(){","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003c2; i++){","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003c2; j++){","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"0nandon"},"content":"                assertEquals(tensor.get(i, j), Parser.parseMatrix(matrix).get(i, j));","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"0nandon":99,"YC-Michael":1}},{"path":"src/test/java/seedu/badmaths/storage/InvalidNotesFileHandlerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.storage;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotePriority;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"public class InvalidNotesFileHandlerTest {","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"    public void testResponseHandlerReset() throws IOException {","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"        // create a temporary file","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"        Path tempFile \u003d Files.createTempFile(\"temp\", \".txt\");","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"        String fileContents \u003d \"HIGH\\tN\\t0\\tThis is a test note\\nMEDIUM\\tY\\t2\\tThi is another test note\\n\";","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"        Files.writeString(tempFile, fileContents);","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"        // create a temporary ArrayList","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note1 \u003d new Note(\"This is a test note\", NotePriority.Priority.HIGH);","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note2 \u003d new Note(\"This is another test note\", NotePriority.Priority.MEDIUM);","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"        note2.markAsDone();","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"        note2.incrementReviewCount();","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"        note2.incrementReviewCount();","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.add(note1);","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.add(note2);","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"        // redirect System.in and System.out for testing","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"y\\n\".getBytes());","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"        System.setIn(in);","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"        InvalidNotesFileHandler.responseHandler(tempFile.toString(), notes);","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"        String expectedOutput \u003d \"Sorry, your notes file seems to be corrupted :(\" + System.lineSeparator() +","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"                \"Do you want to reset the file? (y/n)\" + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"                \"File contents have rest successfully.\" + System.lineSeparator() +","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"                \"You can continue to use the application\" + System.lineSeparator() +","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"ZiqiuZeng"},"content":"                \"If you want to read Help Manual, please type \u0027Help\u0027 to learn what I can do for you.\"","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"                + System.lineSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(expectedOutput, out.toString());","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"        // verify that the file contents were cleared","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(\"\", Files.readString(tempFile));","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"ZiqiuZeng"},"content":"        //verify that the ArrayList contents were cleared","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(0, notes.size());","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"        // clean up","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"ZiqiuZeng"},"content":"        Files.delete(tempFile);","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"        System.setIn(System.in);","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"        System.setOut(System.out);","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"ZiqiuZeng"},"content":"    public void testResponseHandlerExit() throws IOException {","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"        Path tempFile \u003d Files.createTempFile(\"temp\", \".txt\");","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"ZiqiuZeng"},"content":"        String fileContents \u003d \"HIGH\\tN\\t0\\tThis is a test note\\nMEDIUM\\tY\\t2\\tThis is another test note\\n\";","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"ZiqiuZeng"},"content":"        Files.writeString(tempFile, fileContents);","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"ZiqiuZeng"},"content":"        // redirect System.in and System.out for testing","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"ZiqiuZeng"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"n\\n\".getBytes());","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"ZiqiuZeng"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"ZiqiuZeng"},"content":"        System.setIn(in);","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"ZiqiuZeng"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"ZiqiuZeng"},"content":"        // create a temporary ArrayList","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note1 \u003d new Note(\"This is a test note\", NotePriority.Priority.HIGH);","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note2 \u003d new Note(\"This is another test note\", NotePriority.Priority.MEDIUM);","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"ZiqiuZeng"},"content":"        note2.markAsDone();","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"ZiqiuZeng"},"content":"        note2.incrementReviewCount();","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"ZiqiuZeng"},"content":"        note2.incrementReviewCount();","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.add(note1);","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.add(note2);","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"ZiqiuZeng"},"content":"        // call the responseHandler method and verify the output","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"ZiqiuZeng"},"content":"        InvalidNotesFileHandler.responseHandler(tempFile.toString(), notes);","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"ZiqiuZeng"},"content":"        String expectedOutput \u003d \"Sorry, your notes file seems to be corrupted :(\" + System.lineSeparator() +","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"ZiqiuZeng"},"content":"                \"Do you want to reset the file? (y/n)\" + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"ZiqiuZeng"},"content":"                \"You choose not to rest the file.\" + System.lineSeparator() +","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"ZiqiuZeng"},"content":"                \"Please ensure your file status before using the application.\" + System.lineSeparator() +","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"ZiqiuZeng"},"content":"                \"The program will exit in 10 seconds. See you next time.\" + System.lineSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(expectedOutput, out.toString());","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"ZiqiuZeng"},"content":"        // verify that the file contents were not cleared","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(fileContents, Files.readString(tempFile));","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"ZiqiuZeng"},"content":"        // clean up","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"ZiqiuZeng"},"content":"        Files.delete(tempFile);","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"ZiqiuZeng"},"content":"        System.setIn(System.in);","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"ZiqiuZeng"},"content":"        System.setOut(System.out);","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ZiqiuZeng":102}},{"path":"src/test/java/seedu/badmaths/storage/NoteParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.storage;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.InvalidFormatException;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotePriority;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"public class NoteParserTest {","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"    public void testParseNoteString() throws InvalidFormatException {","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"        String noteString1 \u003d \"HIGH\\tY\\t1\\tThis is a test note.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note1 \u003d NoteParser.parseNoteString(noteString1);","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"        assertTrue(note1.getIsDone());","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(note1.getIsDoneIcon(), \"Y\");","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(note1.getReviewCount(), 1);","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(note1.getPriority(), NotePriority.Priority.HIGH);","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(note1.getText(), \"This is a test note.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"        String noteString2 \u003d \"MEDIUM\\tN\\t2\\tThis is another test note.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note2 \u003d NoteParser.parseNoteString(noteString2);","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        assertFalse(note2.getIsDone());","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(note2.getIsDoneIcon(), \"N\");","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(note2.getReviewCount(), 2);","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(note2.getPriority(), NotePriority.Priority.MEDIUM);","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(note2.getText(), \"This is another test note.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ZiqiuZeng":33}},{"path":"src/test/java/seedu/badmaths/storage/NotesFileCleanerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.storage;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.File;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotesFileCleanerTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"    public void testClearFile() throws IOException{","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"        // set up test file and write some contents into it","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"        Path tempFile \u003d Files.createTempFile(\"temp\", \".txt\");","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"        String fileContents \u003d \"This is a test file.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"        Files.writeString(tempFile, fileContents);","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"        // call clearFile method","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"        NotesFileCleaner.clearFile(tempFile.toString());","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        // check that the file exists and is empty","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"        File file \u003d new File(tempFile.toString());","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"        assertTrue(file.isFile());","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"        assertFalse(file.isDirectory());","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(file.length(), 0);","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"        // clean up","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"        Files.delete(tempFile);","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"        System.setIn(System.in);","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"        System.setOut(System.out);","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ZiqiuZeng":39}},{"path":"src/test/java/seedu/badmaths/storage/NotesFileContentManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.storage;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotePriority;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotesFileContentManagerTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"    public void testFileContent() {","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"        //create three notes","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note1 \u003d new Note(\"Note 1\", NotePriority.Priority.HIGH);","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"        note1.markAsDone();","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"        note1.incrementReviewCount();","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note2 \u003d new Note(\"Note 2\", NotePriority.Priority.MEDIUM);","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note3 \u003d new Note(\"Note 3\", NotePriority.Priority.LOW);","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"        note3.markAsDone();","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"        note3.incrementReviewCount();","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        note3.incrementReviewCount();","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"        // add notes to an ArrayList","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.add(note1);","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.add(note2);","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.add(note3);","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"        // call the fileContent method and check the result","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"        String expectedContent \u003d \"HIGH\\tY\\t1\\tNote 1\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"                \"MEDIUM\\tN\\t0\\tNote 2\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"                \"LOW\\tY\\t2\\tNote 3\\n\";","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"        expectedContent \u003d expectedContent.replace(\"\\r\\n\", \"\\n\").replace(\"\\r\", \"\\n\");","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"        String actualContent \u003d NotesFileContentManager.fileContent(notes);","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"        actualContent \u003d actualContent.replace(\"\\r\\n\", \"\\n\").replace(\"\\r\", \"\\n\");","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(expectedContent, actualContent);","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ZiqiuZeng":45}},{"path":"src/test/java/seedu/badmaths/storage/NotesFileParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.storage;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotePriority;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotesFileParserTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"    public void testLoadFile() {","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e expectedNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"        expectedNotes.add(new Note(\"Note 1\", NotePriority.Priority.HIGH));","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"        expectedNotes.add(new Note(\"Note 2\", NotePriority.Priority.LOW));","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"        expectedNotes.add(new Note(\"Note 3\", NotePriority.Priority.MEDIUM));","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"        expectedNotes.get(0).markAsDone();","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"        expectedNotes.get(0).setReviewCount(2);","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"        expectedNotes.get(1).setReviewCount(1);","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"        expectedNotes.get(2).setReviewCount(0);","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"        expectedNotes.get(2).markAsDone();","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        String filePath \u003d \"src/test/resources/TestNotes.txt\";","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e actualNotes \u003d NotesFileParser.loadFile(filePath);","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(expectedNotes.size(), actualNotes.size());","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"        for (int i \u003d 0; i \u003c expectedNotes.size(); i++) {","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"            Note expectedNote \u003d expectedNotes.get(i);","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"            Note actualNote \u003d actualNotes.get(i);","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"            assertEquals(expectedNote.getText(), actualNote.getText());","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"            assertEquals(expectedNote.getPriority(), actualNote.getPriority());","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"            assertEquals(expectedNote.getIsDone(), actualNote.getIsDone());","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"            assertEquals(expectedNote.getReviewCount(), actualNote.getReviewCount());","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ZiqiuZeng":40}},{"path":"src/test/java/seedu/badmaths/storage/NotesFileWriterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badmaths.storage;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.Note;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badmaths.note.NotePriority;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.File;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotesFileWriterTest {","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"    public void testSaveFile() throws IOException{","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"        Path tempFile \u003d Files.createTempFile(\"temp\", \".txt\");","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"        String fileContents \u003d \"This is a test file.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"        Files.writeString(tempFile, fileContents);","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e testNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note1 \u003d new Note(\"Note 1\", NotePriority.Priority.HIGH);","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"        note1.markAsDone();","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"        note1.incrementReviewCount();","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note2 \u003d new Note(\"Note 2\", NotePriority.Priority.MEDIUM);","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note3 \u003d new Note(\"Note 3\", NotePriority.Priority.LOW);","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"        note3.markAsDone();","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"        note3.incrementReviewCount();","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"        note3.incrementReviewCount();","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"        testNotes.add(note1);","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"        testNotes.add(note2);","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"        testNotes.add(note3);","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"        // save the test notes to the test file","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"        NotesFileWriter.saveFile(tempFile.toString(), testNotes);","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"        // check that the file exists","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"        File file \u003d new File(tempFile.toString());","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"ZiqiuZeng"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"        // check that the actual file content matches the expected string","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"        String expectedContent \u003d \"HIGH\\tY\\t1\\tNote 1\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"                \"MEDIUM\\tN\\t0\\tNote 2\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"ZiqiuZeng"},"content":"                \"LOW\\tY\\t2\\tNote 3\\n\";","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"ZiqiuZeng"},"content":"        expectedContent \u003d expectedContent.replace(\"\\r\\n\", \"\\n\").replace(\"\\r\", \"\\n\");","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"        String actualContent \u003d \"\";","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"        actualContent \u003d new String(Files.readAllBytes(file.toPath()));","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"ZiqiuZeng"},"content":"        actualContent \u003d actualContent.replace(\"\\r\\n\", \"\\n\").replace(\"\\r\", \"\\n\");","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(expectedContent, actualContent);","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"        // clean up","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"        Files.delete(tempFile);","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"        System.setIn(System.in);","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"ZiqiuZeng"},"content":"        System.setOut(System.out);","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"ZiqiuZeng":65}},{"path":"src/test/java/seedu/badmaths/trigograph/TrigoGraphAnalyserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.trigograph;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"class TrigoGraphAnalyserTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"    void noAsteriskThrowsArrayIndexOutOfBoundsException() {","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"        String eqn \u003d \"sin(x)\";","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser analyser \u003d new TrigoGraphAnalyser(eqn);","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"            analyser.splitAmplitudeFromTrigoEqn();","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"        });","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(false, analyser.canStartAnalyser());","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"    void multipleAsteriskThrowsNumberFormatException() {","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"        String eqn \u003d \"2**sin(4*x+1)-6\";","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser analyser \u003d new TrigoGraphAnalyser(eqn);","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"        assertThrows(NumberFormatException.class, () -\u003e {","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"            analyser.testForMultipleAsterisk(\"*sin(4*x+1)-6\");","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"        });","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"    void zeroVerticalShiftAndOneRadians() {","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"        String eqn \u003d \"2*sin(1*x-1)\";","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser analyser \u003d new TrigoGraphAnalyser(eqn);","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"        analyser.canStartAnalyser();","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(0.0, analyser.getVerticalShift());","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(1.0 / (Math.PI * 2), analyser.getFreq());","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"    void negativeAmplitudeShouldReturnIllegalArgumentException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"        String equation \u003d \"-2*sin(2*pi*x+1)+3\";","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser analyser \u003d new TrigoGraphAnalyser(equation);","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(false, analyser.canStartAnalyser());","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"        assertThrows(GraphException.class, () -\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"            analyser.splitAmplitudeFromTrigoEqn();","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"        });","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"    void amplitudeOfOneShouldReturnOne() throws GraphException {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"        String equation \u003d \"sin(2*pi*x+1)+3\";","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser analyser \u003d new TrigoGraphAnalyser(equation);","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"        String[] input \u003d analyser.splitAmplitudeFromTrigoEqn();","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"        analyser.findAmplitude(input);","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(1.0, analyser.getAmplitude());","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"    void wrongFreqFormat_withMinus_expectsNegativeFrequencyException() {","lastModifiedDate":"2023-04-01"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"        String eqn \u003d \"2*cos(-*x+5)-2\";","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser test \u003d new TrigoGraphAnalyser(eqn);","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"        assertThrows(NegativeFrequencyException.class, () -\u003e {","lastModifiedDate":"2023-04-01"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"            test.findFreq(\"-*x\", test.testForNegativeFreq(\"-*x\"));","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"        });","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"YC-Michael"},"content":"    void freqWithNoPhasorsExpectNoException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"YC-Michael"},"content":"        String freq \u003d \"5*x\";","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser analyser \u003d new TrigoGraphAnalyser(freq);","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"YC-Michael"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"YC-Michael"},"content":"            analyser.findFreqForNoPhasors(freq);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"YC-Michael"},"content":"        });","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":75,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"YC-Michael"},"content":"    void tanHasNoAmplitude() {","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser test \u003d new TrigoGraphAnalyser(\"2*tan(2*x+5)-2\");","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"YC-Michael"},"content":"        test.canStartAnalyser();","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(\"tan\", test.getTrig());","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"YC-Michael"},"content":"    void zeroFrequencyExpectZeroFrequencyException() {","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser test \u003d new TrigoGraphAnalyser(\"2*tan(0*x-1)+2\");","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(false, test.canStartAnalyser());","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"YC-Michael"},"content":"        assertThrows(ZeroFrequencyException.class, () -\u003e {","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"YC-Michael"},"content":"            test.findFreq(\"0*x\", false);","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"YC-Michael"},"content":"        });","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":91,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"YC-Michael"},"content":"    void negativeFrequencyReturnsTrue() {","lastModifiedDate":"2023-04-05"},{"lineNumber":93,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser test \u003d new TrigoGraphAnalyser(\"2*tan(0*x-1)+2\");","lastModifiedDate":"2023-04-05"},{"lineNumber":94,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":95,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":96,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"YC-Michael":96}},{"path":"src/test/java/seedu/badmaths/trigograph/TrigoGraphTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.trigograph;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.IllegalTodoException;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"class TrigoGraphTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"    void invalidEqnWithMultipleBrackets() {","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"        String eqn \u003d \"2*((cos(2*x+1)))\";","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraph test \u003d new TrigoGraph(eqn);","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"        assertThrows(IllegalTodoException.class,()-\u003e{","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"            test.startGraphAnalysis();","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"        });","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"    void eqnWithTrigoAsSin(){","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"        String eqn \u003d \"2*sin(2*x-1)+1\";","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraph test \u003d new TrigoGraph(eqn);","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"            test.startGraphAnalysis();","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(2.0,test.getAmplitude());","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(2/(2*Math.PI),test.getFrequency());","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(-1.0,test.getPhase());","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(1.0,test.getVerticalShift());","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(\"sin\",test.getTrig());","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"        } catch (IllegalTodoException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"            System.out.println(\"JUnit test for integrateTestForTrigoGraph failed.\");","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"    void emptyEqnExpectIllegalTodoException(){","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"        String eqn \u003d \"\";","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraph test \u003d new TrigoGraph(eqn);","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"        assertThrows(IllegalTodoException.class,()-\u003e{","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"            test.startGraphAnalysis();","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"        });","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"    void integrateTestForTrigoGraph(){","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"        String eqn \u003d \"1*cos(8*x+8)-1\";","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraph test \u003d new TrigoGraph(eqn);","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"            test.startGraphAnalysis();","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(1.0,test.getAmplitude());","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(8/(2*Math.PI),test.getFrequency());","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(8.0,test.getPhase());","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(-1.0,test.getVerticalShift());","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(\"cos\",test.getTrig());","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"        } catch (IllegalTodoException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"            System.out.println(\"JUnit test for integrateTestForTrigoGraph failed.\");","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"    void validEqn_withMinusFreq_expectCannotStartAnalyser() {","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"        String eqn \u003d \"cos(-1*x-1)-1\";","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser test \u003d new TrigoGraphAnalyser(eqn);","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(false, test.canStartAnalyser());","lastModifiedDate":"2023-04-01"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"YC-Michael"},"content":"    void validEqn_returnsCorrectDetails() {","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"YC-Michael"},"content":"        String eqn \u003d \"2*tan(2*pi*x+1)-9\";","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraph graphTest \u003d new TrigoGraph(eqn);","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"YC-Michael"},"content":"            graphTest.startGraphAnalysis();","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(2.0, graphTest.getAmplitude());","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(\"tan\", graphTest.getTrig());","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(1.0, graphTest.getFrequency());","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(1.0, graphTest.getPhase());","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(-9.0, graphTest.getVerticalShift());","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"YC-Michael"},"content":"        }catch (IllegalTodoException e){","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"YC-Michael"},"content":"            System.out.println(\"JUnit test for validEqn_returnsCorrectDetails failed.\");","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"YC-Michael"},"content":"    void invalidEqn_withMultipleTrigo_expectCanStartAnalyserAsFalse() {","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"YC-Michael"},"content":"        String eqn1 \u003d \"2*tan*tan(2*pi*x+1)-9\";","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser test \u003d new TrigoGraphAnalyser(eqn1);","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(false, test.canStartAnalyser());","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"YC-Michael"},"content":"    void invalidEqn2_withMultipleTrigo_expectCanStartAnalyserAsFalse() {","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"YC-Michael"},"content":"        String eqn2 \u003d \"2*tantan(2*pi*x+1)-9\";","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser test \u003d new TrigoGraphAnalyser(eqn2);","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(false, test.canStartAnalyser());","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"YC-Michael"},"content":"    void correctStatementsWithValidEqn() {","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"YC-Michael"},"content":"        String eqn \u003d \"2*cos(2*pi*x+5)+1\";","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraph test \u003d new TrigoGraph(eqn);","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser analyser \u003d new TrigoGraphAnalyser(eqn);","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(true, analyser.canStartAnalyser());","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"YC-Michael":104}},{"path":"src/test/java/seedu/badmaths/trigograph/TrigoGraphVisualiserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badmaths.trigograph;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"import seedu.badmaths.IllegalTodoException;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"class TrigoGraphVisualiserTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"    void eqnWithInvalidTrigoGivesInvalidState() {","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"            TrigoGraphVisualiser visualiser \u003d new TrigoGraphVisualiser(1.0, 2.5, 1.67,","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"                    9, \"tann\");","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"            visualiser.startVisualiser();","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"            assertThrows(IllegalTodoException.class, () -\u003e {","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"                visualiser.isValidState();","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"            });","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"        } catch (IllegalTodoException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"            System.out.println(\"Wrong trigger.\");","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"    void eqnWithValidTanGivesValidState() {","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"            TrigoGraphVisualiser visualiser_tan \u003d new TrigoGraphVisualiser(1.0, 2.5, 1.67,","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"                    9, \"tan\");","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(true, visualiser_tan.isValidState());","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"        } catch (IllegalTodoException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"            System.out.println(\"Wrong trigger.\");","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"    void eqnWithValidSinGivesValidState() {","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"            TrigoGraphVisualiser visualiser_sin \u003d new TrigoGraphVisualiser(1.0, 2.5, 1.67,","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"                    9, \"sin\");","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"            assertEquals(true, visualiser_sin.isValidState());","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"        } catch (IllegalTodoException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"            System.out.println(\"Wrong trigger.\");","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"YC-Michael":45}}]
