[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"    mainClass \u003d \"seedu.badMaths.BadMaths\"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"    archiveBaseName \u003d \"badMaths\"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"run {","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"jar {","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"ZiqiuZeng"},"content":"    manifest {","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"        attributes \u0027Main-Class\u0027: \u0027seedu.badMaths.BadMaths\u0027","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"    duplicatesStrategy \u003d \u0027exclude\u0027 // or \u0027fail\u0027, \u0027warn\u0027, \u0027preserve\u0027","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"ZiqiuZeng"},"content":"    from sourceSets.main.output","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"    from(sourceSets.main.resources) {","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"        include \u0027**/*.txt\u0027","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"khooyourun":6,"-":44,"ZiqiuZeng":11}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |        Name        | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"--------|:------------------:|:--------------:|:---------:","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wilson Lee Jun Wei | [Github](https://github.com/WilsonLee2000) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Khoo You Run    |       [Github](https://github.com/)        | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Hui Yu Cong     |       [Github](https://github.com/)        | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |      John Roe      |       [Github](https://github.com/)        | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |     Zeng Ziqiu     | [Github](https://github.com/ZiqiuZeng) | [Portfolio](docs/team/AboutUs.md)","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Seungjun Lee    | [Github](https://github.com/0nandon) | [Portfolio](docs/team/AboutUs.md)","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"0nandon":2,"khooyourun":1,"-":4,"ZiqiuZeng":1,"WilsonLee2000":1,"YC-Michael":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"This developer guide will help you to get started with our product, badMaths!","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"## Table of Contents","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"1. [Acknowledgements](#acknowledgements) ","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"2. [Design \u0026 implementation](#design--implementation)","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"   - [Store Notes](#store-notes) ","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"   - [Graph](#graph)","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"   - [Matrix](#matrix)","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"2. [Product Scope](#product-scope)","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"   - [Target user profile](#target-user-profile)","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"   - [Value proposition](#value-proposition)","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"3. [User Stories](#user-stories)","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"4. [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"5. [Glossary](#glossary)","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"6. [Instructions for manual testing](#instructions-for-manual-testing)","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"## Design \u0026 implementation","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"### Solving Quadratic Equations","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"The Quadratic equation solver allows user to find the value of `x` in a simple quadratic equation.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"The function is started when `solveQuadratic()` is called.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"Below is an  example of how it would be called.","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"Quadratic. 2x^2 + 3x + 1","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"Step 1. Parser class would split the user input into 2 parts, command and toDo. Command would be `Quadratic`,","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"thus `executeCommand` would trigger `quadraticSolver`. toDo would be `2x^2 + 3x + 1`.","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"Step 2. The general formula of quadratic equations is `ax^2 + bx + c`, thus `findA`, `findB`, `findC`","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"would identify a, b and c from toDo.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"Step 3. To solve the quadratic equation, a, b and c are put into the formula `x \u003d (-b±√(b^2-4ac))/2a`.","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"### Store and Display Notes","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"The Store and Display Notes functionality allows users to input notes ","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"which will be stored in a list, and to display a list of all notes","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"stored by users. This functionality is achieved through the `Store.` and `List.` commands.","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"The syntax for the commands of this functionality is as follows:","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"WilsonLee2000"},"content":"1. `Store. \u003citem\u003e` For storing of notes into the list, where `\u003citem\u003e` represents the note that ","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"users would like to store. ","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"WilsonLee2000"},"content":"   Example: `Store. addition`","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"2. `List.` For displaying of a list of all notes stored by users.","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"WilsonLee2000"},"content":"   Example: `List.`","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"WilsonLee2000"},"content":"Below is an illustration of how the `Store.` and `List.` are used to allow","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"WilsonLee2000"},"content":"users to input notes to a list and to display a list of all notes that are","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"WilsonLee2000"},"content":"stored inside the list.","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"WilsonLee2000"},"content":"1. This is step 1.","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"WilsonLee2000"},"content":"2. This is step 2.","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"WilsonLee2000"},"content":"![img.png](img.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"### Help","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"The Help feature allows users to view possible options by calling `Help.` which reads the content stored in the HelpManual.txt.","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"ZiqiuZeng"},"content":"The feature implemented involves reading the content from HelpManual.txt file and logging the result of read operation using the Java Logging API.","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"#### HelpManual text:","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"ZiqiuZeng"},"content":"`HelpManual.txt` is a text file that contains the help manual for the application. It is located in the `src/main/resources` directory of the project.","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"ZiqiuZeng"},"content":"The purpose of this file is to provide users with helpful information on how to use the application.","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"ZiqiuZeng"},"content":"#### HelpManual class:","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"ZiqiuZeng"},"content":"Step 1. Define the HelpManual class: The HelpManual class is defined as a public class with two static fields: filePath and logFilePath. ","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"ZiqiuZeng"},"content":"These fields contain the file path of the HelpManual.txt file and the name of the log file, respectively.","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"ZiqiuZeng"},"content":"Step 2. Setting up the Logger: The Logger is set up in the HelpManual class using the Java Logging API. ","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"ZiqiuZeng"},"content":"The `setUpLogger()` method resets the LogManager, sets the logger\u0027s level to ALL, and creates a log file if it does not already exist. ","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"ZiqiuZeng"},"content":"This method is called before the `readHelpManual()` method to ensure that the logger is properly configured.","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"ZiqiuZeng"},"content":"Step 3. Reading the file:","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"ZiqiuZeng"},"content":"The `readHelpManual()` method is implemented to read the content from the HelpManual.txt file.","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"ZiqiuZeng"},"content":"It first calls the setUpLogger() method to configure the logger. Then it obtains an InputStream object that reads the content from the ","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"ZiqiuZeng"},"content":"file using the `getResourceAsStream()` method. Before reading the file, the `readHelpManual()` method asserts that the input stream is not null to ensure that the file exists and is readable.","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"ZiqiuZeng"},"content":"The file is then read line by line using a BufferedReader object, and each line is appended to a StringBuilder object. Otherwise,","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"ZiqiuZeng"},"content":"the `getResourceAsStream()` method will return a null value, and an `AssertionError` will be thrown.","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"ZiqiuZeng"},"content":"Step 4. Logging the result: After reading the file, the `readHelpManual()` method closes the BufferedReader and InputStream ","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"ZiqiuZeng"},"content":"objects and logs the success or failure of the read operation using the logger. If the read operation is successful, a message","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"ZiqiuZeng"},"content":"is logged to the console and log file indicating that the HelpManual file was successfully read. If an exception occurs during","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"ZiqiuZeng"},"content":"the read operation, an error message is logged to the console and log file.","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"YC-Michael"},"content":"### Graph","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"YC-Michael"},"content":"The Graph feature allows users to analyse basic Trigonometry signals by calling `startGraphAnalysis()` which","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"YC-Michael"},"content":"creates a new instance of `TrigoGraphAnalyser` named `analyser`.","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"YC-Michael"},"content":"Below is an example usage scenario and how the `Graph` feature behaves at each step.","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"YC-Michael"},"content":"When user enters an input:","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"YC-Michael"},"content":"Graph. 2*sin(2*x+5)-1","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"YC-Michael"},"content":"#### Parser class, Command class:","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"YC-Michael"},"content":"Step 1. Parser class will split the input into `Graph.` and `2*sin(2*x+5)-1`, which are `command` and `toDo` respectively.","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"YC-Michael"},"content":"The command class creates a new instance of `TrigoGraph` and pass in `toDo` as a parameter for the constructor. It","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"YC-Michael"},"content":"then executes `trigoGraph.startGraphAnalysis()`based on `command` using switch-case statements.","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"YC-Michael"},"content":"#### TrigoGraph class:","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"YC-Michael"},"content":"Step 2. Constructor for the TrigoGraph class takes in `2*sin(2*x+5)-1` and assigns it to `trigoEqn` of type String. When `startGraphAnalysis()`","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"YC-Michael"},"content":"is called from the command class, a new instance of `TrigoGraphAnalyser` called `analyser` is created in TrigoGraph, which accepts `trigoEqn`","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"YC-Michael"},"content":"as the parameter.","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"YC-Michael"},"content":"Step 3. When `analyser.canStartAnalyser()` is true, it will print out the amplitude, frequency, phase and vertical shift","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"YC-Michael"},"content":"to the user using the Ui class. Each of the method calls to the Ui class requires an input of type double which can","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"YC-Michael"},"content":"be achieved by calling `analyser.getAmplitude()`, `analyser.getFreq()` and so on.","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"YC-Michael"},"content":"#### TrigoGraphAnalyser class:","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"YC-Michael"},"content":"Step 4. In the `canStartAnalyser()` method, the trigo equation is split into various parts, and there","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"YC-Michael"},"content":"is a method call to create `setUpLogger()` to log exceptions when user enters","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"YC-Michael"},"content":"invalid trigo equation. `canStartAnalyser()` returns false if an exception is reached, else it returns true.","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"YC-Michael"},"content":"Step 5. `canStartAnalyser()` calls `splitAmplitudeFromTrigoEqn()`. This method will split","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"YC-Michael"},"content":"the input into `2` and `sin(2*x+5)-1` using `*` as the regex. ","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"YC-Michael"},"content":"Step 6. 2 tests are ran within `splitAmplitudeFromTrigoEqn()` to check for negative amplitude and multiple asterisk. ","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"YC-Michael"},"content":"In this case, both checks will return false.","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"YC-Michael"},"content":"Step 7. The separated String is passed into `String[] amplitudeAndEqn`. The string is then passed into `findAmplitude` ","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"YC-Michael"},"content":"to determine the amplitude. In `findAmplitude(eqn)`, `isAmplitudeEqualsToOne(eqn[0])` will check if the input string ","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"YC-Michael"},"content":"starts with `cos`, `sin` or `tan`, where `eqn[0]` is `2` and `eqn[1]` is `sin(2*x+5)-1`. ","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"YC-Michael"},"content":"If this is true, 1.0 will be assigned to `amplitude`. Else, string `2` will be converted to double `2.0` and assigned to ","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"YC-Michael"},"content":"`amplitude`.","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"YC-Michael"},"content":"Step 8. After finding `amplitude`, `canStartAnalyser()` calls `splitTrigoAndVerticalShift(amplitudeAndEqn[1])`, where","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"YC-Michael"},"content":"`amplitudeAndEqn[1]` is `sin(2*x+5)-1`. `splitTrigoAndVerticalShift` splits `sin(2*x+5)-1` into `sin(2*x+5` and `-1`","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"YC-Michael"},"content":"based on `)` and returns the separated string to `trigoAndVerticalShift`.","lastModifiedDate":"2023-03-22"},{"lineNumber":134,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"YC-Michael"},"content":"Step 9. `canStartAnalyser()` calls `findVerticalShift()` which takes in `sin(2*x+5` and `-1` as a string [] parameter. ","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"YC-Michael"},"content":"In `findVerticalShift()`, method call to `isVerticalShiftZero(-1)` is false and thus, ","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"YC-Michael"},"content":"`-1` is converted to double `-1.0` and assigned to `vertricalShift`.","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"YC-Michael"},"content":"Step 10. In `canStartAnalyser()`, string `trigo` is assigned `sin(2*x+5`. ","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"YC-Michael"},"content":"Step 11. `canStartAnalyser()` calls `splitTrigoIntoPhasors()` and takes in `trigo` as the parameter. In `splitTrigoIntoPhasors()`, ","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"YC-Michael"},"content":"`startPosOfPhase` is 4 while `endPosOfPhase` is 9. A new String variable `phase` is assigned the substring of trigo from ","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"YC-Michael"},"content":"4 to 9, resulting in `2*x+5`. `splitPhasorsIntoFreq()` is called and it accepts string `2*x+5` as input.","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"YC-Michael"},"content":"Step 12. In `splitPhasorsIntoFreq()`, `findFreqForPlus()` is called which takes in string `2*x+5` as input. ","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"YC-Michael"},"content":"Step 13. In `findFreqForPlus()`, `2*x+5` is split into `2*x` and `5` using the split function with `+` as the regex. ","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"YC-Michael"},"content":"`findPhase()` which accepts `5` and a boolean `false` as parameters, and `findFreq()` which accepts `2*x` and a boolean `false` are called.","lastModifiedDate":"2023-03-22"},{"lineNumber":149,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"YC-Michael"},"content":"Step 14. In `findPhase()`, `phase` is assigned the double of `5` and in `findFreq()`, `2*x` is substring into `2` and converted ","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"YC-Michael"},"content":"to double `2.0`. `Freq` is assigned the double value of `2.0 / (2 * Math.PI)`.","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"YC-Michael"},"content":"Step 15. Finally, `canStartAnalyser()` reaches the end and returns true.","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":155,"author":{"gitId":"YC-Michael"},"content":"#### TrigoGraphVisualiser class:","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"YC-Michael"},"content":"Step 16. The `TrigoGraphVisualiser` extends JPanel and overrides the `paintComponent()` method in JComponent. ","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"YC-Michael"},"content":"Step 17. A new instance of `TrigoGraphVisualiser` is created in `startGraphAnalysis` to assign corresponding values to the amplitude, phase, frequency, ","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"YC-Michael"},"content":"vertical shift, and the trigonometric function in `TrigoGraphVisualiser`. Next, `startVisualiser()` is called to create the frame ","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"YC-Michael"},"content":"for the graph.","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"YC-Michael"},"content":"Step 18. The frame is set half of the screen size using `setSize()` and `getScreenSize()`. ","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":165,"author":{"gitId":"YC-Michael"},"content":"Step 19. When the frame is created, `paintComponent` will be called. It sets up the scale factors which will scale the values","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"YC-Michael"},"content":"generated by the trigo function to that of the frame. It the sets up the x and y axis using `g.drawLine()`.","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"YC-Michael"},"content":"Step 20. Using the switch-case statements. `drawSinCurve()` will be executed and amplitudes will be labelled on the axis. ","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"YC-Michael"},"content":"The for loop will run from `xMin` to `xMax`, which are the negative frequency and positive frequency for one period respectively.","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"YC-Michael"},"content":"After getting the y value, both x and y are scaled to xPixel and yPixel respectively. A horizontal line is drawn at every pixel, which","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"YC-Michael"},"content":"eventually forms the sine graph.","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":173,"author":{"gitId":"WilsonLee2000"},"content":"//{Describe the design and implementation of the product. ","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"WilsonLee2000"},"content":"//Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":176,"author":{"gitId":"0nandon"},"content":"### Matrix","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"0nandon"},"content":"The Matrix feature supports various basic matrix calculations below:","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"0nandon"},"content":"* Matrix multiplication","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"0nandon"},"content":"* Matrix element wise product","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"0nandon"},"content":"* Matrix addition","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"0nandon"},"content":"* Matrix subtraction","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"0nandon"},"content":"With calling `calculator.run()`, BadMaths parses the user\u0027s input and conducts the given command.","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"0nandon"},"content":"Below is an example usage scenario and how the `Matrix` feature behaves at each step.","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"0nandon"},"content":"When user enters an input:","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"0nandon"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"0nandon"},"content":"Matrix. [1,2;3,4] .* [5,6;7,8]","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"0nandon"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"0nandon"},"content":"#### Calculator class","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"0nandon"},"content":"step 1. `run()` function in `Calculator.class` firstly get `toDo` as the argument which is `[1,2;3,4] .* [5,6;7,8]` in the above example.","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"0nandon"},"content":"This `run()` function sequentially parses this string, executes the command and shows the result matrix to users.","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"0nandon"},"content":"#### Parser class","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"0nandon"},"content":"step 2. Firstly, `run()` function pass the `toDo` string to `parse()` function defined in `Parser.class`. ","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"0nandon"},"content":"This `parse()` function firstly identifies the type of the operator of this command with referring `toDo` string. ","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"0nandon"},"content":"And then, it divides the cases with this identified type with using `switch` statement.","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"0nandon"},"content":"#### Execute class","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"0nandon"},"content":"step 3. According to each case divided by operator types in the previous step, ","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"0nandon"},"content":"`parse()` function calls corresponding function defined in `Execute.class` for conducting calculation. ","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"0nandon"},"content":"In the case of the above example, `parse()` function calls `executeMul()` defined in `Execute.class` since the type of the ","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"0nandon"},"content":"operator is matrix multiplication. Finally, it passes the `toDo` string to `executeMul()` function as the argument.","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"0nandon"},"content":"step4. `executeMul()` function firstly extracts two operands from `toDo` string. And pass these two operands to `executeTranspose()` ","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"0nandon"},"content":"in `Execute.class` respectively. ","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":213,"author":{"gitId":"0nandon"},"content":"step 5. In this `executeTranspose()` function, function checks whether there is transpose mark in the given operand, and parses this","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"0nandon"},"content":"operand which is string type into `Tensor2D` type so that this operand could be internally calculated. In this parsing phase, ","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"0nandon"},"content":"`parseMatrix()` function defined in `Parser.class` is used. This function finally outputs this `Tensor2D` type operand to ","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"0nandon"},"content":"`executeMatrix()` function.","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"0nandon"},"content":"step 6. Regarding these two operands with `Tensor2D` type, `executeMul` function calls `mul()` function defined in `calculate.class`.","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":220,"author":{"gitId":"0nandon"},"content":"#### Calculate class","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":222,"author":{"gitId":"0nandon"},"content":"step 7. `mul()` function defined in `Calculate.class` internally conducts matrix multiplication with nested for-loop ","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"0nandon"},"content":"and outputs the result which is `Tensor2D` type.","lastModifiedDate":"2023-03-24"},{"lineNumber":224,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":225,"author":{"gitId":"0nandon"},"content":"step 8. This result is sequentially returned to `executeMul()`, `parse()` and `run()` function. Finally in the `run()` function,","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"0nandon"},"content":"the result is printed in terminal.","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":229,"author":{"gitId":"WilsonLee2000"},"content":"## Product Scope","lastModifiedDate":"2023-03-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"0nandon":53,"khooyourun":16,"-":36,"ZiqiuZeng":30,"WilsonLee2000":37,"YC-Michael":83}},{"path":"docs/Notes.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"title Notes Sequence Diagram for Notes.Java","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"actor User","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"User -\u003e Notes : setToDo()","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"activate Notes","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"Notes -\u003e Ui : printNotes()","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"activate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"destroy Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"ArrayList --\u003e Notes : cache","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"deactivate Notes","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"WilsonLee2000":17}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{Give a product intro}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Down the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"### Graph analyser and visualiser: `Graph. `","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"This feature accepts a trigonometry equation (Sinusoidal signal) and outputs the amplitude, frequency, phase, and vertical shift.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"It also displays the image of the corresponding graph.","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"Format: `Graph. [Amplitude]*[Trigo]([Frequency]*x+[PhaseShift])+[VerticalShift]`","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"* `[Amplitude]` can be any positive number.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"* `[Trigo]` can be sin, cos or tan.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"* `[Frequency],[PhaseShift],[VerticalShift]` can be any number.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"* `[]` is not needed when entering the input.","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"Example input:","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"Graph. 2*sin(5*x+2)-8","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"### Store notes:","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"Adds a new item to the Notes list.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"Format: `Store. \u003citem description\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"Example of usage: `Store. index`","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"### Display all notes: ","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"Display a list of all notes stored by user.","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"Format: `List.`","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"Example of usage: `List.`","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"WilsonLee2000"},"content":"### Display a specific note: ","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"Display a particular note in the Notes list.","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"Format: `List. \u003cnumber\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"WilsonLee2000"},"content":"Example of usage: `List. 1`","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"WilsonLee2000"},"content":"### Delete a specific note:","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"WilsonLee2000"},"content":"Delete a particular note stored in the Notes list","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"WilsonLee2000"},"content":"Format: `Delete. \u003cnumber\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"WilsonLee2000"},"content":"Example of usage: `Delete. 1`","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":34,"YC-Michael":17,"WilsonLee2000":18}},{"path":"src/main/java/seedu/badMaths/BadMaths.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import seedu.badMaths.ui.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.File;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"public class BadMaths {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"    private static final String path \u003d \"data/notes.txt\";","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"    private static final Set\u003cString\u003e VALID_COMMANDS \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"            \"Graph\", \"Bye\", \"List\", \"Store\", \"Matrix\", \"Help\", \"FindInfo\", \"FindPrior\", \"FindMark\", \"FindUnmark\", \"Low\",","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"            \"Medium\", \"High\", \"Delete\", \"Mark\", \"Unmark\", \"Clear\", \"Rank\", \"Quadratic\"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"    ));","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void commandChecker(String command) {","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"            if (!VALID_COMMANDS.contains(command)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"            Ui.printIncorrectFormatEntered();","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void notesCreator(String path) {","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"        File notesFile \u003d new File(path);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"        if (!notesFile.exists()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"            if (!notesFile.getParentFile().exists()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"                notesFile.getParentFile().mkdirs();","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"            try {","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"                notesFile.createNewFile();","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"        System.out.println(\"This is BadMaths. You can type \u0027Help.\u0027 to learn what I can do for you :)\");","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"        Command inputCommand \u003d null;","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"        notesCreator(path);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"        NotesList notes \u003d new NotesList(Storage.loadFile(path));","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"        while (true) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"            Parser parser \u003d new Parser(userInput);","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"            String command \u003d parser.getCommand();","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"            String toDo \u003d parser.getToDo();","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"ZiqiuZeng"},"content":"            commandChecker(command);","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"            if (inputCommand \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"                inputCommand \u003d new Command(command, toDo);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"                inputCommand.setCommand(command);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"                assert inputCommand.getCommand().equals(command) : \"inputCommand !\u003d command\";","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"                inputCommand.setToDo(toDo);","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"ZiqiuZeng"},"content":"            inputCommand.executeCommand(notes);","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"khooyourun"},"content":"            if (userInput.equals(\"Bye.\")) {","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"khooyourun":37,"ZiqiuZeng":35,"YC-Michael":1,"WilsonLee2000":1}},{"path":"src/main/java/seedu/badMaths/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Takes in function and command","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" * Identifies the function called and executes the appropriate function class","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":" *","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":" * @param command","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":" * @param toDo","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"import seedu.badMaths.trigograph.TrigoGraph;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"import seedu.badMaths.ui.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"import seedu.badMaths.matrix.Calculator;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"public class Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"    private static final String filePath \u003d \"data/notes.txt\";","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    protected String command;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    protected String toDo;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    public Command(String command, String toDo) {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"    public String getCommand() {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"        return command;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"    public void setCommand(String command) {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"            this.command \u003d command;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"            Ui.printIncorrectFormatEntered();","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"    public void setToDo(String toDo){","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"    public void executeCommand(NotesList notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraph trigoGraph \u003d new TrigoGraph(toDo);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"0nandon"},"content":"        Calculator calculator \u003d new Calculator();","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"        Quadratic quadratic \u003d new Quadratic(toDo);","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"        switch (command) {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"        case \"Bye\":","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"Goodbye!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"        case \"Graph\":","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"            trigoGraph.startGraphAnalysis();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"        case \"Store\":","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"            notes.add(toDo);","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printAddNote(toDo, notes.getSize());","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"            Storage.saveFile(filePath, notes.getAll());","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"        case \"List\":","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"            if(!toDo.equals(\"Invalid todo\")) {","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"                int index \u003d Integer.parseInt(toDo) - 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"                notes.review(index);","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"                Ui.printSpecificNote(index, notes.getAll());","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"ZiqiuZeng"},"content":"                break;","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printNotes(notes.getAll());","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"ZiqiuZeng"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"Mark\":","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"ZiqiuZeng"},"content":"            int markIndex \u003d Integer.parseInt(toDo) - 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"ZiqiuZeng"},"content":"            notes.markAsDone(markIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printMark(notes.getText(markIndex));","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"ZiqiuZeng"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"Unmark\":","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"ZiqiuZeng"},"content":"            int UnmarkIndex \u003d Integer.parseInt(toDo) - 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"ZiqiuZeng"},"content":"            notes.markAsUndone(UnmarkIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printUnmark(notes.getText(UnmarkIndex));","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"WilsonLee2000"},"content":"        case \"Delete\":","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"ZiqiuZeng"},"content":"            int deleteIndex \u003d Integer.parseInt(toDo) - 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printDelete(notes.getText(deleteIndex), notes.getSize());","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"ZiqiuZeng"},"content":"            notes.remove(deleteIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"ZiqiuZeng"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"Low\":","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"ZiqiuZeng"},"content":"            int lowIndex \u003d Integer.parseInt(toDo) - 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"ZiqiuZeng"},"content":"            notes.setPriority(lowIndex, NotePriority.Priority.LOW);","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printPriority(lowIndex, notes.getAll());","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"ZiqiuZeng"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"Medium\":","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"ZiqiuZeng"},"content":"            int mediumIndex \u003d Integer.parseInt(toDo) - 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"ZiqiuZeng"},"content":"            notes.setPriority(mediumIndex, NotePriority.Priority.MEDIUM);","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printPriority(mediumIndex, notes.getAll());","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"ZiqiuZeng"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"High\":","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"ZiqiuZeng"},"content":"            int highIndex \u003d Integer.parseInt(toDo) - 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"ZiqiuZeng"},"content":"            notes.setPriority(highIndex, NotePriority.Priority.HIGH);","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printPriority(highIndex, notes.getAll());","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"ZiqiuZeng"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"FindInfo\":","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"ZiqiuZeng"},"content":"            String keyword \u003d toDo;","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printFindNotes(notes.relevantInfo(keyword));","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"ZiqiuZeng"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"FindPrior\":","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"ZiqiuZeng"},"content":"            String priorityStr \u003d toDo;","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printFindNotes(notes.relevantPriority(priorityStr));","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"ZiqiuZeng"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"FindMark\":","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printFindNotes(notes.relevantMarked());","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"ZiqiuZeng"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"FindUnmark\":","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"ZiqiuZeng"},"content":"            Ui.printFindNotes(notes.relevantUnmarked());","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"ZiqiuZeng"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"Rank\":","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"ZiqiuZeng"},"content":"            switch (toDo) {","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"ZiqiuZeng"},"content":"            case \"Review Count\":","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"ZiqiuZeng"},"content":"                notes.rankByReviewCount();","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"ZiqiuZeng"},"content":"                Ui.printNotesByReviewCount(notes.getAll());","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"ZiqiuZeng"},"content":"                break;","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"ZiqiuZeng"},"content":"            case \"Priority\":","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"ZiqiuZeng"},"content":"                notes.rankByPriority();","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"ZiqiuZeng"},"content":"                Ui.printNotesByPriority(notes.getAll());","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"ZiqiuZeng"},"content":"                break;","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"ZiqiuZeng"},"content":"            default:","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"ZiqiuZeng"},"content":"                break;","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"ZiqiuZeng"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"ZiqiuZeng"},"content":"        case \"Clear\":","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"ZiqiuZeng"},"content":"            notes.reset();","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"ZiqiuZeng"},"content":"            Storage.clearFile(filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"WilsonLee2000"},"content":"            break;","lastModifiedDate":"2023-03-26"},{"lineNumber":129,"author":{"gitId":"khooyourun"},"content":"        case \"Help\":","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"khooyourun"},"content":"            HelpManual.readHelpManual();","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"0nandon"},"content":"        case \"Matrix\":","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"0nandon"},"content":"            calculator.run(toDo);","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"0nandon"},"content":"            break;","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"khooyourun"},"content":"        case \"Quadratic\":","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"khooyourun"},"content":"            quadratic.solveQuadratic();","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"khooyourun"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"0nandon":5,"khooyourun":58,"ZiqiuZeng":72,"YC-Michael":5,"WilsonLee2000":2}},{"path":"src/main/java/seedu/badMaths/HelpManual.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.File;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"//import java.io.FileInputStream;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"//import java.nio.file.Files;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"public class HelpManual {","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"    protected static String filePath \u003d \"/HelpManual.txt\"; // file path relative to the classpath","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"    protected static String logFilePath \u003d \"Help\";","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"    private static final Logger logger \u003d Logger.getLogger(logFilePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void setUpLogger() {","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"            if (!new File(logFilePath).exists()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"                new File(logFilePath).createNewFile();","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"            logger.log(Level.SEVERE, \"File logger not working\", e);","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"     * This method reads the content from HelpManual.txt file.","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void readHelpManual() {","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"        setUpLogger();","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"            logger.log(Level.INFO, \"going to start processing\");","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"            InputStream inputStream \u003d HelpManual.class.getResourceAsStream(filePath);","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"            // assert that the input stream is not null","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"            assert inputStream !\u003d null : \"Invalid file: \" + filePath;","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"            InputStreamReader read \u003d new InputStreamReader(inputStream, \"UTF-8\");","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(read);","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"            String lineTxt;","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"ZiqiuZeng"},"content":"            StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"ZiqiuZeng"},"content":"            while ((lineTxt \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"                content.append(lineTxt).append(\"\\n\");","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(lineTxt);","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"ZiqiuZeng"},"content":"            bufferedReader.close();","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"            read.close();","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"            // Log successful read to console and log file","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"            logger.log(Level.INFO, \"Successfully read Help Manual file.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"Error while loading files. Please try again.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"            logger.severe(\"Error while loading Help Manual. Please try again.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"ZiqiuZeng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"ZiqiuZeng":69}},{"path":"src/main/java/seedu/badMaths/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"public class Note {","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"    private String text; // the note information","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"    private int reviewCount; // how many times the note has been reviewed","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"    private boolean isDone; // whether the note is marked as done or not","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"    private NotePriority.Priority priority; // the priority of the note","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"    // constructor","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"    public Note(String text, NotePriority.Priority priority) {","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"        this.reviewCount \u003d 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"    // getters and setters","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"    public String getText() {","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"        return text;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"    public void setText(String text) {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"    public int getReviewCount() {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"        return reviewCount;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"    public void incrementReviewCount() {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"        this.reviewCount++;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"        return isDone;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"    public String getIsDoneIcon() {","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"        return (isDone ? \"Y\" : \"N\"); // mark done task with X","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"ZiqiuZeng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"    public NotePriority.Priority getPriority() {","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"        return priority;","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"ZiqiuZeng"},"content":"    public void setPriority(NotePriority.Priority priority) {","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"ZiqiuZeng"},"content":"    public void setReviewCount(int reviewCount) {","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"        this.reviewCount \u003d reviewCount;","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"    public String toString() {","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"ZiqiuZeng"},"content":"        return \"[\" + getPriority() + \"]\" + \"[\" +getIsDoneIcon() + \"]\" + \"[\" + getReviewCount() + \"]\" + getText();","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"ZiqiuZeng":65}},{"path":"src/main/java/seedu/badMaths/NotePriority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotePriority {","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"    public enum Priority {","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"        LOW,","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"        MEDIUM,","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"        HIGH","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"ZiqiuZeng":9}},{"path":"src/main/java/seedu/badMaths/NotesList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"public class NotesList {","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"    protected ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"    public NotesList(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"    public void reset() {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.clear();","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"    public void add(String text) {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"        NotePriority.Priority priority \u003d NotePriority.Priority.LOW;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note \u003d new Note(text, priority);","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.add(note);","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.remove(index);","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"    public void markAsDone(int index) {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note \u003d notes.get(index);","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"        note.markAsDone();","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"    public void markAsUndone(int index) {","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note \u003d notes.get(index);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"        note.markAsNotDone();","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"    public void setPriority(int index, NotePriority.Priority priority) {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note \u003d notes.get(index);","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"        note.setPriority(priority);","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"    public String getText(int index) {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"ZiqiuZeng"},"content":"        return notes.get(index).toString();","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"    public void review(int index) {","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"        Note note \u003d notes.get(index);","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"ZiqiuZeng"},"content":"        note.incrementReviewCount();","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"    public ArrayList\u003cNote\u003e getAll() {","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"        return notes;","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"    public int getSize() {","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"        return notes.size();","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"    public ArrayList\u003cNote\u003e relevantInfo(String keyword) {","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e relevantNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"            if (note.getText().contains(keyword)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"ZiqiuZeng"},"content":"                relevantNotes.add(note);","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"ZiqiuZeng"},"content":"        return relevantNotes;","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"ZiqiuZeng"},"content":"    public ArrayList\u003cNote\u003e relevantPriority(String priorityStr) {","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"ZiqiuZeng"},"content":"        NotePriority.Priority priority \u003d NotePriority.Priority.valueOf(priorityStr);","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e relevantNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"ZiqiuZeng"},"content":"            if (note.getPriority() \u003d\u003d priority) {","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"ZiqiuZeng"},"content":"                relevantNotes.add(note);","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"ZiqiuZeng"},"content":"        return relevantNotes;","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"ZiqiuZeng"},"content":"    public ArrayList\u003cNote\u003e relevantMarked() {","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e markedNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"ZiqiuZeng"},"content":"            if (note.getIsDone()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"ZiqiuZeng"},"content":"                markedNotes.add(note);","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"ZiqiuZeng"},"content":"        return markedNotes;","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"ZiqiuZeng"},"content":"    public ArrayList\u003cNote\u003e relevantUnmarked() {","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e unmarkedNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"ZiqiuZeng"},"content":"            if (!note.getIsDone()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"ZiqiuZeng"},"content":"                unmarkedNotes.add(note);","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"ZiqiuZeng"},"content":"        return unmarkedNotes;","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"ZiqiuZeng"},"content":"    public void rankByReviewCount() {","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.sort((note1, note2) -\u003e Integer.compare(note2.getReviewCount(), note1.getReviewCount()));","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"ZiqiuZeng"},"content":"    public void rankByPriority() {","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"ZiqiuZeng"},"content":"        Collections.sort(notes, new Comparator\u003cNote\u003e() {","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"ZiqiuZeng"},"content":"            @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"ZiqiuZeng"},"content":"            public int compare(Note note1, Note note2) {","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"ZiqiuZeng"},"content":"                NotePriority.Priority priority1 \u003d note1.getPriority();","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"ZiqiuZeng"},"content":"                NotePriority.Priority priority2 \u003d note2.getPriority();","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"ZiqiuZeng"},"content":"                return priority2.compareTo(priority1);","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"ZiqiuZeng"},"content":"        });","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"ZiqiuZeng":118}},{"path":"src/main/java/seedu/badMaths/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Takes in user input and splits it into 2 parts","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" * First part is the function name","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":" * Second part is the todo to be executed in that function","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":" * Returns the two parts using get methods","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":" *","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":" * @param userInput","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"public class Parser {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    protected String userInput;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"    public Parser(String userInput) { // List. 1","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    public String getCommand() {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        if (userInput.contains(\".\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"            return userInput.substring(0, userInput.indexOf(\".\")); // List","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"            return \"Invalid command\";","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"    public String getToDo() {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        if (userInput.contains(\".\") \u0026\u0026 userInput.contains(\" \")) {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"            return userInput.substring(userInput.indexOf(\".\") + 2); // 1","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"            return \"Invalid todo\";","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"khooyourun":32,"WilsonLee2000":4}},{"path":"src/main/java/seedu/badMaths/Quadratic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"public class Quadratic {","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"    protected String toDo;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"    public Quadratic (String toDo) {","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"    public int findA() {","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"        String stringA \u003d toDo.substring(0, toDo.indexOf(\"x\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"        return Integer.parseInt(stringA);","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    public int findB() {","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        String sign \u003d toDo.substring(toDo.indexOf(\"^2\") + 3, toDo.indexOf(\"^2\") + 4);","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"        String stringB \u003d toDo.substring(toDo.indexOf(\"^2\") + 5, toDo.indexOf(\"x \"));","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"        int B \u003d Integer.parseInt(stringB);","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        if (sign.equals(\"+\")) {","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"            return B;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"        } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"            return B*(-1);","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"    public int findC() {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"        String sign \u003d toDo.substring(toDo.indexOf(\"x \") + 2, toDo.indexOf(\"x \") + 3);","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        String stringC \u003d toDo.substring(toDo.indexOf(\"x \") + 4);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"        int C \u003d Integer.parseInt(stringC);","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"        if (sign.equals(\"+\")) {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"            return C;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"        } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"            return C*(-1);","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"    public ArrayList\u003cDouble\u003e quadraticFormula(int A, int B, int C) {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"        double x1 \u003d (-B + Math.sqrt(B*B - 4*A*C))/(2*A);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"        double x2 \u003d (-B - Math.sqrt(B*B - 4*A*C))/(2*A);","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"        ArrayList\u003cDouble\u003e xStore \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"        xStore.add(x1);","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"        xStore.add(x2);","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"        return xStore;","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"    public void printAnswer(ArrayList\u003cDouble\u003e xStore) {","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"        if (xStore.get(0).isNaN() || xStore.get(1).isNaN()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"x is imaginary.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"        } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"x1 \u003d \" + xStore.get(0) + \" , x2 \u003d \" + xStore.get(1));","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"    public void solveQuadratic() {","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"            int A \u003d findA();","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"            int B \u003d findB();","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"            int C \u003d findC();","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"            ArrayList\u003cDouble\u003e xStore \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"            xStore \u003d quadraticFormula(A, B, C);","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"            printAnswer(xStore);","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"Please use the format as shown below:\");","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"ax^2 + bx + c\");;","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"khooyourun":68}},{"path":"src/main/java/seedu/badMaths/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.File;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"public class Storage {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"    public static ArrayList\u003cNote\u003e loadFile(String path) {","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"            Scanner scanner \u003d new Scanner(new File(path));","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"            String noteScanner;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"            //text format: Priority | Note | Status | Count","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"                noteScanner \u003d scanner.nextLine();","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"                String[] noteInfo \u003d noteScanner.split(\"[|]\");","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"                //priority","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"                String priorityStr \u003d noteInfo[0];","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"                NotePriority.Priority priority \u003d NotePriority.Priority.valueOf(priorityStr);","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"                //note","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"                String noteStr \u003d noteInfo[1];","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"                //count","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"                String reviewCountStr \u003d noteInfo[2];","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"                int reviewCount \u003d Integer.parseInt(reviewCountStr);","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"                //status","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"                String isDoneStr \u003d noteInfo[3];","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"                boolean isDone \u003d isDoneStr.equals(\"X\");","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"                //update note","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"                Note note \u003d new Note(noteStr, priority);","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"                //update status","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"                if(isDone) {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"                    note.markAsDone();","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"                } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"                    note.markAsNotDone();","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"                }","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"                //update count","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"                note.setReviewCount(reviewCount);","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"                //add note","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"                notes.add(note);","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"        return notes;","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"    private static String fileContent(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"        StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"ZiqiuZeng"},"content":"        for(Note note : notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"            NotePriority.Priority priority \u003d note.getPriority();","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"ZiqiuZeng"},"content":"            String priorityStr \u003d priority.name();","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"            content.append(priorityStr).append(\"|\");","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"            String noteText \u003d note.getText();","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"            content.append(noteText).append(\"|\");","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"ZiqiuZeng"},"content":"            int reviewCount \u003d note.getReviewCount();","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"            String reviewCountStr \u003d String.valueOf(reviewCount);","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"            content.append(reviewCountStr).append(\"|\");","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"            boolean isDone \u003d note.getIsDone();","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"            String isDoneStatus \u003d \"N\";","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"            if(isDone) {","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"ZiqiuZeng"},"content":"                isDoneStatus \u003d \"Y\";","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"            content.append(isDoneStatus);","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"ZiqiuZeng"},"content":"            content.append(System.lineSeparator());","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"ZiqiuZeng"},"content":"        return content.toString();","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void saveFile(String path, ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"ZiqiuZeng"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"ZiqiuZeng"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"File not exists, create it ...\");","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"ZiqiuZeng"},"content":"            if (!file.getParentFile().exists()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println(\"Directory not exists, create it ...\");","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"ZiqiuZeng"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"ZiqiuZeng"},"content":"            try {","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"ZiqiuZeng"},"content":"                file.createNewFile();","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"ZiqiuZeng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"ZiqiuZeng"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"ZiqiuZeng"},"content":"            FileWriter fl \u003d new FileWriter(path);","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"ZiqiuZeng"},"content":"            fl.write(fileContent(notes));","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"ZiqiuZeng"},"content":"            fl.close();","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"ZiqiuZeng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void clearFile(String path) {","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"ZiqiuZeng"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"ZiqiuZeng"},"content":"            FileWriter fileWriter \u003d new FileWriter(path);","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"ZiqiuZeng"},"content":"            fileWriter.write(\"\");","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"ZiqiuZeng"},"content":"            fileWriter.close();","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"File content cleared successfully!\");","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"ZiqiuZeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"An error occurred while clearing the file content.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"ZiqiuZeng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"ZiqiuZeng":103}},{"path":"src/main/java/seedu/badMaths/matrix/Calculate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"package seedu.badMaths.matrix;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"import seedu.badMaths.matrix.exception.ExceptionChecker;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"import seedu.badMaths.matrix.exception.ExceptionPrinter;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"import seedu.badMaths.matrix.exception.ShapeMismatchException;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"public class Calculate {","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"    ExceptionChecker check \u003d new ExceptionChecker();","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"    Logger logger \u003d Logger.getLogger(\"Exception\");","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"    ExceptionPrinter ep \u003d new ExceptionPrinter();","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"    // TODO : Implement exception related to tensor\u0027s shape mismatch","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"    public Tensor2D mul(Tensor2D t1, Tensor2D t2){","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"        Shape t1Shape \u003d t1.shape();","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"        Shape t2Shape \u003d t2.shape();","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"        try{","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"            check.checkShapeMismatch(t1, t2, \"MUL\");","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"            Tensor2D t2T \u003d t2.t();","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"            int[][] output \u003d new int[t1Shape.row][t2Shape.column];","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"            for(int i\u003d0; i\u003ct1Shape.row; i++){","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"                for(int j\u003d0; j\u003ct2Shape.column; j++){","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"                    output[i][j] \u003d 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"                    for(int k\u003d0; k\u003ct1Shape.column; k++){","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"                        output[i][j] +\u003d t1.get(i, k) * t2T.get(j, k);","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"                    }","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"                }","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"            return new Tensor2D(output);","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"        }catch (ShapeMismatchException e){","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"            ep.printShapeMismatchExceptionLog();","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"0nandon"},"content":"            return null;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"0nandon"},"content":"    // TODO : Implement exception related to tensor\u0027s shape mismatch","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"0nandon"},"content":"    public Tensor2D dot(Tensor2D t1, Tensor2D t2){","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"0nandon"},"content":"        Shape t1Shape \u003d t1.shape();","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"0nandon"},"content":"        Shape t2Shape \u003d t2.shape();","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"0nandon"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"0nandon"},"content":"            check.checkShapeMismatch(t1, t2, \"DOT\");","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"0nandon"},"content":"            int[][] output \u003d new int[t1Shape.row][t1Shape.column];","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"0nandon"},"content":"            for(int i\u003d0; i\u003ct1Shape.row; i++){","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"0nandon"},"content":"                for(int j\u003d0; j\u003ct1Shape.column; j++){","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"0nandon"},"content":"                    output[i][j] \u003d t1.get(i, j) * t2.get(i, j);","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"0nandon"},"content":"                }","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"0nandon"},"content":"            return new Tensor2D(output);","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"0nandon"},"content":"        }catch (ShapeMismatchException e){","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"0nandon"},"content":"            ep.printShapeMismatchExceptionLog();","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"0nandon"},"content":"            return null;","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"0nandon"},"content":"    // TODO : Implement exception related to tensor\u0027s shape mismatch","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"0nandon"},"content":"    public Tensor2D add(Tensor2D t1, Tensor2D t2){","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"0nandon"},"content":"        Shape t1Shape \u003d t1.shape();","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"0nandon"},"content":"        Shape t2Shape \u003d t2.shape();","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"0nandon"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"0nandon"},"content":"            check.checkShapeMismatch(t1, t2, \"ADD\");","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"0nandon"},"content":"            int[][] output \u003d new int[t1Shape.row][t1Shape.column];","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"0nandon"},"content":"            for(int i\u003d0; i\u003ct1Shape.row; i++){","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"0nandon"},"content":"                for(int j\u003d0; j\u003ct1Shape.column; j++){","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"0nandon"},"content":"                    output[i][j] \u003d t1.get(i, j) + t2.get(i, j);","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"0nandon"},"content":"                }","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"0nandon"},"content":"            return new Tensor2D(output);","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"0nandon"},"content":"        }catch (ShapeMismatchException e){","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"0nandon"},"content":"            ep.printShapeMismatchExceptionLog();","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"0nandon"},"content":"            return null;","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"0nandon"},"content":"    public Tensor2D sub(Tensor2D t1, Tensor2D t2){","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"0nandon"},"content":"        Shape t1Shape \u003d t1.shape();","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"0nandon"},"content":"        Shape t2Shape \u003d t2.shape();","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"0nandon"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"0nandon"},"content":"            check.checkShapeMismatch(t1, t2, \"SUB\");","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"0nandon"},"content":"            int[][] output \u003d new int[t1Shape.row][t1Shape.column];","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"0nandon"},"content":"            for(int i\u003d0; i\u003ct1Shape.row; i++){","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"0nandon"},"content":"                for(int j\u003d0; j\u003ct1Shape.column; j++){","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"0nandon"},"content":"                    output[i][j] \u003d t1.get(i, j) - t2.get(i, j);","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"0nandon"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"0nandon"},"content":"            return new Tensor2D(output);","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"0nandon"},"content":"        }catch (ShapeMismatchException e){","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"0nandon"},"content":"            ep.printShapeMismatchExceptionLog();","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"0nandon"},"content":"            return null;","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"0nandon":109}},{"path":"src/main/java/seedu/badMaths/matrix/Calculator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"package seedu.badMaths.matrix;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"public class Calculator {","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"    Logger logger \u003d Logger.getLogger(\"matrix\");","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"    public void run(String toDo){","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"        logger.log(Level.INFO, \"Start to open calculator.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"        Tensor2D result;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"        result \u003d p.parse(toDo);","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"        if(result !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"            ui.printResult(result);","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"0nandon":21}},{"path":"src/main/java/seedu/badMaths/matrix/Execute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"package seedu.badMaths.matrix;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"public class Execute {","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"    public Tensor2D executeMul(String command){","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"        Calculate c \u003d new Calculate();","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"        String[] operator \u003d command.split(\"\\\\.\\\\*\");","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"        Tensor2D result;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"        Tensor2D t1 \u003d executeTranspose(operator[0]);","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"        Tensor2D t2 \u003d executeTranspose(operator[1]);","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"        result \u003d c.mul(t1, t2);","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"        assert result !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"        return result;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"    public Tensor2D executeDot(String command){","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"        Calculate c \u003d new Calculate();","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"        String[] operator \u003d command.split(\"\\\\*\");","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"        Tensor2D result;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"        Tensor2D t1 \u003d executeTranspose(operator[0]);","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"        Tensor2D t2 \u003d executeTranspose(operator[1]);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"        result \u003d c.dot(t1, t2);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"        assert result !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"        return result;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"    public Tensor2D executeAdd(String command){","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"        Calculate c \u003d new Calculate();","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"        String[] operator \u003d command.split(\"\\\\+\");","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"0nandon"},"content":"        Tensor2D result;","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"0nandon"},"content":"        Tensor2D t1 \u003d executeTranspose(operator[0]);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"0nandon"},"content":"        Tensor2D t2 \u003d executeTranspose(operator[1]);","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"0nandon"},"content":"        result \u003d c.add(t1, t2);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"0nandon"},"content":"        assert result !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"0nandon"},"content":"        return result;","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"0nandon"},"content":"    public Tensor2D executeSub(String command){","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"0nandon"},"content":"        Calculate c \u003d new Calculate();","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"0nandon"},"content":"        String[] operator \u003d command.split(\"-\");","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"0nandon"},"content":"        Tensor2D result;","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"0nandon"},"content":"        Tensor2D t1 \u003d executeTranspose(operator[0]);","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"0nandon"},"content":"        Tensor2D t2 \u003d executeTranspose(operator[1]);","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"0nandon"},"content":"        result \u003d c.sub(t1, t2);","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"0nandon"},"content":"        assert result !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"0nandon"},"content":"        return result;","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"0nandon"},"content":"    public Tensor2D executeTranspose(String command){","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"0nandon"},"content":"        String operator;","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"0nandon"},"content":"        if(command.contains(\".T\")){","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"0nandon"},"content":"            operator \u003d command.replace(\".T\", \"\");","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"0nandon"},"content":"            return Parser.parseMatrix(operator).t();","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"0nandon"},"content":"        }else{","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"0nandon"},"content":"            return Parser.parseMatrix(command);","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"0nandon":73}},{"path":"src/main/java/seedu/badMaths/matrix/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"package seedu.badMaths.matrix;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"import seedu.badMaths.matrix.exception.ExceptionPrinter;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"import seedu.badMaths.matrix.exception.UnknownOperatorException;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"import seedu.badMaths.matrix.exception.ExceptionChecker;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"public class Parser {","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"    ExceptionChecker check \u003d new ExceptionChecker();","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"    ExceptionPrinter ep \u003d new ExceptionPrinter();","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"    public Tensor2D parse(String command) {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"        CalType type;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"        command \u003d command.replace(\" \", \"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"            check.checkUnknownOperator(command);","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"            if(command.contains(\"+\")){","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"                type \u003d CalType.ADD;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"            }else if(command.contains(\"-\")){","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"                type \u003d CalType.SUB;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"            }else if(command.contains(\".*\")){","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"                type \u003d CalType.MUL;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"            }else if(command.contains(\"*\")){","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"                type \u003d CalType.DOT;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"            }else{","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"                type \u003d CalType.UNKNOWN;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"            Tensor2D op1;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"            Tensor2D op2;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"            Tensor2D result \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"            String[] op;","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"            Calculate c \u003d new Calculate();","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"            Execute e \u003d new Execute();","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"0nandon"},"content":"            switch(type){","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"0nandon"},"content":"            case ADD:","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"0nandon"},"content":"                result \u003d e.executeAdd(command);","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"0nandon"},"content":"                break;","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"0nandon"},"content":"            case SUB:","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"0nandon"},"content":"                result \u003d e.executeSub(command);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"0nandon"},"content":"                break;","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"0nandon"},"content":"            case MUL:","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"0nandon"},"content":"                result \u003d e.executeMul(command);","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"0nandon"},"content":"                break;","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"0nandon"},"content":"            case DOT:","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"0nandon"},"content":"                result \u003d e.executeDot(command);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"0nandon"},"content":"                break;","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"0nandon"},"content":"            default:","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"0nandon"},"content":"                break;","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"0nandon"},"content":"            return result;","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"0nandon"},"content":"        }catch (UnknownOperatorException e){","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"0nandon"},"content":"            ep.printUnknownOperatorExceptionLog();","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"0nandon"},"content":"            return null;","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"0nandon"},"content":"    public static Tensor2D parseMatrix(String command) {","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"0nandon"},"content":"        int[][] tensor;","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"0nandon"},"content":"        int rowNum;","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"0nandon"},"content":"        int colNum;","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"0nandon"},"content":"        command \u003d command.replace(\"[\", \"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"0nandon"},"content":"        command \u003d command.replace(\"]\", \"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"0nandon"},"content":"        String[] rows;","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"0nandon"},"content":"        String[] column;","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"0nandon"},"content":"        rows \u003d command.split(\";\");","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"0nandon"},"content":"        rowNum \u003d rows.length;","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"0nandon"},"content":"        colNum \u003d rows[0].split(\",\").length;","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"0nandon"},"content":"        assert rowNum \u003d\u003d 1 || colNum \u003d\u003d rows[1].split(\",\").length;","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"0nandon"},"content":"        tensor \u003d new int[rowNum][colNum];","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003crowNum; i++){","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003ccolNum; j++){","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"0nandon"},"content":"                column \u003d rows[i].split(\",\");","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"0nandon"},"content":"                tensor[i][j] \u003d Integer.parseInt(column[j]);","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"0nandon"},"content":"        return new Tensor2D(tensor);","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"0nandon"},"content":"    enum CalType {","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"0nandon"},"content":"        ADD, SUB, MUL, DOT, UNKNOWN","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"0nandon":94}},{"path":"src/main/java/seedu/badMaths/matrix/Shape.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"package seedu.badMaths.matrix;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"public class Shape {","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"    protected int row;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"    protected int column;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"    public Shape(int row, int column){","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"        this.row \u003d row;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"        this.column \u003d column;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"    public int getRow(){","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"        return row;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"    public int getColumn(){","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"        return column;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"    public String toString() {","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"        return row + \" x \" + column;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"0nandon":24}},{"path":"src/main/java/seedu/badMaths/matrix/Tensor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"package seedu.badMaths.matrix;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"public abstract class Tensor {","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"    public abstract Shape shape();","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"    public abstract String toString();","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"0nandon":7}},{"path":"src/main/java/seedu/badMaths/matrix/Tensor2D.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"package seedu.badMaths.matrix;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"public class Tensor2D extends Tensor {","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"    protected int[][] tensor;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"    protected Shape shape;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"    public Tensor2D(int[][] tensor){","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"        this.tensor \u003d tensor;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"        shape \u003d new Shape(tensor.length, tensor[0].length);","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"    public Shape shape(){","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"        return shape;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"    public int row(){","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"        return shape.getRow();","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"    public int column(){","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"        return shape.getColumn();","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"    public int[][] tensor(){","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"        return this.tensor;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"    public int get(int row, int column){","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"        return tensor[row][column];","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"    public Tensor2D t(){","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"        int row \u003d shape.row;","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"        int column \u003d shape.column;","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"        int[][] transposeTensor \u003d new int[column][row];","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003ccolumn; i++){","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003crow; j++){","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"0nandon"},"content":"                transposeTensor[i][j] \u003d tensor[j][i];","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"0nandon"},"content":"        return new Tensor2D(transposeTensor);","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"0nandon"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"0nandon"},"content":"    public String toString() {","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"0nandon"},"content":"        int row \u003d shape.row;","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"0nandon"},"content":"        int column \u003d shape.column;","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"0nandon"},"content":"        StringBuilder str \u003d new StringBuilder(\"\");","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"0nandon"},"content":"        str.append(\"    1. shape : \").append(row).append(\" x \").append(column).append(\"\\n\");","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"0nandon"},"content":"        str.append(\"    2. value : \\n\");","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003crow; i++){","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"0nandon"},"content":"            str.append(\"        \").append(i).append(\") \");","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003ccolumn; j++){","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"0nandon"},"content":"                str.append(tensor[i][j]).append(\" \");","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"0nandon"},"content":"            str.append(\"\\n\");","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"0nandon"},"content":"        return str.toString();","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"0nandon":66}},{"path":"src/main/java/seedu/badMaths/matrix/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"package seedu.badMaths.matrix;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"public class Ui {","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"    public void printInfo(){","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"    public void printResult(Tensor2D tensor){","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"        System.out.println(\"Result.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"        System.out.println(tensor);","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"0nandon":12}},{"path":"src/main/java/seedu/badMaths/matrix/exception/ExceptionChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"package seedu.badMaths.matrix.exception;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"import seedu.badMaths.matrix.Tensor2D;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"public class ExceptionChecker {","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"    public void checkShapeMismatch(Tensor2D t1, Tensor2D t2, String type) throws ShapeMismatchException{","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"        switch(type){","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"        case \"MUL\":","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"            if(t1.column() !\u003d t2.row()){","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"                throw new ShapeMismatchException();","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"        case \"DOT\":","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"        case \"ADD\":","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"        case \"SUB\":","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"            boolean isColumnMatch \u003d t1.column() !\u003d t2.column();","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"            boolean isRowMatch \u003d t1.row() !\u003d t2.row();","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"            if(isColumnMatch || isRowMatch){","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"                throw new ShapeMismatchException();","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"        default:","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"    public void checkUnknownOperator(String command) throws UnknownOperatorException{","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"        boolean isMul \u003d command.contains(\".*\");","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"        boolean isDot \u003d command.contains(\"*\");","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"        boolean isAdd \u003d command.contains(\"+\");","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"        boolean isSub \u003d command.contains(\"-\");","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"        if(!isMul \u0026\u0026 !isDot \u0026\u0026 !isAdd \u0026\u0026 !isSub){","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"            throw new UnknownOperatorException();","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"0nandon":37}},{"path":"src/main/java/seedu/badMaths/matrix/exception/ExceptionPrinter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"package seedu.badMaths.matrix.exception;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"public class ExceptionPrinter {","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"    Logger logger \u003d Logger.getLogger(\"exception\");","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"    public void printShapeMismatchExceptionLog(){","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"        String ExceptionMessage \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"        ExceptionMessage +\u003d \"\u003cException occurs\u003e\\n\";","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"        ExceptionMessage +\u003d \"There is shape mismatch between t1 and t2 : cannot execute matrix calculation.\";","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"        System.out.println(ExceptionMessage);","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"        logger.log(Level.WARNING, \"shape mismatch occur.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"    public void printUnknownOperatorExceptionLog(){","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"        String ExceptionMessage \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"        ExceptionMessage +\u003d \"\u003cException occurs\u003e\\n\";","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"        ExceptionMessage +\u003d \"Operator in expression is unknown.\";","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"        System.out.println(ExceptionMessage);","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"        logger.log(Level.WARNING, \"Unknown operator.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"0nandon":26}},{"path":"src/main/java/seedu/badMaths/matrix/exception/ShapeMismatchException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"package seedu.badMaths.matrix.exception;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"public class ShapeMismatchException extends Exception {","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"0nandon":4}},{"path":"src/main/java/seedu/badMaths/matrix/exception/UnknownOperatorException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"package seedu.badMaths.matrix.exception;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"public class UnknownOperatorException extends Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"0nandon":4}},{"path":"src/main/java/seedu/badMaths/trigograph/GraphException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badMaths.trigograph;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"public class GraphException extends Exception{","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"YC-Michael":5}},{"path":"src/main/java/seedu/badMaths/trigograph/TrigoGraph.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badMaths.trigograph;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"import seedu.badMaths.ui.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"public class TrigoGraph {","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"    private String trigoEqn;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"    private double amplitude;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"    private double frequency;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"    private double phase;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"    private double verticalShift;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    private String trig;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"    public TrigoGraph(String trigoEqn) {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"        this.trigoEqn \u003d trigoEqn;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    public void startGraphAnalysis() {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser analyser \u003d new TrigoGraphAnalyser(trigoEqn);","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"        if(analyser.canStartAnalyser()){","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"            assert analyser.canStartAnalyser() \u003d\u003d true;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"            getGraphDetails(analyser);","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"            printGraphDetails();","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"            TrigoGraphVisualiser visualiser \u003d new TrigoGraphVisualiser(amplitude,phase,frequency,verticalShift,trig);","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"            visualiser.startVisualiser();","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"        } else{","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"            assert analyser.canStartAnalyser() \u003d\u003d false;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"    public void getGraphDetails(TrigoGraphAnalyser analyser){","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"        amplitude \u003d analyser.getAmplitude();","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"        frequency \u003d analyser.getFreq();","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"        phase \u003d analyser.getPhase();","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"        verticalShift \u003d analyser.getVerticalShift();","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"        trig \u003d analyser.getTrigonometry();","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"    public void printGraphDetails(){","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"        Ui.printAmplitude(amplitude);","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"        Ui.printFrequency(frequency);","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"        Ui.printPhase(phase);","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"        Ui.printVerticalShift(verticalShift);","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"    public double getAmplitude() {","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"        return amplitude;","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"    public double getFrequency() {","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"        return frequency;","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"    public double getPhase() {","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"        return phase;","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"    public double getVerticalShift() {","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"        return verticalShift;","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"    public String getTrig() {","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"        return trig;","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"khooyourun":2,"YC-Michael":63}},{"path":"src/main/java/seedu/badMaths/trigograph/TrigoGraphAnalyser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badMaths.trigograph;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"import seedu.badMaths.ui.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"import java.io.File;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"public class TrigoGraphAnalyser {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"    private static final boolean CAN_RUN_ANALYSER \u003d true;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"    private static final boolean CANNOT_RUN_ANALYSER \u003d false;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"    private static final int PLACEHOLDER_SIZE_WITH_NEG_PHASE \u003d 3;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"    private static final int PLACEHOLDER_SIZE_WITH_POS_PHASE \u003d 2;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    private static final int SIZE_OF_FREQ_AND_PHASE \u003d 3;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"    private static final int INDEX_FOR_NEG_PHASE_WITH_NEG_FREQ \u003d 2;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"    private static final int INDEX_FOR_NEG_PHASE_WITH_POS_FREQ \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"    private static final int INDEX_FOR_POS_FREQ \u003d 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"    private static final int INDEX_FOR_POS_PHASE \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"    private static final int INDEX_FOR_NEG_FREQ \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"    private static final int START_POS_OF_TRIG \u003d 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"    private static final int END_POS_OF_TRIG \u003d 3;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"    private static final int CORRECT_POS_OF_PHASE \u003d 4;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"    private static Logger logger \u003d Logger.getLogger(TrigoGraphAnalyser.class.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"    private String trigoEqn;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"    private String trigonometry;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"    private double phase;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"    private double amplitude;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"    private double verticalShift;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"    private double freq;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"    public TrigoGraphAnalyser(String trigoEqn) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"        this.trigoEqn \u003d trigoEqn;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"    public boolean canStartAnalyser() {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"        setUpLogger();","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"            String[] amplitudeAndEqn \u003d splitAmplitudeFromTrigoEqn();","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"            findAmplitude(amplitudeAndEqn);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"            String[] trigoAndVerticalShift;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"            if (isAmplitudeEqualsToOne(amplitudeAndEqn[0])) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"                trigoAndVerticalShift \u003d splitTrigoAndVerticalShift(trigoEqn);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"                trigoAndVerticalShift \u003d splitTrigoAndVerticalShift(amplitudeAndEqn[1]);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"            findVerticalShift(trigoAndVerticalShift);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"            String trigo \u003d trigoAndVerticalShift[0];","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"            splitTrigoIntoPhasors(trigo);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"            return CAN_RUN_ANALYSER;","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"            logger.log(Level.SEVERE, \"NumberFormatException\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"            Ui.printIncorrectFormatEntered();","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"            return CANNOT_RUN_ANALYSER;","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"        } catch (GraphException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"            logger.log(Level.SEVERE, \"GraphException\", e);","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"            Ui.printNegativeAmplitudeEntered();","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"            return CANNOT_RUN_ANALYSER;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"        } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"            logger.log(Level.SEVERE, \"ArrayIndexOutOfBounds\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"            Ui.printIncorrectFormatEntered();","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"            return CANNOT_RUN_ANALYSER;","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"YC-Michael"},"content":"        } catch (IllegalArgumentException e){","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"YC-Michael"},"content":"            logger.log(Level.SEVERE, \"IllegalArguementException\", e);","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"YC-Michael"},"content":"            Ui.printIncorrectFormatEntered();","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"YC-Michael"},"content":"            return CANNOT_RUN_ANALYSER;","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"YC-Michael"},"content":"    public static void setUpLogger() {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"YC-Michael"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"YC-Michael"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"YC-Michael"},"content":"            if (!new File(\"trigoGraphAnalyser.log\").exists()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"YC-Michael"},"content":"                new File(\"trigoGraphAnalyser.log\").createNewFile();","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"YC-Michael"},"content":"            FileHandler logFile \u003d new FileHandler(\"trigoGraphAnalyser.log\", true);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"YC-Michael"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"YC-Michael"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"YC-Michael"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"YC-Michael"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"YC-Michael"},"content":"    public void findAmplitude(String[] eqn) throws NumberFormatException {","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"YC-Michael"},"content":"        String[] trigoAndVerticalShift;","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"YC-Michael"},"content":"        if (isAmplitudeEqualsToOne(eqn[0])) {","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"YC-Michael"},"content":"            amplitude \u003d 1.0;","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"YC-Michael"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"YC-Michael"},"content":"            amplitude \u003d Double.parseDouble(eqn[0]);","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"YC-Michael"},"content":"    private void testForSignOfAmplitude() throws GraphException {","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"YC-Michael"},"content":"        if (trigoEqn.startsWith(\"-\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"YC-Michael"},"content":"            throw new GraphException();","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"YC-Michael"},"content":"    private void testForMultipleAsterisk(String input) throws NumberFormatException {","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"YC-Michael"},"content":"        if (input.startsWith(\"*\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"YC-Michael"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"YC-Michael"},"content":"    public String[] splitAmplitudeFromTrigoEqn() throws IllegalArgumentException, GraphException {","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"YC-Michael"},"content":"        testForSignOfAmplitude();","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"YC-Michael"},"content":"        String[] amplitudeAndEqn \u003d trigoEqn.split(\"\\\\*\", 2);","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"YC-Michael"},"content":"        testForMultipleAsterisk(amplitudeAndEqn[1]);","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"YC-Michael"},"content":"        return amplitudeAndEqn;","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"YC-Michael"},"content":"    public Double getAmplitude() {","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"YC-Michael"},"content":"        return amplitude;","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"YC-Michael"},"content":"    public double getPhase() {","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"YC-Michael"},"content":"        return phase;","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"YC-Michael"},"content":"    public double getVerticalShift() {","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"YC-Michael"},"content":"        return verticalShift;","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"YC-Michael"},"content":"    public double getFreq() {","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"YC-Michael"},"content":"        return freq;","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"YC-Michael"},"content":"    public String getTrigonometry() {","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"YC-Michael"},"content":"        return trigonometry;","lastModifiedDate":"2023-03-22"},{"lineNumber":134,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"YC-Michael"},"content":"    private boolean isAmplitudeEqualsToOne(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"YC-Michael"},"content":"        if (input.startsWith(\"cos\") || input.startsWith(\"sin\") || input.startsWith(\"tan\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"YC-Michael"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"YC-Michael"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"YC-Michael"},"content":"    private boolean isVerticalShiftZero(String verticalShift) {","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"YC-Michael"},"content":"        return verticalShift.isEmpty();","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"YC-Michael"},"content":"    private String[] splitTrigoAndVerticalShift(String eqn) {","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"YC-Michael"},"content":"        String[] trigoAndVerticalShift \u003d eqn.split(\"\\\\)\", 2);","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"YC-Michael"},"content":"        return trigoAndVerticalShift;","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"YC-Michael"},"content":"    private void findVerticalShift(String[] trigoAndVerticalShift) {","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"YC-Michael"},"content":"        if (isVerticalShiftZero(trigoAndVerticalShift[1])) {","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"YC-Michael"},"content":"            verticalShift \u003d 0.0;","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"YC-Michael"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"YC-Michael"},"content":"            verticalShift \u003d Double.parseDouble(trigoAndVerticalShift[1]);","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"YC-Michael"},"content":"    public void splitTrigoIntoPhasors(String trigo) throws IllegalArgumentException {","lastModifiedDate":"2023-03-22"},{"lineNumber":163,"author":{"gitId":"YC-Michael"},"content":"        int startPosOfPhase \u003d trigo.indexOf(\"(\") + 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"YC-Michael"},"content":"        int endPosOfPhase \u003d trigo.length();","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"YC-Michael"},"content":"        if (startPosOfPhase \u003d\u003d CORRECT_POS_OF_PHASE){","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"YC-Michael"},"content":"            trigonometry \u003d trigo.substring(START_POS_OF_TRIG,END_POS_OF_TRIG);","lastModifiedDate":"2023-03-22"},{"lineNumber":167,"author":{"gitId":"YC-Michael"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"YC-Michael"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"YC-Michael"},"content":"        String phase \u003d trigo.substring(startPosOfPhase, endPosOfPhase);","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"YC-Michael"},"content":"        splitPhasorsIntoFreq(phase);","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"khooyourun"},"content":"    private void findFreqForNoPhasors(String phasors) {","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"YC-Michael"},"content":"        phase \u003d 0.0;","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"khooyourun"},"content":"        boolean isFreqNegative \u003d testForNegativeFreq(phasors);","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"YC-Michael"},"content":"        findFreq(phasors,isFreqNegative);","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"khooyourun"},"content":"    private void findFreqForPlus(String phasors) {","lastModifiedDate":"2023-03-16"},{"lineNumber":181,"author":{"gitId":"khooyourun"},"content":"        String[] freqAndShift \u003d phasors.split(\"\\\\+\", PLACEHOLDER_SIZE_WITH_POS_PHASE);","lastModifiedDate":"2023-03-16"},{"lineNumber":182,"author":{"gitId":"khooyourun"},"content":"        findPhase(freqAndShift[INDEX_FOR_POS_PHASE], false);","lastModifiedDate":"2023-03-16"},{"lineNumber":183,"author":{"gitId":"khooyourun"},"content":"        boolean isFreqNegative \u003d testForNegativeFreq(freqAndShift);","lastModifiedDate":"2023-03-16"},{"lineNumber":184,"author":{"gitId":"YC-Michael"},"content":"        findFreq(freqAndShift[INDEX_FOR_POS_FREQ], isFreqNegative);","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":186,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":187,"author":{"gitId":"khooyourun"},"content":"    private void findFreqForMinus(String phasors) {","lastModifiedDate":"2023-03-16"},{"lineNumber":188,"author":{"gitId":"khooyourun"},"content":"        String[] freqAndShift \u003d phasors.split(\"-\", PLACEHOLDER_SIZE_WITH_NEG_PHASE);","lastModifiedDate":"2023-03-16"},{"lineNumber":189,"author":{"gitId":"khooyourun"},"content":"        boolean isPhaseNegative \u003d true;","lastModifiedDate":"2023-03-16"},{"lineNumber":190,"author":{"gitId":"khooyourun"},"content":"        boolean isFreqNegative \u003d testForNegativeFreq(freqAndShift);","lastModifiedDate":"2023-03-16"},{"lineNumber":191,"author":{"gitId":"YC-Michael"},"content":"        if (isFreqNegative) {","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"YC-Michael"},"content":"            findPhase(freqAndShift[INDEX_FOR_NEG_PHASE_WITH_NEG_FREQ], isPhaseNegative);","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"YC-Michael"},"content":"            findFreq(freqAndShift[INDEX_FOR_NEG_FREQ], isFreqNegative);","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"YC-Michael"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"YC-Michael"},"content":"            findPhase(freqAndShift[INDEX_FOR_NEG_PHASE_WITH_POS_FREQ], isPhaseNegative);","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"YC-Michael"},"content":"            findFreq(freqAndShift[INDEX_FOR_POS_FREQ], isFreqNegative);","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":199,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":200,"author":{"gitId":"khooyourun"},"content":"    private void splitPhasorsIntoFreq(String phasors) {","lastModifiedDate":"2023-03-16"},{"lineNumber":201,"author":{"gitId":"khooyourun"},"content":"        if (phasors.endsWith(\"x\")){","lastModifiedDate":"2023-03-16"},{"lineNumber":202,"author":{"gitId":"khooyourun"},"content":"            findFreqForNoPhasors(phasors);","lastModifiedDate":"2023-03-16"},{"lineNumber":203,"author":{"gitId":"khooyourun"},"content":"        } else if (phasors.contains(\"+\")) {","lastModifiedDate":"2023-03-16"},{"lineNumber":204,"author":{"gitId":"khooyourun"},"content":"            findFreqForPlus(phasors);","lastModifiedDate":"2023-03-16"},{"lineNumber":205,"author":{"gitId":"khooyourun"},"content":"        } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":206,"author":{"gitId":"khooyourun"},"content":"            findFreqForMinus(phasors);","lastModifiedDate":"2023-03-16"},{"lineNumber":207,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":208,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"YC-Michael"},"content":"    private boolean testForNegativeFreq(String[] freqAndShift) {","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"YC-Michael"},"content":"        if (freqAndShift[INDEX_FOR_POS_FREQ].isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"YC-Michael"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"YC-Michael"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"YC-Michael"},"content":"    private boolean testForNegativeFreq(String freq){","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"YC-Michael"},"content":"        if(freq.startsWith(\"-\")){","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"YC-Michael"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"YC-Michael"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"YC-Michael"},"content":"    public void findFreq(String freqWithX, boolean isFreqNeg) throws NumberFormatException {","lastModifiedDate":"2023-03-28"},{"lineNumber":224,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"YC-Michael"},"content":"            String freqComponents;","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"YC-Michael"},"content":"            if (freqWithX.equals(\"x\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":227,"author":{"gitId":"YC-Michael"},"content":"                if (isFreqNeg) {","lastModifiedDate":"2023-03-14"},{"lineNumber":228,"author":{"gitId":"YC-Michael"},"content":"                    freqComponents \u003d \"-1.0\";","lastModifiedDate":"2023-03-14"},{"lineNumber":229,"author":{"gitId":"YC-Michael"},"content":"                } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":230,"author":{"gitId":"YC-Michael"},"content":"                    freqComponents \u003d \"1.0\";","lastModifiedDate":"2023-03-14"},{"lineNumber":231,"author":{"gitId":"YC-Michael"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"YC-Michael"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"YC-Michael"},"content":"                int lastIndexForFreq \u003d freqWithX.indexOf(\"*\");","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"YC-Michael"},"content":"                freqComponents \u003d freqWithX.substring(0, lastIndexForFreq);","lastModifiedDate":"2023-03-14"},{"lineNumber":235,"author":{"gitId":"YC-Michael"},"content":"                if (trigoEqn.contains(\"pi\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"YC-Michael"},"content":"                    freq \u003d Double.parseDouble(freqComponents) / 2;","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"YC-Michael"},"content":"                } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"YC-Michael"},"content":"                    freq \u003d Double.parseDouble(freqComponents) / (2 * Math.PI);","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"YC-Michael"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"YC-Michael"},"content":"            if (isFreqNeg) {","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"YC-Michael"},"content":"                freq \u003d Math.abs(freq) * -1;","lastModifiedDate":"2023-03-14"},{"lineNumber":243,"author":{"gitId":"YC-Michael"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"YC-Michael"},"content":"                freq \u003d Math.abs(freq);","lastModifiedDate":"2023-03-14"},{"lineNumber":245,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"YC-Michael"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":247,"author":{"gitId":"YC-Michael"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"YC-Michael"},"content":"    private void findPhase(String phasor, boolean isPhaseNegative) throws NumberFormatException {","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"YC-Michael"},"content":"            if (phasor.isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"YC-Michael"},"content":"                phase \u003d 0.0;","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"YC-Michael"},"content":"            } else if (isPhaseNegative) {","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"YC-Michael"},"content":"                phase \u003d Double.parseDouble(phasor) * (-1.0);","lastModifiedDate":"2023-03-14"},{"lineNumber":257,"author":{"gitId":"YC-Michael"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"YC-Michael"},"content":"                phase \u003d Double.parseDouble(phasor);","lastModifiedDate":"2023-03-14"},{"lineNumber":259,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":260,"author":{"gitId":"YC-Michael"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":261,"author":{"gitId":"YC-Michael"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-03-14"},{"lineNumber":262,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":263,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":264,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":265,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"khooyourun":22,"YC-Michael":243}},{"path":"src/main/java/seedu/badMaths/trigograph/TrigoGraphVisualiser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badMaths.trigograph;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import seedu.badMaths.ui.Ui;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"import java.awt.Graphics;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"import java.awt.Color;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"import java.awt.Toolkit;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"import java.awt.Dimension;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"import javax.swing.JFrame;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"import javax.swing.JPanel;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"public class TrigoGraphVisualiser extends JPanel {","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"    private double amplitude;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"    private double phase;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"    private double freqInHz;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"    private double verticalShift;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"    private String trig;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"    private double xMin;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"    private double xMax;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"    private double yMin;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"    private  double yMax;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"    public TrigoGraphVisualiser(double amplitude, double phase, double freqInHz, double verticalShift, String trig) {","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"        this.amplitude \u003d amplitude;","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"        this.trig \u003d trig;","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"        this.phase \u003d phase;","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"        this.freqInHz \u003d freqInHz;","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"        this.verticalShift \u003d verticalShift;","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"        xMin \u003d (-2 * Math.PI) / freqInHz;","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"        xMax \u003d (2 * Math.PI) / freqInHz;","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"        yMin \u003d -10;","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"        yMax \u003d 10;","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"    protected void paintComponent(Graphics g) {","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"        super.paintComponent(g);","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"        int width \u003d getWidth();","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"        int height \u003d getHeight();","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"        // Calculate scaling factors","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"        double xScale \u003d width / (xMax - xMin);","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"        double yScale \u003d height / (yMax - yMin);","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"        // Translate to make origin at the center","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"        g.translate(width / 2, height / 2);","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"        createXAxis(g,xScale,yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"        createYAxis(g,xScale,yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"            switch (trig) {","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"            case (\"sin\"):","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"                drawSinCurve(g, xScale, yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"                break;","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"            case (\"cos\"):","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"                drawCosCurve(g, xScale, yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"YC-Michael"},"content":"                break;","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"YC-Michael"},"content":"            case (\"tan\"):","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"YC-Michael"},"content":"                drawTanCurve(g, xScale, yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"YC-Michael"},"content":"                break;","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"YC-Michael"},"content":"            default:","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"YC-Michael"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + trig);","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"YC-Michael"},"content":"        } catch (IllegalStateException e){","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"YC-Michael"},"content":"            Ui.printIncorrectFormatEntered();","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"YC-Michael"},"content":"    public void createYAxis(Graphics g, double xScale, double yScale) {","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"YC-Michael"},"content":"        g.setColor(Color.BLACK);","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"YC-Michael"},"content":"        g.drawLine(0, (int) (yMin * yScale), 0, (int) (yMax * yScale));","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"YC-Michael"},"content":"        g.drawString(\"Amplitude\",0,(int) ((yMin*yScale)+yMax*2));","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"YC-Michael"},"content":"    public void createXAxis(Graphics g, double xScale, double yScale) {","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"YC-Michael"},"content":"        g.setColor(Color.BLACK);","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"YC-Michael"},"content":"        g.drawLine((int) (xMin * xScale), 0, (int) (xMax * xScale), 0);","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"YC-Michael"},"content":"        g.drawString(\"Freq\",(int)((xMax*xScale)-xMax*4),0);","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"YC-Michael"},"content":"    public void drawSinCurve(Graphics g, double xScale, double yScale) {","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"YC-Michael"},"content":"        g.setColor(Color.BLUE);","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"YC-Michael"},"content":"        labelAmplitude(g,yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"YC-Michael"},"content":"        for (double x \u003d xMin; x \u003c\u003d xMax; x +\u003d 0.01) {","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"YC-Michael"},"content":"            double y \u003d amplitude * Math.sin(freqInHz*x+phase)+verticalShift;","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"YC-Michael"},"content":"            int xPixel \u003d (int) Math.round(x * xScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"YC-Michael"},"content":"            int yPixel \u003d (int) Math.round(-y * yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"YC-Michael"},"content":"            g.drawLine(xPixel - 1, yPixel, xPixel, yPixel);","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"YC-Michael"},"content":"    public void labelAmplitude(Graphics g, double yScale){","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"YC-Michael"},"content":"        g.drawString(String.valueOf(verticalShift+amplitude),0,","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"YC-Michael"},"content":"                (int)(Math.round(-(verticalShift+amplitude)*yScale)));","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"YC-Michael"},"content":"        g.drawString(String.valueOf(verticalShift-amplitude),0,","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"YC-Michael"},"content":"                (int)(Math.round(-(verticalShift-amplitude)*yScale)));","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"YC-Michael"},"content":"    public void drawCosCurve(Graphics g, double xScale, double yScale) {","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"YC-Michael"},"content":"        g.setColor(Color.RED);","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"YC-Michael"},"content":"        labelAmplitude(g,yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"YC-Michael"},"content":"        for (double x \u003d xMin; x \u003c\u003d xMax; x +\u003d 0.01) {","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"YC-Michael"},"content":"            double y \u003d amplitude * Math.cos(freqInHz*x)+verticalShift;","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"YC-Michael"},"content":"            int xPixel \u003d (int) Math.round(x * xScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"YC-Michael"},"content":"            int yPixel \u003d (int) Math.round(-y * yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"YC-Michael"},"content":"            g.drawLine(xPixel - 1, yPixel, xPixel, yPixel);","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"YC-Michael"},"content":"    public void drawTanCurve(Graphics g, double xScale, double yScale) {","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"YC-Michael"},"content":"        g.setColor(Color.BLACK);","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"YC-Michael"},"content":"        for (double x \u003d xMin; x \u003c\u003d xMax; x +\u003d 0.01) {","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"YC-Michael"},"content":"            double y \u003d amplitude * Math.tan(freqInHz*x)+verticalShift;","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"YC-Michael"},"content":"            int xPixel \u003d (int) Math.round(x * xScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"YC-Michael"},"content":"            int yPixel \u003d (int) Math.round(-y * yScale);","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"YC-Michael"},"content":"            g.drawLine(xPixel - 1, yPixel, xPixel, yPixel);","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"YC-Michael"},"content":"    public void startVisualiser() {","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"YC-Michael"},"content":"        JFrame frame \u003d new JFrame(\"Trigonometric Graph\");","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"YC-Michael"},"content":"        Dimension screenSize \u003d Toolkit.getDefaultToolkit().getScreenSize();","lastModifiedDate":"2023-03-22"},{"lineNumber":134,"author":{"gitId":"YC-Michael"},"content":"        int screenWidth \u003d screenSize.width;","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"YC-Michael"},"content":"        int screenHeight \u003d screenSize.height;","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"YC-Michael"},"content":"        frame.setSize(screenWidth/2, screenHeight/2);","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"YC-Michael"},"content":"        frame.setLocationRelativeTo(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"YC-Michael"},"content":"        frame.add(new TrigoGraphVisualiser(amplitude,phase,freqInHz,verticalShift,trig));","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"YC-Michael"},"content":"        frame.setVisible(true);","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"YC-Michael":142}},{"path":"src/main/java/seedu/badMaths/trigograph/TrigoGraphVisualiserStub.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badMaths.trigograph;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import seedu.badMaths.ui.Ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"public class TrigoGraphVisualiserStub {","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"    private String trig;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"    public TrigoGraphVisualiserStub(String trig) {","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"        this.trig \u003d trig;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"    public boolean startVisualiser() {","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"            switch (trig) {","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"            case (\"sin\"):","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"            case (\"cos\"):","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"            case (\"tan\"):","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"                return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"            default:","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + trig);","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"        } catch (IllegalStateException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"            Ui.printIncorrectFormatEntered();","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"            return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"YC-Michael":27}},{"path":"src/main/java/seedu/badMaths/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badMaths.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badMaths.Note;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"import seedu.badMaths.NotePriority;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"public class Ui {","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"    public static void printIncorrectFormatEntered() {","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Please enter the format as required.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"    public static void printNegativeAmplitudeEntered() {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Amplitude cannot be negative!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    public static void printAmplitude(double amplitude) {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"This is the amplitude: \" + amplitude);","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"    public static void printPhase(double phase) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"This is the phase: \" + phase);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"    public static void printVerticalShift(double verticalShift) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"This is the vertical shift: \" + verticalShift);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"    public static void printFrequency(Double freq) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"This is the freq (Hz): \" + freq);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printAddNote(String text, int size) {","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"You have added this note:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(text);","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printMark(String text) {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"You have marked this note as done:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(text);","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printUnmark(String text) {","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"You have unmarked this note:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(text);","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printDelete(String text, int size) {","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"You have removed this note:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(text);","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"Now you have \" + (size - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printNotes(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"ZiqiuZeng"},"content":"        if (notes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"You have no note yet. :(\");","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"ZiqiuZeng"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"Here are the notes you have stored:\");","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"ZiqiuZeng"},"content":"            for (int i \u003d 0; i \u003c notes.size(); i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println((i + 1) + \". \" + notes.get(i).toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"Now you have \" + notes.size() + \" tasks in the list.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printFindNotes(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"ZiqiuZeng"},"content":"        if (notes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"Sorry, no relevant results were found for this query. Please try other keywords.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"ZiqiuZeng"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"Here are the notes you are searching for:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"ZiqiuZeng"},"content":"            for (int i \u003d 0; i \u003c notes.size(); i++) {","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"ZiqiuZeng"},"content":"                System.out.println((i + 1) + \". \" + notes.get(i).toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printSpecificNote(int index, ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"ZiqiuZeng"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c notes.size()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"ZiqiuZeng"},"content":"            Note note \u003d notes.get(index);","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"Here is the note you are looking for: \");","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println((index + 1) + \": \" + note.toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"ZiqiuZeng"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(\"Invalid note index\");","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printPriority(int index, ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"ZiqiuZeng"},"content":"        NotePriority.Priority priority \u003d notes.get(index).getPriority();","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"ZiqiuZeng"},"content":"        String priorityStr \u003d priority.name();","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"You have changed its priority to\" + priorityStr);","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println((index + 1) + \": \" + notes.get(index).toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printNotesByReviewCount(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"ZiqiuZeng"},"content":"        // Sort notes by review count in descending order","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"ZiqiuZeng"},"content":"        notes.sort((note1, note2) -\u003e Integer.compare(note2.getReviewCount(), note1.getReviewCount()));","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"ZiqiuZeng"},"content":"        // Print out notes by review count","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"Notes sorted by review count:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(note.getText() + \" (review count: \" + note.getReviewCount() + \")\");","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"ZiqiuZeng"},"content":"    public static void printNotesByPriority(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e highPriorityNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e mediumPriorityNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"ZiqiuZeng"},"content":"        ArrayList\u003cNote\u003e lowPriorityNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : notes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"ZiqiuZeng"},"content":"            if (note.getPriority() \u003d\u003d NotePriority.Priority.HIGH) {","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"ZiqiuZeng"},"content":"                highPriorityNotes.add(note);","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"ZiqiuZeng"},"content":"            } else if (note.getPriority() \u003d\u003d NotePriority.Priority.MEDIUM) {","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"ZiqiuZeng"},"content":"                mediumPriorityNotes.add(note);","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"ZiqiuZeng"},"content":"            } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"ZiqiuZeng"},"content":"                lowPriorityNotes.add(note);","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"ZiqiuZeng"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"High priority notes:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : highPriorityNotes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(note.toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"Medium priority notes:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : mediumPriorityNotes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(note.toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"ZiqiuZeng"},"content":"        System.out.println(\"Low priority notes:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"ZiqiuZeng"},"content":"        for (Note note : lowPriorityNotes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"ZiqiuZeng"},"content":"            System.out.println(note.toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"ZiqiuZeng"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ZiqiuZeng":112,"YC-Michael":24}},{"path":"src/test/java/seedu/badMaths/CalculateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"0nandon"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"0nandon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"0nandon"},"content":"import seedu.badMaths.matrix.Calculate;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"0nandon"},"content":"import seedu.badMaths.matrix.Tensor2D;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"0nandon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"0nandon"},"content":"public class CalculateTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"0nandon"},"content":"    int[][] arr \u003d new int[][]{","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"0nandon"},"content":"        {0, 1, 2},","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"0nandon"},"content":"        {3, 4, 5},","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"0nandon"},"content":"        {6, 7, 8},","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"0nandon"},"content":"        {9, 10, 11}","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"0nandon"},"content":"    Tensor2D tensor \u003d new Tensor2D(arr);","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"0nandon"},"content":"    int[][] arrT \u003d new int[][]{","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"0nandon"},"content":"            {0, 3, 6, 9},","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"0nandon"},"content":"            {1, 4, 7, 10},","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"0nandon"},"content":"            {2, 5, 8, 11}","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"0nandon"},"content":"    Tensor2D tensorT \u003d new Tensor2D(arrT);","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"0nandon"},"content":"    int[][] dotResult \u003d new int[][]{","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"0nandon"},"content":"            {0, 1, 4},","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"0nandon"},"content":"            {9, 16, 25},","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"0nandon"},"content":"            {36, 49, 64},","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"0nandon"},"content":"            {81, 100, 121}","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"0nandon"},"content":"    Tensor2D dotResultTensor \u003d new Tensor2D(dotResult);","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"0nandon"},"content":"    int[][] mulResult \u003d new int[][]{","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"0nandon"},"content":"            {5, 14, 23, 32},","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"0nandon"},"content":"            {14, 50, 86, 122},","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"0nandon"},"content":"            {23, 86, 149, 212},","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"0nandon"},"content":"            {32, 122, 212, 302}","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"0nandon"},"content":"    Tensor2D mulResultTensor \u003d new Tensor2D(mulResult);","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"0nandon"},"content":"    int[][] addResult \u003d new int[][]{","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"0nandon"},"content":"            {0, 2, 4},","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"0nandon"},"content":"            {6, 8, 10},","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"0nandon"},"content":"            {12, 14, 16},","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"0nandon"},"content":"            {18, 20, 22}","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"0nandon"},"content":"    };","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"0nandon"},"content":"    Tensor2D addResultTensor \u003d new Tensor2D(addResult);","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"0nandon"},"content":"    public void testShapeStringConversion() {","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"0nandon"},"content":"        assertEquals(\"4 x 3\", new Tensor2D(arr).shape().toString());","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"0nandon"},"content":"    public void testMatrixTranspose(){","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003ctensorT.row(); i++){","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003ctensorT.column(); j++){","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"0nandon"},"content":"                assertEquals(tensorT.get(i, j), tensor.t().get(i, j));","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"0nandon"},"content":"    public void testMatrixDot(){","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"0nandon"},"content":"        Calculate c \u003d new Calculate();","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003ctensor.row(); i++){","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003ctensor.column(); j++){","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"0nandon"},"content":"                assertEquals(dotResultTensor.get(i, j), c.dot(tensor, tensor).get(i, j));","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"0nandon"},"content":"    public void testMatrixMul(){","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"0nandon"},"content":"        Calculate c \u003d new Calculate();","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003ctensor.row(); i++){","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003ctensor.column(); j++){","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"0nandon"},"content":"                assertEquals(mulResultTensor.get(i, j), c.mul(tensor, tensor.t()).get(i, j));","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"0nandon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"0nandon"},"content":"    public void testMatrixAdd(){","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"0nandon"},"content":"        Calculate c \u003d new Calculate();","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"0nandon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"0nandon"},"content":"        for(int i\u003d0; i\u003ctensor.row(); i++){","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"0nandon"},"content":"            for(int j\u003d0; j\u003ctensor.column(); j++){","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"0nandon"},"content":"                assertEquals(addResultTensor.get(i, j), c.add(tensor, tensor).get(i, j));","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"0nandon"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"0nandon"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"0nandon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"0nandon"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"0nandon":95}},{"path":"src/test/java/seedu/badMaths/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"khooyourun":1,"-":11}},{"path":"src/test/java/seedu/badMaths/HelpManualTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZiqiuZeng"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"ZiqiuZeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"ZiqiuZeng"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"ZiqiuZeng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"ZiqiuZeng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"ZiqiuZeng"},"content":"import java.util.logging.Handler;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"ZiqiuZeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"ZiqiuZeng"},"content":"class HelpManualTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"ZiqiuZeng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"ZiqiuZeng"},"content":"    public void testReadHelpManual() throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"ZiqiuZeng"},"content":"        final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ZiqiuZeng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"ZiqiuZeng"},"content":"        Logger logger \u003d Logger.getLogger(HelpManual.class.getName());","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"ZiqiuZeng"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"ZiqiuZeng"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"ZiqiuZeng"},"content":"        Handler handler \u003d new java.util.logging.StreamHandler(outContent, new java.util.logging.SimpleFormatter());","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"ZiqiuZeng"},"content":"        handler.setLevel(Level.ALL);","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"ZiqiuZeng"},"content":"        logger.addHandler(handler);","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"ZiqiuZeng"},"content":"        // Call the readHelpManual() method","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"ZiqiuZeng"},"content":"        HelpManual.readHelpManual();","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"ZiqiuZeng"},"content":"        // Check that the content is not null","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ZiqiuZeng"},"content":"        assertNotNull(outContent.toString());","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"ZiqiuZeng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"ZiqiuZeng"},"content":"        // Check if the output matches the expected output","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"ZiqiuZeng"},"content":"        String expectedOutput \u003d new String(Files.readAllBytes(Paths.get(\"src/main/resources/HelpManual.txt\")));","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"ZiqiuZeng"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"ZiqiuZeng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"ZiqiuZeng"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"ZiqiuZeng":44}},{"path":"src/test/java/seedu/badMaths/NotesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"class NotesTest { // this class contains the various test methods","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"    ArrayList\u003cString\u003e cache \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"    public void handleCache() {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"        String toDo \u003d \"toDo\";","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"        String input \u003d \"Notes\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"        switch (input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"        case \"Notes\":","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"            cache.add(toDo);","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"            System.out.println(\"You have stored: \" + toDo);","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"            break;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"        case \"List\":","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"            System.out.println(\"Here are the notes that you have stored:\");","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"            for (int i \u003d 0; i \u003c cache.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"                String notesItem \u003d cache.get(i);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println((i + 1) + \". \" + notesItem);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"            break;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"        default:","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"        assertEquals(\"You have stored: toDo\", \"You have stored: \" + toDo);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"WilsonLee2000":30}},{"path":"src/test/java/seedu/badMaths/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"class ParserTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"    void getCommandShouldReturnCommandWithoutDot() {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"        String userInput \u003d \"Store. store this\";","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"        Parser parserTest \u003d new Parser(userInput);","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"        String commandTest \u003d parserTest.getCommand();","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"        assertEquals(commandTest, \"Store\");","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    void getToDoShouldReturnInvalidForSingleWordInput() {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"        String userInput \u003d \"Help.\";","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        Parser parserTest \u003d new Parser(userInput);","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        String toDoTest \u003d parserTest.getToDo();","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"        assertEquals(toDoTest, \"Invalid todo\");","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"khooyourun":24}},{"path":"src/test/java/seedu/badMaths/QuadraticTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"class QuadraticTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    void findAShouldReturnA() {","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"        String toDo \u003d \"-2x^2 + 5x + 3\";","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"        Quadratic quadraticTest \u003d new Quadratic(toDo);","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"        int A \u003d quadraticTest.findA();","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"        assertEquals(-2, A);","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"    void findBShouldReturnB() {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        String toDo \u003d \"-2x^2 + 5x + 3\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        Quadratic quadraticTest \u003d new Quadratic(toDo);","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"        int B \u003d quadraticTest.findB();","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"        assertEquals(5, B);","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    void findCShouldReturnC() {","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"        String toDo \u003d \"-2x^2 + 5x + 3\";","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"        Quadratic quadraticTest \u003d new Quadratic(toDo);","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        int C \u003d quadraticTest.findC();","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"        assertEquals(3, C);","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"    void quadraticFormulaShouldReturnArrayOfX() {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"        String toDo \u003d \"-2x^2 + 5x + 3\";","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"        Quadratic quadraticTest \u003d new Quadratic(toDo);","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"        ArrayList\u003cDouble\u003e xStoreTest \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"        xStoreTest \u003d quadraticTest.quadraticFormula(-2, 5, 3);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"        assertEquals(-0.5,xStoreTest.get(0));","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"        assertEquals(3.0,xStoreTest.get(1));","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"khooyourun":42}},{"path":"src/test/java/seedu/badMaths/TrigoGraphTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badMaths;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"class TrigoGraphTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"    void splitAmplitude_oneSplit_expectTwoParts() {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"        String equation \u003d \"2*sin(2*pi*x+1)+3\";","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"        String separator \u003d \"\\\\*\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"        String [] amplitudeAndEqn \u003d equation.split(\"\\\\*\",2);","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(2,amplitudeAndEqn.length);","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"    void splitAmplitude_noAmplitude_expectException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"        String equation \u003d \"sin(2*pi*x+1)+3\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"        String separator \u003d \"\\\\*\";","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"        String[] amplitudeAndEqn \u003d equation.split(\"\\\\*\", 2);","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"        assertThrows(NumberFormatException.class,()-\u003eDouble.parseDouble(amplitudeAndEqn[0]));","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"    void splitTrigoAndVerticalShift_doubleDigitsVShift_expectSameOutput() {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"        String equation_Pos \u003d \"sin(2*pi*x+1)+36\";","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"        double answer \u003d 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"        String[] TrigoAndVerticalShift \u003d equation_Pos.split(\"\\\\)\", 2);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"        if (TrigoAndVerticalShift[1].trim().contains(\"+\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"            answer \u003d Double.parseDouble(TrigoAndVerticalShift[1].substring(1).trim());","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(36,answer);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"    void splitTrigoIntoPhasors_startEndPosPhase_expectPhase() {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"        String trigo \u003d \"sin(2*pi*x+1\";","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"        int startPosOfPhase \u003d trigo.indexOf(\"(\") + 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"        int endPosOfPhase \u003d trigo.length();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"        String phase \u003d trigo.substring(startPosOfPhase,endPosOfPhase);","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"        assertEquals(\"2*pi*x+1\", phase);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"    void splitPhasorsIntoFreq_phasors_expectFreqAndShift() {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"        String phasors \u003d \"2*pi*x+1\";","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"        String [] freqAndShift \u003d phasors.split(\"\\\\+\",2);","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"        String freqWithX \u003d freqAndShift[0];","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"        String [] freqComponents \u003d freqWithX.split(\"\\\\*\",3);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"        Double freq;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"        if(phasors.contains(\"pi\")){","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"            freq \u003d Double.parseDouble(freqComponents[0])/2;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"        }else{","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"            freq \u003d Double.parseDouble(freqComponents[0])/(2*Math.PI);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"        assertEquals(1.0, freq);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"        assertEquals(\"1\", freqAndShift[1]);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"khooyourun":23,"YC-Michael":35}},{"path":"src/test/java/seedu/badMaths/trigograph/TrigoGraphAnalyserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badMaths.trigograph;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"class TrigoGraphAnalyserTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"    void negativeAmplitudeShouldReturnIllegalArgumentException(){","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"        String equation \u003d \"-2*sin(2*pi*x+1)+3\";","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser analyser \u003d new TrigoGraphAnalyser(equation);","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"        assertThrows(GraphException.class,()-\u003e{","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"            analyser.splitAmplitudeFromTrigoEqn();","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"        });","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    void amplitudeOfOneShouldReturnOne() throws GraphException {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"        String equation \u003d \"sin(2*pi*x+1)+3\";","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser analyser \u003d new TrigoGraphAnalyser(equation);","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"        String [] input \u003d analyser.splitAmplitudeFromTrigoEqn();","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"        analyser.findAmplitude(input);","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(1.0,analyser.getAmplitude());","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"    void wrongFreqFormat_withMinus_expectsNumberFormatException(){","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"        String eqn \u003d \"2*cos(-*x+5)-2\";","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser test \u003d new TrigoGraphAnalyser(eqn);","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"        assertThrows(NumberFormatException.class,()-\u003e{","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"            test.findFreq(\"-*x\",true);","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"        });","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"YC-Michael":33}},{"path":"src/test/java/seedu/badMaths/trigograph/TrigoGraphTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badMaths.trigograph;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"class TrigoGraphTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    void validEqn_withMinus_expectCanStartAnalyser(){","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"        String eqn \u003d \"cos(-1*x-1)-1\";","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser test \u003d new TrigoGraphAnalyser(eqn);","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(true,test.canStartAnalyser());","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    void validEqn_returnsCorrectDetails() {","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"        String eqn \u003d \"2*tan(2*pi*x+1)-9\";","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser graphTest \u003d new TrigoGraphAnalyser(eqn);","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"        graphTest.canStartAnalyser();","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(2.0,graphTest.getAmplitude());","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(\"tan\",graphTest.getTrigonometry());","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(1.0,graphTest.getFreq());","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(1.0,graphTest.getPhase());","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(-9.0,graphTest.getVerticalShift());","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"    void invalidEqn_withMultipleTrigo_expectCanStartAnalyserAsFalse() {","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"        String eqn1 \u003d \"2*tan*tan(2*pi*x+1)-9\";","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser test \u003d new TrigoGraphAnalyser(eqn1);","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(false,test.canStartAnalyser());","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"    void invalidEqn2_withMultipleTrigo_expectCanStartAnalyserAsFalse() {","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"        String eqn2 \u003d \"2*tantan(2*pi*x+1)-9\";","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphAnalyser test \u003d new TrigoGraphAnalyser(eqn2);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(false,test.canStartAnalyser());","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"YC-Michael":42}},{"path":"src/test/java/seedu/badMaths/trigograph/TrigoGraphVisualiserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"package seedu.badMaths.trigograph;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"class TrigoGraphVisualiserTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    public void invalidtTrigo_expect_exception(){","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"        TrigoGraphVisualiserStub test \u003d new TrigoGraphVisualiserStub(\"tann\");","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"        assertEquals(false,test.startVisualiser());","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"        ","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"    }        ","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"    ","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"YC-Michael":16}}]
